{"docstore/data": {"316360b8-80e8-4a86-ace0-43fae4cab0c6": {"__data__": {"id_": "316360b8-80e8-4a86-ace0-43fae4cab0c6", "embedding": null, "metadata": {"Header_2": " **Introduction**", "filename": "automate-online-tasks-with-multion-and-llamaindex.md", "extension": ".md", "title": "Automate online tasks with MultiOn and LlamaIndex", "date": "May 23, 2024", "url": "https://www.llamaindex.ai/blog/automate-online-tasks-with-multion-and-llamaindex"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a9e6d1e5-5c16-44e7-96d2-6998defbd9fb", "node_type": "4", "metadata": {"filename": "automate-online-tasks-with-multion-and-llamaindex.md", "extension": ".md", "title": "Automate online tasks with MultiOn and LlamaIndex", "date": "May 23, 2024", "url": "https://www.llamaindex.ai/blog/automate-online-tasks-with-multion-and-llamaindex"}, "hash": "71fc333b547ff340b7e6a778dba56912a60c8ea373f3daea35ffd6b7af822d9a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "34969090-d8a6-4b44-a86a-d55fab36c182", "node_type": "1", "metadata": {"Header_2": " **Technical walkthrough: Integrating MultiOn with LlamaIndex**"}, "hash": "d59a103db87425414f40a8097b86ee48b3415afeefe99f206284de81c2477921", "class_name": "RelatedNodeInfo"}}, "text": "**Introduction**\n\nMultiOn is an AI agents platform designed to facilitate the autonomous\ncompletion of tasks in any web environment. It empowers developers to build AI\nagents that can manage online activities from start to finish, handling\neverything from simple data retrieval to complex interactions.\n\nLlamaIndex complements this by providing an orchestration framework that\nbridges the gap between private and public data essential for building\napplications with Large Language Models. It facilitates data ingestion,\nindexing, and querying, making it indispensable for developers looking to\nleverage generative AI.\n\nIn this article, we'll demonstrate how MultiOn's capabilities can be\nseamlessly integrated within the LlamaIndex framework, showcasing a practical\napplication that leverages both technologies to automate and streamline web\ninteractions.", "mimetype": "text/plain", "start_char_idx": 4, "end_char_idx": 859, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "34969090-d8a6-4b44-a86a-d55fab36c182": {"__data__": {"id_": "34969090-d8a6-4b44-a86a-d55fab36c182", "embedding": null, "metadata": {"Header_2": " **Technical walkthrough: Integrating MultiOn with LlamaIndex**", "filename": "automate-online-tasks-with-multion-and-llamaindex.md", "extension": ".md", "title": "Automate online tasks with MultiOn and LlamaIndex", "date": "May 23, 2024", "url": "https://www.llamaindex.ai/blog/automate-online-tasks-with-multion-and-llamaindex"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a9e6d1e5-5c16-44e7-96d2-6998defbd9fb", "node_type": "4", "metadata": {"filename": "automate-online-tasks-with-multion-and-llamaindex.md", "extension": ".md", "title": "Automate online tasks with MultiOn and LlamaIndex", "date": "May 23, 2024", "url": "https://www.llamaindex.ai/blog/automate-online-tasks-with-multion-and-llamaindex"}, "hash": "71fc333b547ff340b7e6a778dba56912a60c8ea373f3daea35ffd6b7af822d9a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "316360b8-80e8-4a86-ace0-43fae4cab0c6", "node_type": "1", "metadata": {"Header_2": " **Introduction**", "filename": "automate-online-tasks-with-multion-and-llamaindex.md", "extension": ".md", "title": "Automate online tasks with MultiOn and LlamaIndex", "date": "May 23, 2024", "url": "https://www.llamaindex.ai/blog/automate-online-tasks-with-multion-and-llamaindex"}, "hash": "3e1fd73133851f227eeca64924e8390e0a79a6b1c58163b972410a48e0772e06", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41d0cc38-66c5-45a4-ac42-176f00a0e5c4", "node_type": "1", "metadata": {"Header_2": " Next Steps"}, "hash": "7e8017c8f5823df2e0cfa16748940ab488c4e13f9f403acc7085202b4ae0ae79", "class_name": "RelatedNodeInfo"}}, "text": "**Technical walkthrough: Integrating MultiOn with LlamaIndex**\n\nLet\u2019s explore a practical example where MultiOn and LlamaIndex work in tandem\nto manage email interactions and web browsing.\n\n**Step 1: Setting Up the Environment** We begin by setting up our AI agent\nwith the necessary configurations and API keys:\n\n    \n    \n    import openai\n    from llama_index.agent.openai import OpenAIAgent\n    openai.api_key = \"sk-your-key\"\n    \n    from llama_index.tools.multion import MultionToolSpec\n    multion_tool = MultionToolSpec(api_key=\"your-multion-key\")\n\n**Step 2: Integrating Gmail Search Tool** Next, we integrate a Gmail search\ntool to help our agent fetch and analyze emails, providing the necessary\ncontext for further actions:\n\n    \n    \n    from llama_index.tools.google import GmailToolSpec\n    from llama_index.core.tools.ondemand_loader_tool import OnDemandLoaderTool\n    \n    gmail_tool = GmailToolSpec()\n    gmail_loader_tool = OnDemandLoaderTool.from_tool(\n        gmail_tool.to_tool_list()[1],\n        name=\"gmail_search\",\n        description=\"\"\"\n             This tool allows you to search the users gmail inbox and give directions for how to summarize or process the emails\n    \n            You must always provide a query to filter the emails, as well as a query_str to process the retrieved emails.\n            All parameters are required\n            \n            If you need to reply to an email, ask this tool to build the reply directly\n            Examples:\n                query='from:adam subject:dinner', max_results=5, query_str='Where are adams favourite places to eat'\n                query='dentist appointment', max_results=1, query_str='When is the next dentist appointment'\n                query='to:jerry', max_results=1, query_str='summarize and then create a response email to jerrys latest email'\n                query='is:inbox', max_results=5, query_str='Summarize these emails'\n        \"\"\"\n    )\n\n**Step 3: Initialize agent**\n\nInitialise the agent with tools and a system prompt\n\n    \n    \n    agent = OpenAIAgent.from_tools(\n        [*multion_tool.to_tool_list(), gmail_loader_tool],\n        system_prompt=\"\"\"\n    \t    You are an AI agent that assists the user in crafting email responses based on previous conversations.\n    \t    \n    \t    The gmail_search tool connects directly to an API to search and retrieve emails, and answer questions based on the content.\n    \t    The browse tool allows you to control a web browser with natural language to complete arbitrary actions on the web.\n    \t    \n    \t    Use these two tools together to gain context on past emails and respond to conversations for the user.\n        \"\"\"\n    )\n\n**Step 4: Agent Execution Flow** With our tools integrated, the agent is now\nequipped to perform a series of tasks:\n\n**1\\. Search and Summarize Emails** : The agent uses LlamaIndex's Gmail tool\nto fetch relevant emails and summarize the content, providing a basis for\ndrafting a response.\n\n    \n    \n    print(agent.chat(\"browse to the latest email from Julian and open the email\"))\n    \n    \n    Added user message to memory: browse to the latest email from Julian and open the email\n    === Calling Function ===\n    Calling function: gmail_search with args: {\"query\":\"from:Julian\",\"max_results\":1,\"query_str\":\"Browse to the latest email from Julian and open the email\"}\n    Please visit this URL to authorize this application: https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=1054044249014.apps.googleusercontent.com&redirect_uri=http%3A%2F%2Flocalhost%3A8080%2F&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fgmail.compose+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fgmail.readonly&state=JSdsfdsi990sddsd&access_type=offline\n    Got output: Open the email from Julian to view the latest communication.\n    ========================\n     \n    I have opened the latest email from Julian for you to view. If you need any specific information or action to be taken, please let me know.\n\n**2\\. Generate Response** : Based on the summarized information, the agent\ncrafts an appropriate response to the email chain.\n\n    \n    \n    print(agent.chat(\n    \t\"Summarize the email chain with julian and create a response to the last email that confirms all the details\"\n    ))\n    \n    \n    Added user message to memory: Summarize the email chain with julian and create a response to the last email that confirms all the details\n    === Calling Function ===\n    Calling function: gmail_search with args: {\"query\":\"from:Julian\",\"max_results\":1,\"query_str\":\"Summarize the email chain with Julian and create a response to the last email confirming all the details\"}\n    Got output: The email chain with Julian involved a change in an event scheduled for Friday, August 6, 2021, from 15:30 to 16:00 United Kingdom Time on Google Meet. The instructions for joining were provided in the description. The email also included contact information for joining the meeting. Julian and Nassar were listed as attendees, with Julian being the organizer. The email was authenticated and passed SPF and DKIM checks.\n    \n    In response to the last email, I would confirm all the details of the event change, reiterating the date, time, platform (Google Meet), and any specific instructions provided. I would express gratitude for the update and confirm attendance at the revised event timing.\n    ========================\n    \n    Based on the email chain with Julian, here is a summary:\n    - The event scheduled for Friday, August 6, 2021, has been changed from 15:30 to 16:00 United Kingdom Time on Google Meet.\n    - Instructions for joining the meeting were provided in the email.\n    - Attendees included Julian and Nassar, with Julian as the organizer.\n    - The email passed SPF and DKIM checks.\n    \n    To respond and confirm all the details, you can mention the revised event date and time, the platform (Google Meet), and express gratitude for the update. Confirm your attendance at the new timing. Let me know if you would like me to draft the response email for you.\n\n**3\\. Send Email through MultiOn** : Finally, the generated response is passed\nto the MultiOn agent, which manages the action of sending the email through\nthe web browser.\n\n    \n    \n    print(agent.chat(\n    \t\"pass the entire generated email to the browser and have it send the email as a reply to the chain\"\n    ))\n    \n    \n    Added user message to memory: pass the entire generated email to the browser and have it send the email as a reply to the chain\n    === Calling Function ===\n    Calling function: browse with args: {\"cmd\": \"Compose a reply email to Julian confirming the event change to Fri 6 Aug 2021 from 15:30 to 16:00 UK Time on Google Meet. Express readiness to attend and thank Julian for the details.\"}\n    Got output: Email response sent to Julian\n    ========================", "mimetype": "text/plain", "start_char_idx": 865, "end_char_idx": 7712, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41d0cc38-66c5-45a4-ac42-176f00a0e5c4": {"__data__": {"id_": "41d0cc38-66c5-45a4-ac42-176f00a0e5c4", "embedding": null, "metadata": {"Header_2": " Next Steps", "filename": "automate-online-tasks-with-multion-and-llamaindex.md", "extension": ".md", "title": "Automate online tasks with MultiOn and LlamaIndex", "date": "May 23, 2024", "url": "https://www.llamaindex.ai/blog/automate-online-tasks-with-multion-and-llamaindex"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a9e6d1e5-5c16-44e7-96d2-6998defbd9fb", "node_type": "4", "metadata": {"filename": "automate-online-tasks-with-multion-and-llamaindex.md", "extension": ".md", "title": "Automate online tasks with MultiOn and LlamaIndex", "date": "May 23, 2024", "url": "https://www.llamaindex.ai/blog/automate-online-tasks-with-multion-and-llamaindex"}, "hash": "71fc333b547ff340b7e6a778dba56912a60c8ea373f3daea35ffd6b7af822d9a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "34969090-d8a6-4b44-a86a-d55fab36c182", "node_type": "1", "metadata": {"Header_2": " **Technical walkthrough: Integrating MultiOn with LlamaIndex**", "filename": "automate-online-tasks-with-multion-and-llamaindex.md", "extension": ".md", "title": "Automate online tasks with MultiOn and LlamaIndex", "date": "May 23, 2024", "url": "https://www.llamaindex.ai/blog/automate-online-tasks-with-multion-and-llamaindex"}, "hash": "07a68a51f774bca3715dfa24b8715737d4da8b734bf72776cad1983fb7c584a2", "class_name": "RelatedNodeInfo"}}, "text": "Next Steps\n\nMultiOn is an officially supported tool on LlamaHub, the central page for all\nLlamaIndex integrations (from tools to LLMs to vector stores). Check out the [\nLlamaHub page ](https://llamahub.ai/l/tools/llama-index-tools-multion?from=)\nhere.\n\nIf you\u2019re interested in running through this tutorial on building a browser +\nGmail-powered agent yourself, check out our [ notebook\n](https://github.com/run-llama/llama_index/blob/main/llama-index-\nintegrations/tools/llama-index-tools-multion/examples/multion.ipynb) .\n\nThe integration of MultiOn and LlamaIndex offers a powerful toolkit for\ndevelopers aiming to automate and streamline online tasks. As these\ntechnologies evolve, they will continue to unlock new potentials in AI\napplication, significantly impacting how developers interact with digital\nenvironments and manage data.", "mimetype": "text/plain", "start_char_idx": 7718, "end_char_idx": 8556, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"316360b8-80e8-4a86-ace0-43fae4cab0c6": {"doc_hash": "3e1fd73133851f227eeca64924e8390e0a79a6b1c58163b972410a48e0772e06", "ref_doc_id": "a9e6d1e5-5c16-44e7-96d2-6998defbd9fb"}, "34969090-d8a6-4b44-a86a-d55fab36c182": {"doc_hash": "07a68a51f774bca3715dfa24b8715737d4da8b734bf72776cad1983fb7c584a2", "ref_doc_id": "a9e6d1e5-5c16-44e7-96d2-6998defbd9fb"}, "41d0cc38-66c5-45a4-ac42-176f00a0e5c4": {"doc_hash": "5fbbb36afef05faeb1067909d504449f256c27c1abb544f8abdcccd73279356d", "ref_doc_id": "a9e6d1e5-5c16-44e7-96d2-6998defbd9fb"}}, "docstore/ref_doc_info": {"a9e6d1e5-5c16-44e7-96d2-6998defbd9fb": {"node_ids": ["316360b8-80e8-4a86-ace0-43fae4cab0c6", "34969090-d8a6-4b44-a86a-d55fab36c182", "41d0cc38-66c5-45a4-ac42-176f00a0e5c4"], "metadata": {"Header_2": " **Introduction**", "filename": "automate-online-tasks-with-multion-and-llamaindex.md", "extension": ".md", "title": "Automate online tasks with MultiOn and LlamaIndex", "date": "May 23, 2024", "url": "https://www.llamaindex.ai/blog/automate-online-tasks-with-multion-and-llamaindex"}}}}