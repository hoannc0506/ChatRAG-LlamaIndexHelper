{"docstore/data": {"dc69bffa-b8c3-40d3-b06c-04c60a3cdffd": {"__data__": {"id_": "dc69bffa-b8c3-40d3-b06c-04c60a3cdffd", "embedding": null, "metadata": {"Header_1": " What is a Retriever?", "filename": "building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4.md", "extension": ".md", "title": "Building a Fully Open Source Retriever with Nomic Embed and LlamaIndex", "date": "Jan 30, 2024", "url": "https://www.llamaindex.ai/blog/building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a72c1c0c-dd7b-42bf-936d-3626edcb9db9", "node_type": "4", "metadata": {"filename": "building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4.md", "extension": ".md", "title": "Building a Fully Open Source Retriever with Nomic Embed and LlamaIndex", "date": "Jan 30, 2024", "url": "https://www.llamaindex.ai/blog/building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4"}, "hash": "85b9c524f0c9eaf62c053d85f1c689792f370e84d3c0cfdc090387f41379f2e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41f05074-defb-476a-bd41-70592c838043", "node_type": "1", "metadata": {"Header_1": " Why Open Source?"}, "hash": "8c242052e1edc428e17382d9aa62446ba96f3afc2b29237ce6472543cbccf06a", "class_name": "RelatedNodeInfo"}}, "text": "What is a Retriever?\n\nRecently, retrieval augmented generation (RAG) has enabled language models to\nreduce hallucinations, improve response quality, and maintain up-to-date\nknowledge of the world _without_ requiring retraining of the model itself.\nThis is done by equipping a language model with a _retriever_ and a\n_database._ At inference time, a RAG system uses the retriever to select\nrelevant documents from the database, and passes them to the language model\ncontext window.\n\nToday, the most popular type of retriever is based on an embedding model. This\nembedding model converts all of the documents in the database to a vector\nrepresentation. Then, at inference time, it converts the query to a vector\nrepresentation, and retrieves the most similar documents to the query vector\nfrom the database.\n\nIn this post, we are going to show you how to build a fully open source\nretriever using LlamaIndex and Nomic Embed, the first fully open source\nembedding model to exceed OpenAI Ada performance on both short and long\ncontext benchmarks.", "mimetype": "text/plain", "start_char_idx": 3, "end_char_idx": 1045, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "41f05074-defb-476a-bd41-70592c838043": {"__data__": {"id_": "41f05074-defb-476a-bd41-70592c838043", "embedding": null, "metadata": {"Header_1": " Why Open Source?", "filename": "building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4.md", "extension": ".md", "title": "Building a Fully Open Source Retriever with Nomic Embed and LlamaIndex", "date": "Jan 30, 2024", "url": "https://www.llamaindex.ai/blog/building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a72c1c0c-dd7b-42bf-936d-3626edcb9db9", "node_type": "4", "metadata": {"filename": "building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4.md", "extension": ".md", "title": "Building a Fully Open Source Retriever with Nomic Embed and LlamaIndex", "date": "Jan 30, 2024", "url": "https://www.llamaindex.ai/blog/building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4"}, "hash": "85b9c524f0c9eaf62c053d85f1c689792f370e84d3c0cfdc090387f41379f2e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dc69bffa-b8c3-40d3-b06c-04c60a3cdffd", "node_type": "1", "metadata": {"Header_1": " What is a Retriever?", "filename": "building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4.md", "extension": ".md", "title": "Building a Fully Open Source Retriever with Nomic Embed and LlamaIndex", "date": "Jan 30, 2024", "url": "https://www.llamaindex.ai/blog/building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4"}, "hash": "074d3f4874a8edf4c97065fc5e389fa0cab9e3cb7367f1ad50d770842ac9feb8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "45ab55c2-139d-4ee1-8ad5-57ed58c518b6", "node_type": "1", "metadata": {"Header_1": " How To"}, "hash": "a7f69b58f01ede5ccafd9cc6584c79260d35e600989a17932f71a6f0ad229645", "class_name": "RelatedNodeInfo"}}, "text": "Why Open Source?\n\nAs AI becomes deployed in increasingly high impact domains, such as defense,\nmedicine, and finance, end-to-end auditability of the entire system becomes a\nkey component of safe AI deployment. Unfortunately, the closed source\nembedding models used in most RAG systems today have deliberately obfuscated\ntraining protocols and cannot be audited.\n\nFurther, as organizations adopting AI begin to mature, reliance on closed\nsource embedding models will result in vendor lock-in and a limited ability to\nmodify the embedding model to suit the needs of the business.\n\nLuckily, fully open source embedding models like Nomic Embed offer end-to-end\nauditability of the training process as well as a strong basis for further\nimprovements and modifications of the model.", "mimetype": "text/plain", "start_char_idx": 1050, "end_char_idx": 1826, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "45ab55c2-139d-4ee1-8ad5-57ed58c518b6": {"__data__": {"id_": "45ab55c2-139d-4ee1-8ad5-57ed58c518b6", "embedding": null, "metadata": {"Header_1": " How To", "filename": "building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4.md", "extension": ".md", "title": "Building a Fully Open Source Retriever with Nomic Embed and LlamaIndex", "date": "Jan 30, 2024", "url": "https://www.llamaindex.ai/blog/building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a72c1c0c-dd7b-42bf-936d-3626edcb9db9", "node_type": "4", "metadata": {"filename": "building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4.md", "extension": ".md", "title": "Building a Fully Open Source Retriever with Nomic Embed and LlamaIndex", "date": "Jan 30, 2024", "url": "https://www.llamaindex.ai/blog/building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4"}, "hash": "85b9c524f0c9eaf62c053d85f1c689792f370e84d3c0cfdc090387f41379f2e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41f05074-defb-476a-bd41-70592c838043", "node_type": "1", "metadata": {"Header_1": " Why Open Source?", "filename": "building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4.md", "extension": ".md", "title": "Building a Fully Open Source Retriever with Nomic Embed and LlamaIndex", "date": "Jan 30, 2024", "url": "https://www.llamaindex.ai/blog/building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4"}, "hash": "e34f92fb5ca4faed568e04e6936e12106fd10b17e57c486906709c8918303194", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b61aeca-9e38-4b36-b6ec-080a86849c10", "node_type": "1", "metadata": {"Header_1": " Conclusion & Next Steps"}, "hash": "af801609170b491eb4cd9b9dba4504b7f128b82fc757512c738460fd592ad03e", "class_name": "RelatedNodeInfo"}}, "text": "How To\n\nTo build an open source retriever with LlamaIndex and Nomic Embed, we will\nstart by importing the relevant libraries\n\n    \n    \n    from llama_index.embeddings import NomicEmbedding\n    from llama_index import (\n        VectorStoreIndex,\n        SimpleDirectoryReader,\n        ServiceContext,\n    )\n\nNext, we need to download some data for our database. For this example, we are\ngoing to use an essay by Paul Graham, which we download from [ here\n](https://raw.githubusercontent.com/run-\nllama/llama_index/main/docs/examples/data/paul_graham/paul_graham_essay.txt)\nand place into a directory named ./data/paul_graham.\n\nNow, it\u2019s time to get the vectors for the documents in our database. To do\nthis, we are going to use the LlamaIndex SimpleDirectoryReader and Nomic\u2019s\nhosted inference service. You\u2019ll have to replace <NOMIC_API_KEY> with your\nNomic API key, which you can get after signing up for Nomic Atlas [ here\n](https://atlas.nomic.ai/) .\n\n    \n    \n    documents = SimpleDirectoryReader(\"./data/paul_graham/\").load_data()\n    nomic_api_key = \"&lt;NOMIC_API_KEY&gt;\"\n    embed_model = NomicEmbedding(\n        api_key=nomic_api_key,\n        model_name=\"nomic-embed-text-v1\",\n        task_type=\"search_document\"\n    )\n    service_context = ServiceContext.from_defaults(\n        embed_model=embed_model, chunk_size=1024,\n    )\n    index = VectorStoreIndex.from_documents(\n        documents=documents, service_context=service_context, show_progress=True\n    )\n\nNotice that we set task_type to search_document in NomicEmbedding. Nomic Embed\nsupports many different types of tasks, and search_document is optimized for\nbuilding representations of documents for RAG databases.\n\nOnce our database is set up, we are ready to build our retriever. Using\nLlamaIndex, this is as simple as a few lines of python:\n\n    \n    \n    embed_model = NomicEmbedding(\n        api_key=nomic_api_key,\n        model_name=\"nomic-embed-text-v1\",\n        task_type=\"search_query\"\n    )\n    \n    service_context = ServiceContext.from_defaults(\n        embed_model=embed_model\n    )\n    \n    search_query_retriever = index.as_retriever(service_context=service_context, similarity_top_k=1)\n\nAgain, notice that we are using a new NomicEmbedding model with task_type set\nto search_query. This task type is optimized for embedding queries for search\nover a retrieval database.\n\nFinally, we can use our retriever to surface relevant documents given user\nqueries! As an example:\n\n    \n    \n    retrieved_nodes_nomic = retriever_nomic.retrieve(\n        \"What software did Paul write?\"\n    )\n\nreturns a document that describes Paul\u2019s first programs:\n\n    \n    \n    Node ID: 380fbb0e-6fc1-41de-a4f6-3f22cd508df3\n    Similarity: 0.6087318771843091\n    Text: What I Worked On\n    \n    February 2021\n    \n    Before college the two main things I worked on, outside of school, were writing and programming. I didn't write essays. I wrote what beginning writers were supposed to write then, and probably still are: short stories. My stories were awful. They had hardly any plot, just characters with strong feelings, which I imagined made them deep.\n    \n    The first programs I tried writing were on the IBM 1401 that our school district used for what was then called \"data processing.\" This was in 9th grade, so I was 13 or 14. The school district's 1401 happened to be in the basement of our junior high school, and my friend Rich Draves and I got permission to use it. It was like a mini Bond villain's lair down there, with all these alien-looking machines \u2014 CPU, disk drives, printer, card reader \u2014 sitting up on a raised floor under bright fluorescent lights.\n    \n    The language we used was an early version of Fortran. You had to type programs on punch cards, then stack them in the card reader and press a button to load the program into memory and run it. The result would ordinarily be to print something on the spectacularly loud printer.\n    \n    I was puzzled by the 1401. I couldn't figure out what to do with it. And in retrospect there's not much I could have done with it. The only form of input to programs was data stored on punched cards, and I didn't have any data stored on punched cards. The only other option was to do things that didn't rely on any input, like calculate approximations of pi, but I didn't know enough math to do anything interesting of that type. So I'm not surprised I can't remember any programs I wrote, because they can't have done much. My clearest memory is of the moment I learned it was possible for programs not to terminate, when one of mine didn't. On a machine without time-sharing, this was a social as well as a technical error, as the data center manager's expression made clear.\n    \n    With microcomputers, everything changed.", "mimetype": "text/plain", "start_char_idx": 1831, "end_char_idx": 6591, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9b61aeca-9e38-4b36-b6ec-080a86849c10": {"__data__": {"id_": "9b61aeca-9e38-4b36-b6ec-080a86849c10", "embedding": null, "metadata": {"Header_1": " Conclusion & Next Steps", "filename": "building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4.md", "extension": ".md", "title": "Building a Fully Open Source Retriever with Nomic Embed and LlamaIndex", "date": "Jan 30, 2024", "url": "https://www.llamaindex.ai/blog/building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a72c1c0c-dd7b-42bf-936d-3626edcb9db9", "node_type": "4", "metadata": {"filename": "building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4.md", "extension": ".md", "title": "Building a Fully Open Source Retriever with Nomic Embed and LlamaIndex", "date": "Jan 30, 2024", "url": "https://www.llamaindex.ai/blog/building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4"}, "hash": "85b9c524f0c9eaf62c053d85f1c689792f370e84d3c0cfdc090387f41379f2e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "45ab55c2-139d-4ee1-8ad5-57ed58c518b6", "node_type": "1", "metadata": {"Header_1": " How To", "filename": "building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4.md", "extension": ".md", "title": "Building a Fully Open Source Retriever with Nomic Embed and LlamaIndex", "date": "Jan 30, 2024", "url": "https://www.llamaindex.ai/blog/building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4"}, "hash": "75c18e2840443886a0b5879f730b6273decc1dd3fdf5285e0930509d95fb154d", "class_name": "RelatedNodeInfo"}}, "text": "Conclusion & Next Steps\n\nIn this post, we showed you how to build a fully open source retriever using\nNomic Embed and LlamaIndex. If you want to dive deeper, you can find the\nsource code for Nomic Embed [ here ](https://github.com/nomic-ai/contrastors)\n. You can also use Nomic [ Atlas ](https://atlas.nomic.ai/) to visualize your\nretrieval database, and [ LlamaIndex ](https://www.llamaindex.ai/) to connect\nit to a generative model for full RAG.", "mimetype": "text/plain", "start_char_idx": 6597, "end_char_idx": 7044, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"dc69bffa-b8c3-40d3-b06c-04c60a3cdffd": {"doc_hash": "074d3f4874a8edf4c97065fc5e389fa0cab9e3cb7367f1ad50d770842ac9feb8", "ref_doc_id": "a72c1c0c-dd7b-42bf-936d-3626edcb9db9"}, "41f05074-defb-476a-bd41-70592c838043": {"doc_hash": "e34f92fb5ca4faed568e04e6936e12106fd10b17e57c486906709c8918303194", "ref_doc_id": "a72c1c0c-dd7b-42bf-936d-3626edcb9db9"}, "45ab55c2-139d-4ee1-8ad5-57ed58c518b6": {"doc_hash": "75c18e2840443886a0b5879f730b6273decc1dd3fdf5285e0930509d95fb154d", "ref_doc_id": "a72c1c0c-dd7b-42bf-936d-3626edcb9db9"}, "9b61aeca-9e38-4b36-b6ec-080a86849c10": {"doc_hash": "30bbd97caf0cb5473e07a2c87afdd930bea9ec272095f7b5124cf10a5ad96890", "ref_doc_id": "a72c1c0c-dd7b-42bf-936d-3626edcb9db9"}}, "docstore/ref_doc_info": {"a72c1c0c-dd7b-42bf-936d-3626edcb9db9": {"node_ids": ["dc69bffa-b8c3-40d3-b06c-04c60a3cdffd", "41f05074-defb-476a-bd41-70592c838043", "45ab55c2-139d-4ee1-8ad5-57ed58c518b6", "9b61aeca-9e38-4b36-b6ec-080a86849c10"], "metadata": {"Header_1": " What is a Retriever?", "filename": "building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4.md", "extension": ".md", "title": "Building a Fully Open Source Retriever with Nomic Embed and LlamaIndex", "date": "Jan 30, 2024", "url": "https://www.llamaindex.ai/blog/building-a-fully-open-source-retriever-with-nomic-embed-and-llamaindex-fc3d7f36d3e4"}}}}