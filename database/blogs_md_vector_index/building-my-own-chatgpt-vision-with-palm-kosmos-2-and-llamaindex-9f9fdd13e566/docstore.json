{"docstore/data": {"50f08f87-6417-4116-9d6e-c0d8957ecbc0": {"__data__": {"id_": "50f08f87-6417-4116-9d6e-c0d8957ecbc0", "embedding": null, "metadata": {"filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7dd95e69-78ab-49dd-989d-e6755a22a715", "node_type": "4", "metadata": {"filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "hash": "33155ebae933e4763e31fec680448975a2428c0ccdbc94e9061c8b5a49c6b4aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c734f65-dced-4af4-becb-58acb581a76e", "node_type": "1", "metadata": {"Header_1": " Features Overview"}, "hash": "c240e5ab3c4eeba8b83c82cf2cf5474a00f310bfa03fec4c42a9462425c04e58", "class_name": "RelatedNodeInfo"}}, "text": "In the ever-evolving landscape of AI, OpenAI\u2019s ChatGPT with vision\ncapabilities has opened a new chapter. It\u2019s an exciting time for developers\nand creators as we explore the fusion of visual understanding with\nconversational AI. Inspired by this innovation, I set out to build my own\nmulti-modal prototype, not just as a replica but as a launchpad for more\nadvanced and tailored visual-language applications.\n\nThe tools at our disposal are nothing short of extraordinary. **KOSMOS-2** a\ntrue powerhouse in painting vivid narratives from mere pixels, making image\ncaptioning seem almost magical. Then there\u2019s the Google **PaLM API** ,\nbringing a level of conversational depth that truly understands and responds\nwith relevance. And of course, there\u2019s **LlamaIndex** \\- the brains of the\noperation, orchestrating these elements with such finesse that the interaction\nflows as naturally as a conversation between old friends.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 922, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c734f65-dced-4af4-becb-58acb581a76e": {"__data__": {"id_": "4c734f65-dced-4af4-becb-58acb581a76e", "embedding": null, "metadata": {"Header_1": " Features Overview", "filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7dd95e69-78ab-49dd-989d-e6755a22a715", "node_type": "4", "metadata": {"filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "hash": "33155ebae933e4763e31fec680448975a2428c0ccdbc94e9061c8b5a49c6b4aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "50f08f87-6417-4116-9d6e-c0d8957ecbc0", "node_type": "1", "metadata": {"filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "hash": "d59c40d3ff62cde74688e147de04697c2d60f1cfde02d95818aaac7e486d789f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f42b8ed9-6faa-4601-b54d-79a671a4bb0a", "node_type": "1", "metadata": {"Header_1": " Deep Dive into the Tech Stack"}, "hash": "bd15438fdefa7dd52e8a574121d1891469b8ed7ca0813092a34ab7b49a73ca98", "class_name": "RelatedNodeInfo"}}, "text": "Features Overview\n\nThe outcome of my curiosity and coding is a Streamlit app \u2014 a prototype that\nstands as an homage and alternative to ChatGPT\u2019s vision capabilities. Here\u2019s\nwhat it brings to the table:\n\n  * **Real-Time Image Interaction:** Upload your images and instantly dive into a dialogue about them. \n  * **Automatic Captioning with KOSMOS-2:** Microsoft\u2019s AI model offers a descriptive base for the conversation. \n  * **Conversational Depth with PaLM:** Google\u2019s language model ensures the chat is as rich and nuanced as the images themselves. \n  * **User-Friendly Interface:** Streamlit powers an intuitive and clean UI, making it easy for anyone to navigate and interact.", "mimetype": "text/plain", "start_char_idx": 927, "end_char_idx": 1607, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f42b8ed9-6faa-4601-b54d-79a671a4bb0a": {"__data__": {"id_": "f42b8ed9-6faa-4601-b54d-79a671a4bb0a", "embedding": null, "metadata": {"Header_1": " Deep Dive into the Tech Stack", "filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7dd95e69-78ab-49dd-989d-e6755a22a715", "node_type": "4", "metadata": {"filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "hash": "33155ebae933e4763e31fec680448975a2428c0ccdbc94e9061c8b5a49c6b4aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c734f65-dced-4af4-becb-58acb581a76e", "node_type": "1", "metadata": {"Header_1": " Features Overview", "filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "hash": "477d78b2ab046bec9310ac40327baf3e7f4d8beab5c97b1cc7680b0146a97fa4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f392a78c-ad79-4729-bd33-df0eac9ece6f", "node_type": "1", "metadata": {"Header_1": " Unveiling ` app.py ` : The Core of the Application"}, "hash": "4a56257e7a47f8999f379a45d122af6de2c34399040b70555616406714ca0fb2", "class_name": "RelatedNodeInfo"}}, "text": "Deep Dive into the Tech Stack\n\nThe project is a symphony of technologies, each playing a crucial role:\n\n  * Microsoft AI **KOSMOS-2** via Replicate breathes life into images by providing them a narrative. \n  * Google **PaLM API** adds the layer of linguistic intelligence, making the conversation about the images insightful and engaging. \n  * **LlamaIndex** acts as the maestro, coordinating the models to work in harmony.", "mimetype": "text/plain", "start_char_idx": 1613, "end_char_idx": 2036, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f392a78c-ad79-4729-bd33-df0eac9ece6f": {"__data__": {"id_": "f392a78c-ad79-4729-bd33-df0eac9ece6f", "embedding": null, "metadata": {"Header_1": " Unveiling ` app.py ` : The Core of the Application", "filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7dd95e69-78ab-49dd-989d-e6755a22a715", "node_type": "4", "metadata": {"filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "hash": "33155ebae933e4763e31fec680448975a2428c0ccdbc94e9061c8b5a49c6b4aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f42b8ed9-6faa-4601-b54d-79a671a4bb0a", "node_type": "1", "metadata": {"Header_1": " Deep Dive into the Tech Stack", "filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "hash": "7bcdfef16cbd899e4462b679b0e743e57e37309521ab68bab6e352ec5940ce33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7a4d9818-4e84-4345-9e98-5c0a90b7a91e", "node_type": "1", "metadata": {"Header_1": " Wrapping Up"}, "hash": "4225e95352c020c06f38b2f820a2cd2186109e449b80f471908e488070d5343f", "class_name": "RelatedNodeInfo"}}, "text": "Unveiling ` app.py ` : The Core of the Application\n\nThe ` app.py ` script is the heart of the app, where we bring together\nKOSMOS-2 and PaLM with Llamaindex to create a seamless multimodal experience.\nLet\u2019s walk through it, from start to finish.\n\n**1\\. Initial Setup**\n\nWe start by importing the necessary libraries and setting up our Streamlit\npage. Here, we lay the groundwork for image processing and conversation\nmanagement.\n\n    \n    \n    import streamlit as st\n    import extra_streamlit_components as stx\n    import requests\n    from PIL import Image\n    from transformers import AutoProcessor, AutoModelForVision2Seq\n    from io import BytesIO\n    import replicate\n    from llama_index.llms.palm import PaLM\n    from llama_index import ServiceContext, VectorStoreIndex, Document\n    from llama_index.memory import ChatMemoryBuffer\n    import os\n    import datetime\n    \n    st.set_page_config(layout=\"wide\")\n    st.write(\"My version of ChatGPT vision. You can upload an image and start chatting with the LLM about the image\")\n\n**2\\. User Interface**\n\nNext, we craft the sidebar and the main area, ensuring that the user knows who\ncreated the app and has access to other projects, enhancing credibility and\nengagement.\n\n    \n    \n    # Sidebar\n    st.sidebar.markdown('## Created By')\n    st.sidebar.markdown(\"[Harshad Suryawanshi](https://www.linkedin.com/in/harshadsuryawanshi/)\")\n    st.sidebar.markdown('## Other Projects')\n    # ...sidebar content continues\n\n**3\\. Image Upload and Processing**\n\nUpon uploading an image, the app not only displays it but also invokes the `\nget_image_caption ` function to generate a relevant caption. This function,\ndecorated with ` @st.cache ` for caching, uses the KOSMOS-2 model through\nReplicate to provide a brief description of the uploaded image. The\ndescription is then used as the basis for the initial conversation with the\nuser.\n\n    \n    \n    @st.cache\n    def get_image_caption(image_data):\n        input_data = {\n            \"image\": image_data,\n            \"description_type\": \"Brief\"\n        }\n        output = replicate.run(\n            \"lucataco/kosmos-2:3e7b211c29c092f4bcc8853922cc986baa52efe255876b80cac2c2fbb4aff805\",\n            input=input_data\n        )\n        # Split the output string on the newline character and take the first item\n        text_description = output.split('\\n\\n')[0]\n        return text_description\n\n**4\\. Conversational Flow with PaLM and Llamaindex**\n\nWith the image caption in hand, the ` create_chat_engine ` function is called\nto set up the chat engine. This function is crucial as it establishes the\ncontext for the conversation and initializes the PaLM API for interaction.\n\n    \n    \n    @st.cache_resource\n    def create_chat_engine(img_desc, api_key):\n        llm = PaLM(api_key=api_key)\n        service_context = ServiceContext.from_defaults(llm=llm)\n        doc = Document(text=img_desc)\n        index = VectorStoreIndex.from_documents([doc], service_context=service_context)\n        chatmemory = ChatMemoryBuffer.from_defaults(token_limit=1500)\n        \n        chat_engine = index.as_chat_engine(\n            chat_mode=\"context\",\n            system_prompt=(\n                f\"You are a chatbot, able to have normal interactions, as well as talk. \"\n                \"You always answer in great detail and are polite. Your responses always descriptive. \"\n                \"Your job is to talk about an image the user has uploaded. Image description: {img_desc}.\"\n            ),\n            verbose=True,\n            memory=chatmemory\n        )\n        return chat_engine\n\nThe ` create_chat_engine ` function builds the infrastructure for our app's\nconversation capabilities. It starts by instantiating a PaLM object with the\nprovided API key, setting up the service context, and creating a document with\nthe image description. This document is then indexed to prepare it for\nLlamaindex\u2019s context chat engine. Finally, the chat engine is configured with\na prompt that instructs the AI on how to engage in the conversation,\nreferencing the image description and defining the chatbot's behavior.\n\n**5\\. User Interaction and Message Handling**\n\nThe application ensures an engaging and controlled user experience by limiting\nthe number of messages to 20 per session in the demo version. If this limit is\nreached, it gracefully notifies the user and disables further input to manage\nresources effectively.\n\n    \n    \n    if message_count &gt;= 20:\n        st.error(\"Notice: The maximum message limit for this demo version has been reached.\")\n        # Disabling the uploader and input by not displaying them\n        image_uploader_placeholder = st.empty()  # Placeholder for the uploader\n        chat_input_placeholder = st.empty()      # Placeholder for the chat input\n\nHowever, when the message count is within the limit, the application provides\na clear chat option and handles the image upload process. Upon uploading, it\nimmediately processes the image to get a caption, sets up the chat engine, and\nupdates the user interface to reflect the successful upload.\n\n    \n    \n    else:\n        # Add a clear chat button\n        if st.button(\"Clear Chat\"):\n            clear_chat()\n    \n        # Image upload section\n        image_file = st.file_uploader(\"Upload an image\", type=[\"jpg\", \"jpeg\", \"png\"], key=\"uploaded_image\", on_change=on_image_upload)\n        # ...code for image upload and display\n\nFor each user input, the message is added to the chat history, and the chat\nengine is queried for a response. The app ensures that each message \u2014 whether\nfrom the user or the assistant \u2014 is displayed in the chat interface,\nmaintaining a coherent conversation flow.\n\n    \n    \n    # ...code for handling user input and displaying chat history\n    \n    # Call the chat engine to get the response if an image has been uploaded\n    if image_file and user_input:\n        try:\n            with st.spinner('Waiting for the chat engine to respond...'):\n                # Get the response from your chat engine\n                response = chat_engine.chat(user_input)\n            # ...code for appending and displaying the assistant's response\n        except Exception as e:\n            st.error(f'An error occurred.')\n            # ...exception handling code", "mimetype": "text/plain", "start_char_idx": 2042, "end_char_idx": 8287, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a4d9818-4e84-4345-9e98-5c0a90b7a91e": {"__data__": {"id_": "7a4d9818-4e84-4345-9e98-5c0a90b7a91e", "embedding": null, "metadata": {"Header_1": " Wrapping Up", "filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7dd95e69-78ab-49dd-989d-e6755a22a715", "node_type": "4", "metadata": {"filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "hash": "33155ebae933e4763e31fec680448975a2428c0ccdbc94e9061c8b5a49c6b4aa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f392a78c-ad79-4729-bd33-df0eac9ece6f", "node_type": "1", "metadata": {"Header_1": " Unveiling ` app.py ` : The Core of the Application", "filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}, "hash": "87b382d19014cd6942ad6a6fab69b4b3d0b6ed5c9c75aba61a22255ba9df19af", "class_name": "RelatedNodeInfo"}}, "text": "Wrapping Up\n\nThis app is the foundation, a springboard for more complex visual-language\napplications. The potential is limitless, and your insights can shape its\nfuture. I invite you to dive into the demo, tinker with the code, and join me\nin pushing the envelope of what AI can do.\n\n[ Link to GitHub Repo ](https://github.com/AI-ANK/PaLM-Kosmos-Vision)\n\n[ Connect with Me on LinkedIn\n](https://www.linkedin.com/in/harshadsuryawanshi/)\n\n[ LinkedIn Post ](https://www.linkedin.com/posts/harshadsuryawanshi_ai-\ncomputervision-streamlit-activity-7126698614541680640-y5kB) :", "mimetype": "text/plain", "start_char_idx": 8292, "end_char_idx": 8862, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"50f08f87-6417-4116-9d6e-c0d8957ecbc0": {"doc_hash": "d59c40d3ff62cde74688e147de04697c2d60f1cfde02d95818aaac7e486d789f", "ref_doc_id": "7dd95e69-78ab-49dd-989d-e6755a22a715"}, "4c734f65-dced-4af4-becb-58acb581a76e": {"doc_hash": "477d78b2ab046bec9310ac40327baf3e7f4d8beab5c97b1cc7680b0146a97fa4", "ref_doc_id": "7dd95e69-78ab-49dd-989d-e6755a22a715"}, "f42b8ed9-6faa-4601-b54d-79a671a4bb0a": {"doc_hash": "7bcdfef16cbd899e4462b679b0e743e57e37309521ab68bab6e352ec5940ce33", "ref_doc_id": "7dd95e69-78ab-49dd-989d-e6755a22a715"}, "f392a78c-ad79-4729-bd33-df0eac9ece6f": {"doc_hash": "87b382d19014cd6942ad6a6fab69b4b3d0b6ed5c9c75aba61a22255ba9df19af", "ref_doc_id": "7dd95e69-78ab-49dd-989d-e6755a22a715"}, "7a4d9818-4e84-4345-9e98-5c0a90b7a91e": {"doc_hash": "a7e343b02d780f93e876bbae7e74dbc6e4c1902daf99a302ca69ba514ecaeb48", "ref_doc_id": "7dd95e69-78ab-49dd-989d-e6755a22a715"}}, "docstore/ref_doc_info": {"7dd95e69-78ab-49dd-989d-e6755a22a715": {"node_ids": ["50f08f87-6417-4116-9d6e-c0d8957ecbc0", "4c734f65-dced-4af4-becb-58acb581a76e", "f42b8ed9-6faa-4601-b54d-79a671a4bb0a", "f392a78c-ad79-4729-bd33-df0eac9ece6f", "7a4d9818-4e84-4345-9e98-5c0a90b7a91e"], "metadata": {"filename": "building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566.md", "extension": ".md", "title": "Building My Own ChatGPT Vision with PaLM, KOSMOS-2 and LlamaIndex", "date": "Nov 8, 2023", "url": "https://www.llamaindex.ai/blog/building-my-own-chatgpt-vision-with-palm-kosmos-2-and-llamaindex-9f9fdd13e566"}}}}