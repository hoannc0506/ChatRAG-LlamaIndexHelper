{"docstore/data": {"4faae790-44b5-44d2-b4a9-499b41788c0d": {"__data__": {"id_": "4faae790-44b5-44d2-b4a9-499b41788c0d", "embedding": null, "metadata": {"Header_1": " Summary", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c451069d-0a8b-48c7-ba7a-0986b33d588b", "node_type": "1", "metadata": {"Header_1": " Overview of Agents"}, "hash": "f2b0ad77ebc8073ef8d06f2f48ae192e51e754a7e9884395d1bc8a8a43ad1f0f", "class_name": "RelatedNodeInfo"}}, "text": "Summary\n\nIn this article, we compare how well LLM-powered agents with different degrees\nof complexity perform over practical data tasks (financial analysis). We\ncompare the performance of agents with more _complex, unrestrained_\ninteraction behavior (ReAct) with agents that contain _simpler, more\nconstrained_ interactions (routing). We specifically analyze how much\ncomplexity can be added to the agent layer vs. the tool layer.\n\nWe find that the choice of the language model matters a lot. ReAct agents that\nare powered by \u201cdumber\u201d models (in a tongue-in-cheek fashion we are referring\nto any non GPT-4 model as \u201cdumb\u201d) struggle to return relevant results over\ndata. We find that constraining agent interaction behavior, and giving them\naccess to more tools that can more explicitly perform complex actions, can\nhelp improve query performance over these less sophisticated LLMs. In\ncontrast, more sophisticated models (GPT-4) can more reliably utilize the\nReAct loop to execute a variety of complex data queries.\n\nThis blog post is quite detailed; we provide a _lot_ of experiments and\nresults below. Best of all, you can run this all yourself with our [ example\nnotebook\n](https://colab.research.google.com/drive/1uP38k4nr8OPmXbY4dLoKKQW0F29WtNuY?usp=sharing)\n!", "mimetype": "text/plain", "start_char_idx": 3, "end_char_idx": 1268, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c451069d-0a8b-48c7-ba7a-0986b33d588b": {"__data__": {"id_": "c451069d-0a8b-48c7-ba7a-0986b33d588b", "embedding": null, "metadata": {"Header_1": " Overview of Agents", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4faae790-44b5-44d2-b4a9-499b41788c0d", "node_type": "1", "metadata": {"Header_1": " Summary", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "1827b7194a831d5fce8830416f830c7958a1fa56a9ba3f5df38ed96036b135bd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e606a635-5f09-41b7-8218-49bebb581b3f", "node_type": "1", "metadata": {"Header_1": " Overview of Agents", "Header_2": " \u201cComplex\u201d vs. \u201cSimple\u201d Agent Interaction Techniques"}, "hash": "f25b0ee38db39b187c37e6a676313f5158199ec12020c23431f72e473b05b5c1", "class_name": "RelatedNodeInfo"}}, "text": "Overview of Agents\n\nBuilding LLM-powered agents have gotten increasingly popular in the past few\nmonths. Frameworks like [ LangChain ](https://github.com/hwchase17/langchain)\nhave made it much easier to create these agents according to a set of common\nabstractions.\n\nAt a high-level, an \u201cagent\u201d is essentially an automated decision engine, that\ncan be used to interact with an external environment. The core agent loop\nlooks something like the following:\n\n  1. The agent has access to a set of \u201ctools\u201d, which are generic functions that it can perform. It has an awareness of each tool through some attached metadata, and it can call each tool (either as a function call or structured API). \n  2. User feeds in a natural language input to the agent. \n  3. Given the input, the agent **interacts with the set of tools** in some fashion and returns the response. \n\nThere\u2019s a variety of ways to perform **agent-tool interaction.**\n\n  * The most popular is probably [ ReAct ](https://arxiv.org/abs/2210.03629) : the agent reasons over the next action, constructs an action command, executes the action. It repeats these steps in an iterative loop until the task is complete. \n  * There are other interaction modes too. Recently there was a paper on [ Plan-and-solve Prompting ](https://arxiv.org/pdf/2305.04091.pdf) , which generates a plan beforehand (to decompose a complex task into simpler ones). Before ReAct there have also been related techniques on [ Self-Ask ](https://arxiv.org/abs/2210.03350) and [ Chain of Thought Prompting ](https://arxiv.org/abs/2201.11903) .", "mimetype": "text/plain", "start_char_idx": 1273, "end_char_idx": 2842, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e606a635-5f09-41b7-8218-49bebb581b3f": {"__data__": {"id_": "e606a635-5f09-41b7-8218-49bebb581b3f", "embedding": null, "metadata": {"Header_1": " Overview of Agents", "Header_2": " \u201cComplex\u201d vs. \u201cSimple\u201d Agent Interaction Techniques", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c451069d-0a8b-48c7-ba7a-0986b33d588b", "node_type": "1", "metadata": {"Header_1": " Overview of Agents", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "fa60e5a976401698b25c52f4b1f153b4fe036eaff7aeb99dfa499474d15c4d81", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f6f1ac7-1ff9-4e3b-95c9-305c56ed5325", "node_type": "1", "metadata": {"Header_1": " Overview of Agents", "Header_2": " Investigating Agent Interaction Techniques for Data Querying"}, "hash": "f1d61de1061b6d4ddb86939bdd8e644e55e272d5a2677ed3885bb4d1e3154dc4", "class_name": "RelatedNodeInfo"}}, "text": "\u201cComplex\u201d vs. \u201cSimple\u201d Agent Interaction Techniques\n\nWe classify techniques like ReAct are more _complex and unconstrained:_ this\nis because they perform iterative reasoning and also break the input into\nsmaller steps. Complicated agent interaction loops allow for more _freedom of\nbehavior,_ and create an increased burden on the LLM being used. The pro of\ncomplex interaction frameworks is that they can be more general and handle a\nbroader class of queries over simple tools. The con is that if the LLM is not\nup to par, then these frameworks are prone to making mistakes; unconstrained\nbehavior can lead to unexpected results.\n\nOn the other end of the spectrum, you can imagine a _simple and constrained_\nagent interaction mechanism, where the agent does one-step selection of the\nunderlying tool to use, and returns the response from the tool. The agent\nessentially just acts as a router from the query to Tool. There are no steps\nto break down the question into smaller ones, and no iterative chain-of-\nthought loops. The pro here is that the model will likely make fewer errors.\nThe con here is that the interaction technique allows for less freedom and\nimposes more constraints on behavior.", "mimetype": "text/plain", "start_char_idx": 2849, "end_char_idx": 4047, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "8f6f1ac7-1ff9-4e3b-95c9-305c56ed5325": {"__data__": {"id_": "8f6f1ac7-1ff9-4e3b-95c9-305c56ed5325", "embedding": null, "metadata": {"Header_1": " Overview of Agents", "Header_2": " Investigating Agent Interaction Techniques for Data Querying", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e606a635-5f09-41b7-8218-49bebb581b3f", "node_type": "1", "metadata": {"Header_1": " Overview of Agents", "Header_2": " \u201cComplex\u201d vs. \u201cSimple\u201d Agent Interaction Techniques", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "28e9c452098399c1900cadf31b62383e4831f367e9943eb9017e8c473ee3aa0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "376c5ed1-d979-4e92-8214-e81fcf200c1b", "node_type": "1", "metadata": {"Header_1": " Overview of Agents", "Header_2": " High-Level Findings"}, "hash": "1bdab208f534b994fd0ba36e0afeadf4f0470277e60de1cb1858ef887fdafa9f", "class_name": "RelatedNodeInfo"}}, "text": "Investigating Agent Interaction Techniques for Data Querying\n\nWe at LlamaIndex are interested in how agents can help augment data tasks.\nMore specifically, we are interested in how agents can help perform complex\nuser queries over a diverse range of data sources. This includes not only\nasking questions over a single document, but being able to synthesize insights\nacross multiple documents and return that to the user.\n\nLlamaIndex query engines can be used as Tools within an agent construct to\nquery your data (we provide [ seamless integrations with LangChain\n](https://gpt-\nindex.readthedocs.io/en/latest/how_to/integrations/using_with_langchain.html)\n). These Tools can vary in complexity. For instance, a _simple_ Tool could be\nour [ vector store query engine ](https://gpt-\nindex.readthedocs.io/en/latest/how_to/integrations/vector_stores.html) , which\ndoes top-k embedding retrieval from a vector store. A more _advanced_ tool\ncould be a query engine over our graph data structure, which can be setup to [\nexplicitly provide compare/contrast capabilities ](https://gpt-\nindex.readthedocs.io/en/latest/use_cases/queries.html#compare-contrast-\nqueries) over any subset of documents. The tool itself can contain \u201cagent-\nlike\u201d decision-making capabilities under the hood. LlamaIndex provides a\nvariety of modules around [ routing ](https://gpt-\nindex.readthedocs.io/en/latest/examples/query_engine/RouterQueryEngine.html) ,\n[ query decomposition ](https://gpt-\nindex.readthedocs.io/en/latest/how_to/query/query_transformations.html#single-\nstep-query-decomposition) , and [ multi-part query planning ](https://gpt-\nindex.readthedocs.io/en/latest/examples/query_engine/sub_question_query_engine.html)\n.\n\nIn this blog post, we are interested in comparing the following approaches to\ndesigning agents and tools to see which approach can provide good answers to\ndifferent user queries in a robust fashion:\n\n  * more _complex and unconstrained_ agent interaction (ReAct) over a set of _simple_ Tools \n  * more _simple and constrained_ agent interaction (simple routing) that uses more _complex_ Tools \n\nComplex Agents with Simple Tools, Simple Agents with Complex Tools\n\nEssentially what we are interested in is how much complexity can be pushed to\nthe agent interaction layer vs. being left in the Tool layer. We explore the\nfollowing concrete example: let\u2019s say the user query is to compare/contrast\ntwo different documents (a relatively complex query). If the set of Tools are\nall just vector indices over different documents, could the agent interaction\nloop figure out how to execute that query reliably against the vector indices?\nOn the other hand, if we push the complexity down to the Tool layer, then we\ncould _explicitly_ have a Tool that can perform \u201ccompare/contrast\u201d over your\nDocuments. Then the burden on the agent is to simply call this Tool instead of\ninteracting with a set of other tools in a more complex fashion.", "mimetype": "text/plain", "start_char_idx": 4053, "end_char_idx": 6987, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "376c5ed1-d979-4e92-8214-e81fcf200c1b": {"__data__": {"id_": "376c5ed1-d979-4e92-8214-e81fcf200c1b", "embedding": null, "metadata": {"Header_1": " Overview of Agents", "Header_2": " High-Level Findings", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8f6f1ac7-1ff9-4e3b-95c9-305c56ed5325", "node_type": "1", "metadata": {"Header_1": " Overview of Agents", "Header_2": " Investigating Agent Interaction Techniques for Data Querying", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "4726f9f26a0defe5a65c77d9a6881505c5c0096e05bfc8454d68f08af2680477", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2b32bbc-9c3c-4444-ab69-03b7cb0fc6b3", "node_type": "1", "metadata": {"Header_1": " Setup"}, "hash": "bd97726fa3de850e89e40d569a50efb34822337201c979e5c5354f44198fb349", "class_name": "RelatedNodeInfo"}}, "text": "High-Level Findings\n\nThe high-level finding is that **less sophisticated agents need more\nconstraints.** More specifically, we found that using a GPT-3 powered agent in\na ReAct loop did not provide good results over complex queries; it was not\nable to figure out the proper interaction pattern over the provided set of\nTools in order to surface the results. Instead, by adding more constraints to\nthe agent behavior and providing more sophistication in the Tool itself, we\nwere able to get a GPT-3 agent to produce better results.\n\n**Smarter agents require fewer constraints.** We did find that GPT-4 agents\nwith ReAct were able to provide better query results than GPT-3 agents when\npresented with a set of simple Tools over the data. This implies that more\npowerful agents may not need as many tools to \u201cexplicitly\u201d perform tasks when\nmuch of that logic can be handled in the agent interaction loop.", "mimetype": "text/plain", "start_char_idx": 6993, "end_char_idx": 7894, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d2b32bbc-9c3c-4444-ab69-03b7cb0fc6b3": {"__data__": {"id_": "d2b32bbc-9c3c-4444-ab69-03b7cb0fc6b3", "embedding": null, "metadata": {"Header_1": " Setup", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "376c5ed1-d979-4e92-8214-e81fcf200c1b", "node_type": "1", "metadata": {"Header_1": " Overview of Agents", "Header_2": " High-Level Findings", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "e4d19c52d74296f71a03711c382e56bff8df4f5b4eedc323153bba9d5dbec559", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24d48a57-30d0-4076-8b8e-368f32a8a92d", "node_type": "1", "metadata": {"Header_1": " Setup", "Header_2": " **GPT-3/GPT-4 ReAct Agent Setup**"}, "hash": "00f0c3debada66149fcc60e601a782cb2c5027d2e6e16179a8521a8757f8fb69", "class_name": "RelatedNodeInfo"}}, "text": "Setup\n\nOur data consists of three Uber 10-Q filings (quarterly financial reports) in\n2022: March, June, and September. We wish to execute different queries over\nthis data; the bulk of these queries are around comparing different bits of\ninformation between these documents.\n\n    \n    \n    march_2022 = SimpleDirectoryReader(input_files=[\"../data/10q/uber_10q_march_2022.pdf\"]).load_data()\n    june_2022 = SimpleDirectoryReader(input_files=[\"../data/10q/uber_10q_june_2022.pdf\"]).load_data()\n    sept_2022 = SimpleDirectoryReader(input_files=[\"../data/10q/uber_10q_sept_2022.pdf\"]).load_data()\n\nWe use LlamaIndex to define a vector index over each document, which just\nstores the document chunks + embeddings in a vector store. We can then query\neach vector index using a simple ` QueryEngine ` . We create a tool for each\nof these ` QueryEngine ` objects.\n\n    \n    \n    # define indices\n    march_index = GPTVectorStoreIndex.from_documents(march_2022)\n    june_index = GPTVectorStoreIndex.from_documents(june_2022)\n    sept_index = GPTVectorStoreIndex.from_documents(sept_2022)\n    \n    # define query engine\n    march_engine = march_index.as_query_engine(similarity_top_k=3)\n    june_engine = june_index.as_query_engine(similarity_top_k=3)\n    sept_engine = sept_index.as_query_engine(similarity_top_k=3)\n\nWe also define a ` ComposableGraph ` over these three documents. The\ncomposable graph roughly follows the [ guide described here ](https://gpt-\nindex.readthedocs.io/en/latest/use_cases/queries.html#compare-contrast-\nqueries) . This graph is explicitly setup to perform compare/contrast queries\nover these three documents.\n\n    \n    \n    graph = ComposableGraph.from_indices(\n        GPTListIndex,\n        children_indices=[march_index, june_index, sept_index],\n        index_summaries=[\n            \"Provides information about Uber quarterly financials ending March 2022\",\n            \"Provides information about Uber quarterly financials ending June 2022\",\n            \"Provides information about Uber quarterly financials ending September 2022\"\n        ]\n    )\n\nThe graph can be queried with a ` ComposableGraphQueryEngine ` :\n\n    \n    \n    # define decompose_transform\n    decompose_transform = DecomposeQueryTransform(verbose=True)\n    \n    # define custom query engines\n    custom_query_engines = {}\n    for index in [march_index, june_index, sept_index]:\n        query_engine = index.as_query_engine(service_context=service_context)\n        query_engine = TransformQueryEngine(\n            query_engine,\n            query_transform=decompose_transform,\n            transform_extra_info={'index_summary': index.index_struct.summary},\n        )\n        custom_query_engines[index.index_id] = query_engine\n    \n    custom_query_engines[graph.root_id] = graph.root_index.as_query_engine(\n        service_context=service_context,\n        streaming=True,\n    )\n    \n    # define graph\n    g_engine = graph.as_query_engine(\n        custom_query_engines=custom_query_engines\n    )\n\nWe try the following agent setups:\n\n  * **GPT-3 ReAct agent:** A zero-shot GPT-3 ReAct agent with three Tools: each Tool corresponds to the vector index over a 10-Q filing. \n  * **GPT-4 ReAct agent:** Same as above but using GPT-4 instead. \n  * **Simple Router agent:** A simple router \u201cagent\u201d with four Tools: the three Tools listed above + the ` ComposableGraphQueryEngine ` explicitly setup to perform compare/contrast queries. \n\nThe code snippets for initializing these agents are below. For the simple\nrouter agent, we use the native ` RouterQueryEngine ` within LlamaIndex,\nthough you should also be able to achieve similar results in LangChain through\neither the zero-shot agent (with tweaked settings) or the router chain.", "mimetype": "text/plain", "start_char_idx": 7899, "end_char_idx": 11618, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "24d48a57-30d0-4076-8b8e-368f32a8a92d": {"__data__": {"id_": "24d48a57-30d0-4076-8b8e-368f32a8a92d", "embedding": null, "metadata": {"Header_1": " Setup", "Header_2": " **GPT-3/GPT-4 ReAct Agent Setup**", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2b32bbc-9c3c-4444-ab69-03b7cb0fc6b3", "node_type": "1", "metadata": {"Header_1": " Setup", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "80d7e1ff3199e2a72963eb440b34a116abd080ae53383d68c98b82eec82c60d4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e84f60c6-c3f1-42fd-8343-9b2b95cf6750", "node_type": "1", "metadata": {"Header_1": " Setup", "Header_2": " Simple Router Agent Setup"}, "hash": "f1919a6f33563432e77b420c4a8ea2af675b930d7880aee95a2f054d1acf228c", "class_name": "RelatedNodeInfo"}}, "text": "**GPT-3/GPT-4 ReAct Agent Setup**\n\n    \n    \n    # initializing zero-shot ReAct agent\n    \n    uber_config_sept = IndexToolConfig(\n        query_engine=sept_engine, \n        name=f\"Uber 10Q September 2022\",\n        description=f\"Provides information about Uber quarterly financials ending September 2022\",\n        tool_kwargs={\"return_direct\": False}\n    )\n    uber_config_june = IndexToolConfig(\n        query_engine=june_engine, \n        name=f\"Uber 10Q June 2022\",\n        description=f\"Provides information about Uber quarterly financials ending June 2022\",\n        tool_kwargs={\"return_direct\": False}\n    )\n    uber_config_march = IndexToolConfig(\n        query_engine=march_engine, \n        name=f\"Uber 10Q March 2022\",\n        description=f\"Provides information about Uber quarterly financials ending March 2022\",\n        tool_kwargs={\"return_direct\": False}\n    )\n    \n    toolkit = LlamaToolkit(\n        index_configs=[uber_config_sept, uber_config_june, uber_config_march],\n    )\n    \n    # this is a light wrapper around `initialize_agent` in langchain (which defaults to zero-shot)\n    agent_chain = create_llama_agent(\n        toolkit,\n        llm, # can be GPT-3 or GPT-4 \n        verbose=True\n    )", "mimetype": "text/plain", "start_char_idx": 11624, "end_char_idx": 12838, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e84f60c6-c3f1-42fd-8343-9b2b95cf6750": {"__data__": {"id_": "e84f60c6-c3f1-42fd-8343-9b2b95cf6750", "embedding": null, "metadata": {"Header_1": " Setup", "Header_2": " Simple Router Agent Setup", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24d48a57-30d0-4076-8b8e-368f32a8a92d", "node_type": "1", "metadata": {"Header_1": " Setup", "Header_2": " **GPT-3/GPT-4 ReAct Agent Setup**", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "972d2312627724d7e4c2c0d72acf4cf8cacbc901a4735d6fc486e65e0f9fd3cf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6fd5c7f1-947a-45d4-8898-9c913de72969", "node_type": "1", "metadata": {"Header_1": " Findings and Experiments"}, "hash": "bb404f1981e9311dc3c12cba56f24c5cdec2e3f8b288771ce9d56c6749663b4c", "class_name": "RelatedNodeInfo"}}, "text": "Simple Router Agent Setup\n\n    \n    \n    query_tool_sept = QueryEngineTool.from_defaults(\n        query_engine=sept_engine,\n        description=f\"Provides information about Uber quarterly financials ending September 2022\",\n    )\n    query_tool_june = QueryEngineTool.from_defaults(\n        query_engine=june_engine,\n        description=f\"Provides information about Uber quarterly financials ending June 2022\",\n    )\n    query_tool_march = QueryEngineTool.from_defaults(\n        query_engine=march_engine,\n        description=f\"Provides information about Uber quarterly financials ending March 2022\",\n    )\n    query_tool_graph = QueryEngineTool.from_defaults(\n        query_engine=g_engine,\n        description=f\"Provides comparisons between Uber financials across quarters in 2022. Can be used to answer \"\n                     \"any questions that require analysis across multiple quarters.\",\n    )\n    \n    # our \"router\" query engine is effectively a simple agent that can only perform routing\n    query_engine = RouterQueryEngine(\n        selector=LLMSingleSelector.from_defaults(),\n        query_engine_tools=[\n            query_tool_sept,\n            query_tool_june,\n            query_tool_march,\n            query_tool_graph\n        ]\n    )\n\nNow that we\u2019ve described the setup, let\u2019s take a look at the results below!", "mimetype": "text/plain", "start_char_idx": 12844, "end_char_idx": 14168, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6fd5c7f1-947a-45d4-8898-9c913de72969": {"__data__": {"id_": "6fd5c7f1-947a-45d4-8898-9c913de72969", "embedding": null, "metadata": {"Header_1": " Findings and Experiments", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e84f60c6-c3f1-42fd-8343-9b2b95cf6750", "node_type": "1", "metadata": {"Header_1": " Setup", "Header_2": " Simple Router Agent Setup", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "680afd88bdbff12c3279c6e5546b8388226f94251a654ac7a6565535fa5cbb23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d3fdec8-4684-4cb3-8cc8-102fbc194b1f", "node_type": "1", "metadata": {"Header_1": " Findings and Experiments", "Header_2": " GPT-3 ReAct Agent Results"}, "hash": "11aae00331c7fa565d5316f55067488a568c2d6e380d975628fcf2c1d832dbf6", "class_name": "RelatedNodeInfo"}}, "text": "Findings and Experiments\n\nAt a high-level, we find using GPT-3 in ReAct agents produces suboptimal\nresults over these queries. They tend to exhibit the following\ncharacteristics:\n\n  * **Unpredictability in the set of chosen tools:** The set of tools chosen can differ even if the questions are semantically similar, leading to variability in the responses. \n  * **Lack of coverage in the set of chosen tools:** Oftentimes we expect that a given question is able to make use of all three 10-Q statements, but only a subset of them are picked. \n  * **Erroneous chain-of-thought processing:** Sometimes the agent uses tools throughout the CoT process that are irrelevant to the question. \n\nIn contrast, we find that GPT-4 ReAct agents provide answers that are more\nrelevant, predictable, and exhibit fewer errors in intermediate results.\n\nFinally, we find that using a simpler routing-only GPT-3 agent with access to\nan explicit \u201ccompare/contrast\u201d tool allows the agent to perform better.\n\nAs a reminder, full results are in the notebook: [\nhttps://colab.research.google.com/drive/1uP38k4nr8OPmXbY4dLoKKQW0F29WtNuY?usp=sharing\n](https://colab.research.google.com/drive/1uP38k4nr8OPmXbY4dLoKKQW0F29WtNuY?usp=sharing)", "mimetype": "text/plain", "start_char_idx": 14173, "end_char_idx": 15385, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4d3fdec8-4684-4cb3-8cc8-102fbc194b1f": {"__data__": {"id_": "4d3fdec8-4684-4cb3-8cc8-102fbc194b1f", "embedding": null, "metadata": {"Header_1": " Findings and Experiments", "Header_2": " GPT-3 ReAct Agent Results", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6fd5c7f1-947a-45d4-8898-9c913de72969", "node_type": "1", "metadata": {"Header_1": " Findings and Experiments", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "817414c46c7a9ae3f3e8be731846b1705c8279b401cc855e6a188cf88e71192d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a45fd3c-70b3-4a98-a19c-463c5d75b688", "node_type": "1", "metadata": {"Header_1": " Findings and Experiments", "Header_2": " GPT-4 ReAct Agent Results"}, "hash": "9b74675c6cd0b0b64b6c1cae44e71375c52955d9ab10ecaaf8cff7b02b0ca52a", "class_name": "RelatedNodeInfo"}}, "text": "GPT-3 ReAct Agent Results\n\n**Query 1**\n\n    \n    \n    agent_chain.run(input=\"Analyze Uber revenue growth over the last few quarters\")\n\nResponse:\n\nWe see that only the September 10-Q filing is chosen to answer the question.\nThe September 10-Q does contain some information about revenue growth compared\nto the same period in 2021, but that doesn\u2019t explicitly answer the question,\nwhich is about revenue growth the past few quarters.\n\n**Query 2**\n\n    \n    \n    agent_chain.run(input=\"Analyze changes in risk factors for Uber\")\n\nResponse:\n\nThe September and June 10-Q filings are chosen, but not March. Moreover, the\nanswer is vague and doesn\u2019t provide much detail regarding concrete risk\nfactors for Uber (and also mentions that the risk factors \u201chave changed over\nthe past three quarters\u201d even though it\u2019s only using two Tools).\n\n**Query 3**\n\nIn this query, we more explicitly showcase how slight changes in prompts can\ninduce different chain-of-thought paths through different Tools, and as a\nresult produce different answers.\n\n    \n    \n    # Prompt variation 1 \n    agent_chain.run(input=\"Analyze Uber revenue growth and risk factors over time\")\n\nResponse:\n\n    \n    \n    # Prompt variation 2\n    agent_chain.run(input=\"Analyze Uber revenue growth and risk factors over quarters\")\n\nThe main difference between these two queries is \u201cover time\u201d versus \u201cover\nquarters.\u201d As we can see, not only are the selected Tools different between\nthe two variations, but the inputs are different as well \u2014 in the first it\u2019s\n\u201cfinancials\u201d, and in the second it\u2019s \u201cRevenue growth and risk factors.\u201d\n\nSince the Tool input in the first variant is unrelated to the question, the\nanswer is similarly vague: \u201cUber\u2019s revenue growth and risk factors can be\nanalyzed by comparing the financials\u2026\u201d\n\n**Query 4:**\n\nHere instead of asking a compare/contrast question let\u2019s just ask a question\nabout a given statement.\n\n    \n    \n    agent_chain.run(input=\"How much cash did Uber have in sept 2022?\")\n\nWe see that the agent makes two errors 1) it is not able to supply an action\ninput to each Tool, and 2) ends up looking through the June and March filings\nwhich are irrelevant to the question.", "mimetype": "text/plain", "start_char_idx": 15391, "end_char_idx": 17557, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a45fd3c-70b3-4a98-a19c-463c5d75b688": {"__data__": {"id_": "4a45fd3c-70b3-4a98-a19c-463c5d75b688", "embedding": null, "metadata": {"Header_1": " Findings and Experiments", "Header_2": " GPT-4 ReAct Agent Results", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4d3fdec8-4684-4cb3-8cc8-102fbc194b1f", "node_type": "1", "metadata": {"Header_1": " Findings and Experiments", "Header_2": " GPT-3 ReAct Agent Results", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "88ce96a0e3eb204695c5e37d80a8b389ae1f6afc4a5cf5e196b55eccb52e2960", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "048475f1-60ba-4215-bbd5-b27bcbd8e8d0", "node_type": "1", "metadata": {"Header_1": " Findings and Experiments", "Header_2": " GPT-3 Router Agent Results"}, "hash": "8760001275a603e10ff6dbeea38adf07b25c3d38932757441ff364a34f35500f", "class_name": "RelatedNodeInfo"}}, "text": "GPT-4 ReAct Agent Results\n\nGPT-4 ReAct agents perform a lot better than GPT-3 agents. They\ncomprehensively go through the set of available Tools, and provide much more\ndetailed observation extraction and response synthesis.\n\nWe won\u2019t go through all of these examples, but they can be found in the\nexample notebook!\n\n**Query 1:**\n\n    \n    \n    agent_chain_gpt4.run(input=\"Analyze Uber revenue growth over the last few quarters\")\n\nResponse:\n\nUnlike the GPT-3 agent, here the GPT-4 agent at least goes through every\nfiling and synthesizes the result.\n\n**Query 2**\n\n    \n    \n    agent_chain_gpt4.run(input=\"Analyze changes in risk factors for Uber\")\n\nResponse:\n\nHere the GPT-4 agent still only looks at September and June (and skips March),\nbut the response is way more detailed, and references concrete facts within\nthe report.", "mimetype": "text/plain", "start_char_idx": 17563, "end_char_idx": 18389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "048475f1-60ba-4215-bbd5-b27bcbd8e8d0": {"__data__": {"id_": "048475f1-60ba-4215-bbd5-b27bcbd8e8d0", "embedding": null, "metadata": {"Header_1": " Findings and Experiments", "Header_2": " GPT-3 Router Agent Results", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a45fd3c-70b3-4a98-a19c-463c5d75b688", "node_type": "1", "metadata": {"Header_1": " Findings and Experiments", "Header_2": " GPT-4 ReAct Agent Results", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "0e19cf4592aabe29f0ae9011f0161198a6e03019bdf9bb05b9ad33da10698d64", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57ca9f2b-24a6-4ff8-ab07-b3c991514eeb", "node_type": "1", "metadata": {"Header_1": " Concluding Thoughts"}, "hash": "e3ed6c0599801e3bef9d5415bbb92c1f8acac64aa32f049377ceca408de4a3a1", "class_name": "RelatedNodeInfo"}}, "text": "GPT-3 Router Agent Results\n\nReminder: the router agent doesn\u2019t do any CoT and has additional access to our\nComposableGraph query engine, which can explicitly perform compare/contrast\nqueries. Let\u2019s take a look at how this agent does.\n\n**Query 1**\n\n    \n    \n    response = query_engine.query(\"Analyze Uber revenue growth over the last few quarters\")\n\nResponse (intermediate steps):\n\n    \n    \n    Selecting query engine 3: Provides comparisons between Uber financials across quarters in 2022. Can be used to answer any questions that require analysis across multiple quarters..\n    > Current query: Analyze Uber revenue growth over the last few quarters\n    > New query:  What was Uber's revenue growth from the last quarter ending March 2022 compared to the previous quarter?\n    > Current query: Analyze Uber revenue growth over the last few quarters\n    > New query:  What was Uber's revenue growth from the last quarter ending June 2022 compared to the previous quarter?\n    > Current query: Analyze Uber revenue growth over the last few quarters\n    > New query:  What was Uber's revenue growth from the last few quarters ending September 2022?\n    \n\nFinal Response\n\n    \n    \n    Based on the limited context information provided, we can only analyze Uber's revenue growth for two specific quarters:\n    \n    1. For the quarter ending March 2022, Uber's revenue growth increased compared to the first quarter of 2021. However, the exact percentage of growth is not provided.\n    \n    2. For the quarter ending September 2022, Uber's revenue growth was 72%.\n    \n    Unfortunately, we do not have enough data to analyze the revenue growth for the quarters ending June 2022 or to compare it to the previous quarter. To provide a more comprehensive analysis, additional data on Uber's revenue growth for other quarters would be needed.\n\nTo be fair, this response does not cover the month of June. But the fault of\nthat lies with the implementation of the Tool itself rather than the agent\ninteraction step. The agent\u2019s only job is to pick the right Tool to solve the\ntask at hand, and it does that job correctly; it decides to choose the Tool\ncorresponding to our ` ComposableGraphQueryEngine ` abstraction (which can\nperform compare/contrast queries).\n\n**Query 2**\n\n    \n    \n    response = query_engine.query(\"Analyze changes in risk factors for Uber\")\n\nResponse (intermediate steps):\n\n    \n    \n    INFO:llama_index.query_engine.router_query_engine:Selecting query engine 3: Provides comparisons between Uber financials across quarters in 2022. Can be used to answer any questions that require analysis across multiple quarters..\n    Selecting query engine 3: Provides comparisons between Uber financials across quarters in 2022. Can be used to answer any questions that require analysis across multiple quarters..\n    &gt; Current query: Analyze changes in risk factors for Uber\n    &gt; New query:  What are the risk factors for Uber in the quarter ending March 2022?\n    &gt; Current query: Analyze changes in risk factors for Uber\n    &gt; New query:  What are the risk factors for Uber in the quarter ending June 2022?\n    &gt; Current query: Analyze changes in risk factors for Uber\n    &gt; New query:  What are the risk factors for Uber in the quarter ending September 2022?\n\nFinal Response\n\n    \n    \n    From the context information provided, we can analyze the changes in risk factors for Uber across the three quarters as follows:\n    \n    1. COVID-19 pandemic: The ongoing pandemic remains a constant risk factor across all quarters, with its impact on driver and courier supply constraints, consumer demand, and government restrictions. However, the specific concerns related to the pandemic may evolve, such as the emergence of new virus variants or changes in vaccination rates.\n    \n    2. Driver and courier supply constraints: This risk factor is present in the quarter ending March 2022 but is not explicitly mentioned in the subsequent quarters. However, it may still be an underlying concern, especially if the pandemic continues to impact driver availability.\n    \n    3. Changes in consumer demand: This risk factor is mentioned in the quarter ending March 2022, with an imbalance between Mobility and Delivery services. It is not explicitly mentioned in the subsequent quarters, but fluctuations in revenue due to changes in Gross Bookings and Mobility Trip volumes in the quarter ending June 2022 could be related to changes in consumer demand.\n    \n    4. Government restrictions and regulations: This risk factor is present in the quarter ending March 2022, with the impact of restrictions on Mobility offerings. In the quarter ending June 2022, the focus shifts to the potential impact of regulatory changes and legal claims, such as driver classification in the UK. In the quarter ending September 2022, the risk factor of driver classification as employees, workers, or quasi-employees becomes more prominent.\n    \n    5. Uncertainty around future developments: This risk factor is mentioned in the quarter ending March 2022 but is not explicitly mentioned in the subsequent quarters. However, it may still be an underlying concern, especially with the ongoing impact of COVID-19 and potential permanent changes to end-users' behavior.\n    \n    6. Accounting pronouncements: This risk factor is introduced in the quarter ending June 2022, with the adoption and impact of recently issued accounting pronouncements potentially affecting Uber's consolidated financial statements.\n    \n    7. Integration and performance of acquired businesses: This risk factor is introduced in the quarter ending June 2022, with the acquisition of Transplace contributing to the increase in Freight revenue.\n    \n    8. Competition: This risk factor is introduced in the quarter ending September 2022, highlighting the highly competitive nature of the mobility, delivery, and logistics industries, and the need to lower fares, offer incentives, and promotions to remain competitive.\n    \n    9. Significant losses and increasing operating expenses: This risk factor is introduced in the quarter ending September 2022, emphasizing the financial challenges Uber faces in achieving profitability.\n\nThe job of the agent is once again simple: it chooses the graph query engine\nthat is optimized to perform \u201ccompare/contrast\u201d queries. The result is much\nmore detailed than the result obtained from the GPT-3 ReAct agent (and is\ncomparable to the GPT-4 ReAct agent). It contains a detailed analysis of all\nrisk factors in bullet points, and offers a comparison across time for all\nbullet points.\n\n**Query 3**\n\n    \n    \n    response = query_engine.query(\"Analyze Uber revenue growth and risk factors over the last few quarters\")\n\nResponse (intermediate steps):\n\n    \n    \n    > Current query: Analyze Uber revenue growth and risk factors over quarters\n    > New query:  What is Uber's revenue growth and risk factors for the quarter ending March 2022?\n    > Current query: Analyze Uber revenue growth and risk factors over quarters\n    > New query:  What is Uber's revenue growth and risk factors for the quarter ending March 2022?\n    > Current query: Analyze Uber revenue growth and risk factors over quarters\n    > New query:  What is Uber's revenue growth and risk factors for the quarter ending June 2022?\n    > Current query: Analyze Uber revenue growth and risk factors over quarters\n    > New query:  What is Uber's revenue growth and risk factors for the quarter ending June 2022?\n    > Current query: Analyze Uber revenue growth and risk factors over quarters\n    > New query:  What were Uber's total revenues for the quarter ending September 2022?\n    > Current query: Analyze Uber revenue growth and risk factors over quarters\n    > New query:  What were Uber's total revenues for the quarter ending September 2022?\n\nFinal Response\n\n    \n    \n    Uber's revenue growth has been impressive over the past few quarters, with the quarter ending March 2022 showing a 136% year-over-year growth and the quarter ending June 2022 showing a 105% year-over-year growth. The revenue for the quarter ending June 2022 was $8,343 million. \n    \n    The risk factors for Uber's business have been largely related to the ongoing impacts of the COVID-19 pandemic, including reduced global demand for Mobility rides, supply constraints, and potential permanent changes to end-user behavior. These risk factors have been present in both the quarter ending March 2022 and the quarter ending June 2022, though the specific risks have varied slightly.", "mimetype": "text/plain", "start_char_idx": 18395, "end_char_idx": 26947, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "57ca9f2b-24a6-4ff8-ab07-b3c991514eeb": {"__data__": {"id_": "57ca9f2b-24a6-4ff8-ab07-b3c991514eeb", "embedding": null, "metadata": {"Header_1": " Concluding Thoughts", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "048475f1-60ba-4215-bbd5-b27bcbd8e8d0", "node_type": "1", "metadata": {"Header_1": " Findings and Experiments", "Header_2": " GPT-3 Router Agent Results", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "9f4bdf9a8c668fa990e12981cd008378df4ad62b91459b46c797277d6a507084", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c81ce7f2-17e5-4e49-adef-2a56c245083b", "node_type": "1", "metadata": {"Header_1": " Concluding Thoughts", "Header_2": " Notebook Walkthrough"}, "hash": "297df9acadb037c914b9c8a3841fa79292bbdd7b34ce913e9c09fd0582745285", "class_name": "RelatedNodeInfo"}}, "text": "Concluding Thoughts\n\nReAct-based agents offer a powerful, general reasoning loop, and have the\npotential to solve complex tasks over your data. But they tend to only work\nreliably with more powerful language models such as GPT-4. Less sophisticated\nmodels (e.g. GPT-3) will make more unpredictable and erroneous decisions,\nleading to subpar query performance over your data sources.\n\nAgents implemented with \u201cdumber\u201d models need more interaction constraints in\norder to make more reliable, less erroneous decisions. We find that if we\nexplicitly constrain the agent interface and push the complexity down to the\nTool layer, we can still create agents that offer good performance over your\ndata.\n\nOf course, this is just an initial analysis and there\u2019s a few\ncaveats/limitations:\n\n  * You may be able to \u201cprompt hack\u201d the default ReAct loop to get more consistent results, and we did not try that. \n  * We only tested this over a set of three financial documents. There\u2019s a lot more work that needs to be done if we want to test this out on thousands of docs. \n  * We only compared GPT-3 and GPT-4, there\u2019s so many more models to compare/benchmark, e.g ChatGPT, any open-source model, Anthropic Claude, etc. \n  * We did not test out other agent interaction patterns besides ReAct: \u201cplan and solve\u201d agents (though we do have similar formulations in LlamaIndex), AutoGPT-like task management, and more. \n\nWhether you\u2019ve run into similar findings or you disagree with our analysis,\nlet us know! We\u2019d love to facilitate this discussion on our [ Discord\n](https://discord.gg/dGcwcsnxhU) .", "mimetype": "text/plain", "start_char_idx": 26952, "end_char_idx": 28534, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c81ce7f2-17e5-4e49-adef-2a56c245083b": {"__data__": {"id_": "c81ce7f2-17e5-4e49-adef-2a56c245083b", "embedding": null, "metadata": {"Header_1": " Concluding Thoughts", "Header_2": " Notebook Walkthrough", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "753affd8-3745-427e-aeb2-309b88ef5d23", "node_type": "4", "metadata": {"filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "089f9620e42064ae0cb2f5aea08a73dd5248413650d1318182ba309da86db390", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57ca9f2b-24a6-4ff8-ab07-b3c991514eeb", "node_type": "1", "metadata": {"Header_1": " Concluding Thoughts", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}, "hash": "8436fd5dac7ce4d7c2e7323f92d1b37c7137c9d75c6bd08742129f3405664964", "class_name": "RelatedNodeInfo"}}, "text": "Notebook Walkthrough\n\nYou can find the full notebook walkthrough here: [\nhttps://colab.research.google.com/drive/1uP38k4nr8OPmXbY4dLoKKQW0F29WtNuY?usp=sharing\n](https://colab.research.google.com/drive/1uP38k4nr8OPmXbY4dLoKKQW0F29WtNuY?usp=sharing)", "mimetype": "text/plain", "start_char_idx": 28540, "end_char_idx": 28787, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"4faae790-44b5-44d2-b4a9-499b41788c0d": {"doc_hash": "1827b7194a831d5fce8830416f830c7958a1fa56a9ba3f5df38ed96036b135bd", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}, "c451069d-0a8b-48c7-ba7a-0986b33d588b": {"doc_hash": "fa60e5a976401698b25c52f4b1f153b4fe036eaff7aeb99dfa499474d15c4d81", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}, "e606a635-5f09-41b7-8218-49bebb581b3f": {"doc_hash": "28e9c452098399c1900cadf31b62383e4831f367e9943eb9017e8c473ee3aa0e", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}, "8f6f1ac7-1ff9-4e3b-95c9-305c56ed5325": {"doc_hash": "4726f9f26a0defe5a65c77d9a6881505c5c0096e05bfc8454d68f08af2680477", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}, "376c5ed1-d979-4e92-8214-e81fcf200c1b": {"doc_hash": "e4d19c52d74296f71a03711c382e56bff8df4f5b4eedc323153bba9d5dbec559", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}, "d2b32bbc-9c3c-4444-ab69-03b7cb0fc6b3": {"doc_hash": "80d7e1ff3199e2a72963eb440b34a116abd080ae53383d68c98b82eec82c60d4", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}, "24d48a57-30d0-4076-8b8e-368f32a8a92d": {"doc_hash": "972d2312627724d7e4c2c0d72acf4cf8cacbc901a4735d6fc486e65e0f9fd3cf", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}, "e84f60c6-c3f1-42fd-8343-9b2b95cf6750": {"doc_hash": "680afd88bdbff12c3279c6e5546b8388226f94251a654ac7a6565535fa5cbb23", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}, "6fd5c7f1-947a-45d4-8898-9c913de72969": {"doc_hash": "817414c46c7a9ae3f3e8be731846b1705c8279b401cc855e6a188cf88e71192d", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}, "4d3fdec8-4684-4cb3-8cc8-102fbc194b1f": {"doc_hash": "88ce96a0e3eb204695c5e37d80a8b389ae1f6afc4a5cf5e196b55eccb52e2960", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}, "4a45fd3c-70b3-4a98-a19c-463c5d75b688": {"doc_hash": "0e19cf4592aabe29f0ae9011f0161198a6e03019bdf9bb05b9ad33da10698d64", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}, "048475f1-60ba-4215-bbd5-b27bcbd8e8d0": {"doc_hash": "9f4bdf9a8c668fa990e12981cd008378df4ad62b91459b46c797277d6a507084", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}, "57ca9f2b-24a6-4ff8-ab07-b3c991514eeb": {"doc_hash": "8436fd5dac7ce4d7c2e7323f92d1b37c7137c9d75c6bd08742129f3405664964", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}, "c81ce7f2-17e5-4e49-adef-2a56c245083b": {"doc_hash": "55874e493b6715c776c63f3e8a4a3f3dba188b4b5363138a22178d3d403a178c", "ref_doc_id": "753affd8-3745-427e-aeb2-309b88ef5d23"}}, "docstore/ref_doc_info": {"753affd8-3745-427e-aeb2-309b88ef5d23": {"node_ids": ["4faae790-44b5-44d2-b4a9-499b41788c0d", "c451069d-0a8b-48c7-ba7a-0986b33d588b", "e606a635-5f09-41b7-8218-49bebb581b3f", "8f6f1ac7-1ff9-4e3b-95c9-305c56ed5325", "376c5ed1-d979-4e92-8214-e81fcf200c1b", "d2b32bbc-9c3c-4444-ab69-03b7cb0fc6b3", "24d48a57-30d0-4076-8b8e-368f32a8a92d", "e84f60c6-c3f1-42fd-8343-9b2b95cf6750", "6fd5c7f1-947a-45d4-8898-9c913de72969", "4d3fdec8-4684-4cb3-8cc8-102fbc194b1f", "4a45fd3c-70b3-4a98-a19c-463c5d75b688", "048475f1-60ba-4215-bbd5-b27bcbd8e8d0", "57ca9f2b-24a6-4ff8-ab07-b3c991514eeb", "c81ce7f2-17e5-4e49-adef-2a56c245083b"], "metadata": {"Header_1": " Summary", "filename": "dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12.md", "extension": ".md", "title": "Dumber LLM Agents Need More Constraints and Better Tools", "date": "May 23, 2023", "url": "https://www.llamaindex.ai/blog/dumber-llm-agents-need-more-constraints-and-better-tools-17a524c59e12"}}}}