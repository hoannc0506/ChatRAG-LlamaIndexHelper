{"docstore/data": {"860758b9-3da4-41a0-b957-026f3be1d182": {"__data__": {"id_": "860758b9-3da4-41a0-b957-026f3be1d182", "embedding": null, "metadata": {"filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903", "node_type": "4", "metadata": {"filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "ff4d278f758b012a8398b6484fc7080bec8fa57d827c6cd794afdb623384a11f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec164b8c-a95c-4834-b119-f426e7519c88", "node_type": "1", "metadata": {"Header_2": " Key Features of llama-agents"}, "hash": "bd54dd817ed40faa692cc04e5c3977341d9f7c127a8755db022a03219a4a7c75", "class_name": "RelatedNodeInfo"}}, "text": "We're excited to announce the alpha release of ` llama-agents ` , a new open-\nsource framework designed to simplify the process of building, iterating, and\ndeploying multi-agent AI systems and turn your agents into production\nmicroservices. Whether you're working on complex question-answering systems,\ncollaborative AI assistants, or distributed AI workflows, llama-agents\nprovides the tools and structure you need to bring your ideas to life.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 444, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ec164b8c-a95c-4834-b119-f426e7519c88": {"__data__": {"id_": "ec164b8c-a95c-4834-b119-f426e7519c88", "embedding": null, "metadata": {"Header_2": " Key Features of llama-agents", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903", "node_type": "4", "metadata": {"filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "ff4d278f758b012a8398b6484fc7080bec8fa57d827c6cd794afdb623384a11f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "860758b9-3da4-41a0-b957-026f3be1d182", "node_type": "1", "metadata": {"filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "3de6eee44398e447b1d2b6640a57dfb6dcbb01a70ac43c3a15ad4bdeef583fcc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1d82c93-1f0e-451a-8737-0c04e8dd6c2b", "node_type": "1", "metadata": {"Header_2": " Getting Started with llama-agents"}, "hash": "c9e4424ec673922b9862c7d5827945a15dddd39ab7bec62766f5217c7d91d61e", "class_name": "RelatedNodeInfo"}}, "text": "Key Features of llama-agents\n\n  1. **Distributed Service Oriented Architecture:** every agent in LlamaIndex can be its own independently running microservice, orchestrated by a fully customizable LLM-powered control plane that routes and distributes tasks. \n  2. **Communication via standardized API interfaces:** interface between agents using a central control plane orchestrator. Pass messages between agents using a message queue. \n  3. **Define agentic and explicit orchestration flows:** developers have the flexibility to directly define the sequence of interactions between agents, or leave it up to an \u201cagentic orchestrator\u201d that decides which agents are relevant to the task. \n  4. **Ease of deployment:** launch, scale and monitor each agent and your control plane independently. \n  5. **Scalability and resource management:** use our built-in observability tools to monitor the quality and performance of the system and each individual agent service \n\nLet's dive into how you can start using llama-agents to build your own multi-\nagent systems.", "mimetype": "text/plain", "start_char_idx": 450, "end_char_idx": 1506, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c1d82c93-1f0e-451a-8737-0c04e8dd6c2b": {"__data__": {"id_": "c1d82c93-1f0e-451a-8737-0c04e8dd6c2b", "embedding": null, "metadata": {"Header_2": " Getting Started with llama-agents", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903", "node_type": "4", "metadata": {"filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "ff4d278f758b012a8398b6484fc7080bec8fa57d827c6cd794afdb623384a11f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec164b8c-a95c-4834-b119-f426e7519c88", "node_type": "1", "metadata": {"Header_2": " Key Features of llama-agents", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "e823dce2014ab4aabd1a27bfff26bbc1dd4edc78f440a1a13caaae3b1f72ea36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c088c1ea-336a-4a04-a17c-5bde6cc2b29b", "node_type": "1", "metadata": {"Header_2": " Getting Started with llama-agents", "Header_3": " Basic System Setup"}, "hash": "6f2715dcf91246614af9833fc047b671dbf24afac95a5fccf7239ea8a7879755", "class_name": "RelatedNodeInfo"}}, "text": "Getting Started with llama-agents\n\nFirst, install the framework using pip:\n\n    \n    \n    pip install llama-agents llama-index-agent-openai", "mimetype": "text/plain", "start_char_idx": 1512, "end_char_idx": 1651, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c088c1ea-336a-4a04-a17c-5bde6cc2b29b": {"__data__": {"id_": "c088c1ea-336a-4a04-a17c-5bde6cc2b29b", "embedding": null, "metadata": {"Header_2": " Getting Started with llama-agents", "Header_3": " Basic System Setup", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903", "node_type": "4", "metadata": {"filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "ff4d278f758b012a8398b6484fc7080bec8fa57d827c6cd794afdb623384a11f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1d82c93-1f0e-451a-8737-0c04e8dd6c2b", "node_type": "1", "metadata": {"Header_2": " Getting Started with llama-agents", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "75daacb6df7897f81f7d8f42970569df9d6370740f361f516c74eae9c2d84885", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aaa90974-6c66-402c-a60a-04dde89589be", "node_type": "1", "metadata": {"Header_2": " Deploying Your Multi-Agent System"}, "hash": "4fab89dc923912d5fe466f349a5203b2a03604967ce75d5a946fbedd29ffdab7", "class_name": "RelatedNodeInfo"}}, "text": "Basic System Setup\n\nHere's a simple example of how to set up a basic multi-agent system using\nllama-agents. First we\u2019ll bring in our dependencies and set up our control\nplane, which contains our LLM-powered orchestrator\n\n    \n    \n    import dotenv\n    dotenv.load_dotenv() # our .env file defines OPENAI_API_KEY\n    from llama_agents import (\n        AgentService,\n        ControlPlaneServer,\n        SimpleMessageQueue,\n        AgentOrchestrator,\n    )\n    from llama_index.core.agent import FunctionCallingAgentWorker\n    from llama_index.core.tools import FunctionTool\n    from llama_index.llms.openai import OpenAI\n    import logging\n    \n    # turn on logging so we can see the system working\n    logging.getLogger(\"llama_agents\").setLevel(logging.INFO)\n    \n    # Set up the message queue and control plane\n    message_queue = SimpleMessageQueue()\n    control_plane = ControlPlaneServer(\n        message_queue=message_queue,\n        orchestrator=AgentOrchestrator(llm=OpenAI()),\n    )\n\nNext we create our tools using LlamaIndex\u2019s existing abstractions, provide\nthose tools to an agent, and turn that agent into an independent microservice:\n\n    \n    \n    # create a tool\n    def get_the_secret_fact() -> str:\n        \"\"\"Returns the secret fact.\"\"\"\n        return \"The secret fact is: A baby llama is called a 'Cria'.\"\n    \n    tool = FunctionTool.from_defaults(fn=get_the_secret_fact)\n    \n    # Define an agent\n    worker = FunctionCallingAgentWorker.from_tools([tool], llm=OpenAI())\n    agent = worker.as_agent()\n    \n    # Create an agent service\n    agent_service = AgentService(\n        agent=agent,\n        message_queue=message_queue,\n        description=\"General purpose assistant\",\n        service_name=\"assistant\",\n    )\n\nFinally we launch the service and the control plane. Note that here we\u2019re\nusing a helper function to run a single query through the system and then\nexit; next we\u2019ll show how to deploy this to production.\n\n    \n    \n    # Set up the launcher for local testing\n    from llama_agents import LocalLauncher\n    \n    launcher = LocalLauncher(\n        [agent_service],\n        control_plane,\n        message_queue,\n    )\n    \n    # Run a single query through the system\n    result = launcher.launch_single(\"What's the secret fact?\")\n    print(result)", "mimetype": "text/plain", "start_char_idx": 1658, "end_char_idx": 3940, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "aaa90974-6c66-402c-a60a-04dde89589be": {"__data__": {"id_": "aaa90974-6c66-402c-a60a-04dde89589be", "embedding": null, "metadata": {"Header_2": " Deploying Your Multi-Agent System", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903", "node_type": "4", "metadata": {"filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "ff4d278f758b012a8398b6484fc7080bec8fa57d827c6cd794afdb623384a11f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c088c1ea-336a-4a04-a17c-5bde6cc2b29b", "node_type": "1", "metadata": {"Header_2": " Getting Started with llama-agents", "Header_3": " Basic System Setup", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "7576bb689f8d648ee839b09e69d9c67c37e3b1769ede5fbbd3a626e44cc91497", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "84de3621-83eb-4d5b-b72e-06de3975c922", "node_type": "1", "metadata": {"Header_2": " Real-time monitoring"}, "hash": "76a4f647ac04a6e5bef103e53cff44e8564dfd9001f61a0f043fa461f914773a", "class_name": "RelatedNodeInfo"}}, "text": "Deploying Your Multi-Agent System\n\nOnce you've tested your system locally, you can deploy it as a set of services\nfor real production use. Here's how you might set that up. This is similar to\nthe previous example, but we\u2019ve added a second agent service and we\u2019re using a\ndifferent launcher. Let\u2019s bring in our dependencies and set up our control\nplane again:\n\n    \n    \n    import dotenv\n    dotenv.load_dotenv()\n    from llama_agents import (\n        AgentService,\n        AgentOrchestrator,\n        ControlPlaneServer,\n        SimpleMessageQueue,\n    )\n    \n    from llama_index.core.agent import FunctionCallingAgentWorker\n    from llama_index.core.tools import FunctionTool\n    from llama_index.llms.openai import OpenAI\n    import logging\n    \n    # change logging level to enable or disable more verbose logging\n    logging.getLogger(\"llama_agents\").setLevel(logging.INFO)\n    \n    # create our multi-agent framework components\n    message_queue = SimpleMessageQueue()\n    control_plane = ControlPlaneServer(\n        message_queue=message_queue,\n        orchestrator=AgentOrchestrator(llm=OpenAI()),\n    )\n\nThen as before we create a tool and an agent, though this time we\u2019ll add a\nsecond agent:\n\n    \n    \n    # create a tool\n    def get_the_secret_fact() -> str:\n        \"\"\"Returns the secret fact.\"\"\"\n        return \"The secret fact is: A baby llama is called a 'Cria'.\"\n    \n    tool = FunctionTool.from_defaults(fn=get_the_secret_fact)\n    \n    # create our agents\n    worker1 = FunctionCallingAgentWorker.from_tools([tool], llm=OpenAI())\n    worker2 = FunctionCallingAgentWorker.from_tools([], llm=OpenAI())\n    agent1 = worker1.as_agent()\n    agent2 = worker2.as_agent()\n\nWe turn those agents into services:\n\n    \n    \n    agent_server_1 = AgentService(\n        agent=agent1,\n        message_queue=message_queue,\n        description=\"Useful for getting the secret fact.\",\n        service_name=\"secret_fact_agent\",\n        host=\"localhost\",\n        port=8003\n    )\n    agent_server_2 = AgentService(\n        agent=agent2,\n        message_queue=message_queue,\n        description=\"Useful for getting random dumb facts.\",\n        service_name=\"dumb_fact_agent\",\n        host=\"localhost\",\n        port=8004\n    )\n\nAnd finally we launch each service as an independent agent. Here we\u2019re doing\nthem all from a single script, but each of these could be a totally separate\nservice, launched and scaled independently:\n\n    \n    \n    from llama_agents import ServerLauncher, CallableMessageConsumer\n    \n    # Additional human consumer\n    def handle_result(message) -> None:\n        print(f\"Got result:\", message.data)\n    \n    \n    # the final result is published to a \"human\" consumer\n    # so we define one to handle it!\n    human_consumer = CallableMessageConsumer(\n        handler=handle_result, message_type=\"human\"\n    )\n    \n    # Define Launcher\n    launcher = ServerLauncher(\n        [agent_server_1, agent_server_2],\n        control_plane,\n        message_queue,\n        additional_consumers=[human_consumer]\n    )\n    \n    launcher.launch_servers()", "mimetype": "text/plain", "start_char_idx": 3946, "end_char_idx": 7009, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "84de3621-83eb-4d5b-b72e-06de3975c922": {"__data__": {"id_": "84de3621-83eb-4d5b-b72e-06de3975c922", "embedding": null, "metadata": {"Header_2": " Real-time monitoring", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903", "node_type": "4", "metadata": {"filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "ff4d278f758b012a8398b6484fc7080bec8fa57d827c6cd794afdb623384a11f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aaa90974-6c66-402c-a60a-04dde89589be", "node_type": "1", "metadata": {"Header_2": " Deploying Your Multi-Agent System", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "63d2f030113766812b89554d34a951b11500a344c109089517f91a0725c4b036", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0de28231-a28d-420b-b68b-d38e28aab8ad", "node_type": "1", "metadata": {"Header_2": " Building a Query Rewriting RAG System"}, "hash": "ed6624d779ef3f27602960fe4d6e7e18f66b320c6e6182aadb3be00a3fbee5be", "class_name": "RelatedNodeInfo"}}, "text": "Real-time monitoring\n\nOne of the coolest debugging features of our multi-agent system is our agent\nmonitor, which is built right in. You launch it like this:\n\n    \n    \n    llama-agents monitor --control-plane-url http://127.0.0.1:8000\n\nOnce launched, you get an intuitive, point-and-click terminal application. You\ncan see both of the agents running, and at the bottom you can inject a task\nlike the query \u201cWhat is the secret fact?\u201d You\u2019ll get a job ID which you can\nthen click on to see your results:", "mimetype": "text/plain", "start_char_idx": 7015, "end_char_idx": 7517, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0de28231-a28d-420b-b68b-d38e28aab8ad": {"__data__": {"id_": "0de28231-a28d-420b-b68b-d38e28aab8ad", "embedding": null, "metadata": {"Header_2": " Building a Query Rewriting RAG System", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903", "node_type": "4", "metadata": {"filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "ff4d278f758b012a8398b6484fc7080bec8fa57d827c6cd794afdb623384a11f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84de3621-83eb-4d5b-b72e-06de3975c922", "node_type": "1", "metadata": {"Header_2": " Real-time monitoring", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "797c24efbae2ba50aacc6eac9c482f108534c8be9a10c077fa422b304228f8be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7173950d-eb65-4258-b663-eee82f9b7380", "node_type": "1", "metadata": {"Header_2": " Public roadmap"}, "hash": "b4b8553ca09702d5116302e7623ce397476c90eed3eb0211fca573962ede4148", "class_name": "RelatedNodeInfo"}}, "text": "Building a Query Rewriting RAG System\n\nLet's look at a more complex example: a Query Rewriting RAG system. This\nsystem will rewrite user queries to improve retrieval, then use the rewritten\nquery to perform RAG over a document.\n\nThis example demonstrates how to create a more sophisticated system that\ncombines query rewriting with RAG to improve question-answering capabilities.\nSee [ this notebook ](https://github.com/run-llama/llama-\nagents/blob/main/examples/query_rewrite_rag.ipynb) for a fuller explanation of\nwhat\u2019s going on.\n\n    \n    \n    import dotenv\n    dotenv.load_dotenv() # our .env defines OPENAI_API_KEY\n    from llama_index.core import VectorStoreIndex, Document\n    from llama_index.core.agent import FnAgentWorker\n    from llama_index.core import PromptTemplate\n    from llama_index.core.query_pipeline import QueryPipeline\n    from llama_index.core.query_engine import RetrieverQueryEngine\n    from llama_agents import (\n        AgentService,\n        ControlPlaneServer,\n        SimpleMessageQueue,\n        PipelineOrchestrator,\n        ServiceComponent,\n    )\n    from llama_agents.launchers import LocalLauncher\n    from llama_index.llms.openai import OpenAI\n    import logging\n    \n    # change logging level to enable or disable more verbose logging\n    logging.getLogger(\"llama_agents\").setLevel(logging.INFO)\n    \n    # Load and index your document\n    docs = [Document(text=\"The rabbit is a small mammal with long ears and a fluffy tail. His name is Peter.\")]\n    index = VectorStoreIndex.from_documents(docs)\n    \n    # Define a query rewrite agent\n    HYDE_PROMPT_STR = (\n        \"Please rewrite the following query to include more detail:\\n{query_str}\\n\"\n    )\n    HYDE_PROMPT_TMPL = PromptTemplate(HYDE_PROMPT_STR)\n    \n    def run_hyde_fn(state):\n        prompt_tmpl, llm, input_str = (\n            state[\"prompt_tmpl\"],\n            state[\"llm\"],\n            state[\"__task__\"].input,\n        )\n        qp = QueryPipeline(chain=[prompt_tmpl, llm])\n        output = qp.run(query_str=input_str)\n        state[\"__output__\"] = str(output)\n        return state, True\n    \n    hyde_agent = FnAgentWorker(\n        fn=run_hyde_fn,\n        initial_state={\"prompt_tmpl\": HYDE_PROMPT_TMPL, \"llm\": OpenAI()}\n    ).as_agent()\n    \n    # Define a RAG agent\n    def run_rag_fn(state):\n        retriever, llm, input_str = (\n            state[\"retriever\"],\n            state[\"llm\"],\n            state[\"__task__\"].input,\n        )\n        query_engine = RetrieverQueryEngine.from_args(retriever, llm=llm)\n        response = query_engine.query(input_str)\n        state[\"__output__\"] = str(response)\n        return state, True\n    \n    rag_agent = FnAgentWorker(\n        fn=run_rag_fn,\n        initial_state={\"retriever\": index.as_retriever(), \"llm\": OpenAI()}\n    ).as_agent()\n    \n    # Set up the multi-agent system\n    message_queue = SimpleMessageQueue()\n    \n    query_rewrite_service = AgentService(\n        agent=hyde_agent,\n        message_queue=message_queue,\n        description=\"Query rewriting service\",\n        service_name=\"query_rewrite\",\n    )\n    \n    rag_service = AgentService(\n        agent=rag_agent,\n        message_queue=message_queue,\n        description=\"RAG service\",\n        service_name=\"rag\",\n    )\n    \n    # Create the pipeline\n    pipeline = QueryPipeline(chain=[\n        ServiceComponent.from_service_definition(query_rewrite_service),\n        ServiceComponent.from_service_definition(rag_service),\n    ])\n    orchestrator = PipelineOrchestrator(pipeline)\n    \n    control_plane = ControlPlaneServer(\n        message_queue=message_queue,\n        orchestrator=orchestrator,\n    )\n    \n    # Set up the launcher\n    launcher = LocalLauncher(\n        [query_rewrite_service, rag_service],\n        control_plane,\n        message_queue,\n    )\n    \n    # Run a query\n    result = launcher.launch_single(\"Tell me about rabbits\")\n    print(result)", "mimetype": "text/plain", "start_char_idx": 7523, "end_char_idx": 11409, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7173950d-eb65-4258-b663-eee82f9b7380": {"__data__": {"id_": "7173950d-eb65-4258-b663-eee82f9b7380", "embedding": null, "metadata": {"Header_2": " Public roadmap", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903", "node_type": "4", "metadata": {"filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "ff4d278f758b012a8398b6484fc7080bec8fa57d827c6cd794afdb623384a11f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0de28231-a28d-420b-b68b-d38e28aab8ad", "node_type": "1", "metadata": {"Header_2": " Building a Query Rewriting RAG System", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "2c33eee655434dd5d4623a5766507619ee30f32b5f13b23994579f939b12848e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "647c2dde-40e7-4e58-bad2-0248be1fe7ab", "node_type": "1", "metadata": {"Header_2": " Dive in!"}, "hash": "b8d4e60e189c4b70ef29bde32e6ceb989ba4d818eccca07d7da7deade4ea470c", "class_name": "RelatedNodeInfo"}}, "text": "Public roadmap\n\nThis is an alpha release, meaning that we\u2019d love your feedback on features to\nbetter help you build multi-agent systems in production! We\u2019ve created a [\npublic roadmap ](https://github.com/run-llama/llama-agents/discussions/49)\nshowing where we plan to go from here. We\u2019re actively seeking public feedback\non what works for you and what doesn\u2019t.", "mimetype": "text/plain", "start_char_idx": 11415, "end_char_idx": 11776, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "647c2dde-40e7-4e58-bad2-0248be1fe7ab": {"__data__": {"id_": "647c2dde-40e7-4e58-bad2-0248be1fe7ab", "embedding": null, "metadata": {"Header_2": " Dive in!", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903", "node_type": "4", "metadata": {"filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "ff4d278f758b012a8398b6484fc7080bec8fa57d827c6cd794afdb623384a11f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7173950d-eb65-4258-b663-eee82f9b7380", "node_type": "1", "metadata": {"Header_2": " Public roadmap", "filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}, "hash": "769ec32d4eeb79a7d17b6366f40fa029f0b0f2d199154fa9f4264a5b9f3b8263", "class_name": "RelatedNodeInfo"}}, "text": "Dive in!\n\n` llama-agents ` provides a powerful, flexible framework for building complex\nmulti-agent AI systems. Whether you're prototyping a new idea or scaling to\nproduction, ` llama-agents ` offers the tools you need to bring your AI vision\nto life. Check out [ the repo ](https://github.com/run-llama/llama-agents) to\nlearn more, especially our library of [ examples ](https://github.com/run-\nllama/llama-agents/tree/main/examples) .\n\nWe're excited to see what the community builds with ` llama-agents ` . Happy\ncoding!", "mimetype": "text/plain", "start_char_idx": 11782, "end_char_idx": 12304, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"860758b9-3da4-41a0-b957-026f3be1d182": {"doc_hash": "3de6eee44398e447b1d2b6640a57dfb6dcbb01a70ac43c3a15ad4bdeef583fcc", "ref_doc_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903"}, "ec164b8c-a95c-4834-b119-f426e7519c88": {"doc_hash": "e823dce2014ab4aabd1a27bfff26bbc1dd4edc78f440a1a13caaae3b1f72ea36", "ref_doc_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903"}, "c1d82c93-1f0e-451a-8737-0c04e8dd6c2b": {"doc_hash": "75daacb6df7897f81f7d8f42970569df9d6370740f361f516c74eae9c2d84885", "ref_doc_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903"}, "c088c1ea-336a-4a04-a17c-5bde6cc2b29b": {"doc_hash": "7576bb689f8d648ee839b09e69d9c67c37e3b1769ede5fbbd3a626e44cc91497", "ref_doc_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903"}, "aaa90974-6c66-402c-a60a-04dde89589be": {"doc_hash": "63d2f030113766812b89554d34a951b11500a344c109089517f91a0725c4b036", "ref_doc_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903"}, "84de3621-83eb-4d5b-b72e-06de3975c922": {"doc_hash": "797c24efbae2ba50aacc6eac9c482f108534c8be9a10c077fa422b304228f8be", "ref_doc_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903"}, "0de28231-a28d-420b-b68b-d38e28aab8ad": {"doc_hash": "2c33eee655434dd5d4623a5766507619ee30f32b5f13b23994579f939b12848e", "ref_doc_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903"}, "7173950d-eb65-4258-b663-eee82f9b7380": {"doc_hash": "769ec32d4eeb79a7d17b6366f40fa029f0b0f2d199154fa9f4264a5b9f3b8263", "ref_doc_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903"}, "647c2dde-40e7-4e58-bad2-0248be1fe7ab": {"doc_hash": "0db53d084f658932a090fa1deb7432c934f433e075cc326708694fbf660090b7", "ref_doc_id": "22f5adc3-5f02-4b57-aa9c-73d1bc7e4903"}}, "docstore/ref_doc_info": {"22f5adc3-5f02-4b57-aa9c-73d1bc7e4903": {"node_ids": ["860758b9-3da4-41a0-b957-026f3be1d182", "ec164b8c-a95c-4834-b119-f426e7519c88", "c1d82c93-1f0e-451a-8737-0c04e8dd6c2b", "c088c1ea-336a-4a04-a17c-5bde6cc2b29b", "aaa90974-6c66-402c-a60a-04dde89589be", "84de3621-83eb-4d5b-b72e-06de3975c922", "0de28231-a28d-420b-b68b-d38e28aab8ad", "7173950d-eb65-4258-b663-eee82f9b7380", "647c2dde-40e7-4e58-bad2-0248be1fe7ab"], "metadata": {"filename": "introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems.md", "extension": ".md", "title": "Introducing llama-agents: A Powerful Framework for Building Production Multi-Agent AI Systems", "date": "Jun 26, 2024", "url": "https://www.llamaindex.ai/blog/introducing-llama-agents-a-powerful-framework-for-building-production-multi-agent-ai-systems"}}}}