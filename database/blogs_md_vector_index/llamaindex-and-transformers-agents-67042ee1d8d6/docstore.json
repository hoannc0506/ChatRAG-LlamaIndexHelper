{"docstore/data": {"4e51951c-7139-4c36-82f8-aec46302f6f0": {"__data__": {"id_": "4e51951c-7139-4c36-82f8-aec46302f6f0", "embedding": null, "metadata": {"Header_1": " Summary", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7", "node_type": "4", "metadata": {"filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "hash": "e0fa6d1413a85ce85d9107470598cd7d45034c41ebb6a1ace380486ccd090c4a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75630b94-bedf-4d7f-8738-fcdcb3ca01da", "node_type": "1", "metadata": {"Header_1": " Creating the Tool"}, "hash": "2afa050f57e79aada4232619b7819a39a0353d2b7a2b370280b2267cdc8f12fc", "class_name": "RelatedNodeInfo"}}, "text": "Summary\n\nAgents are a popular use-case for Large Language Models (LLMs), typically\nprovide a structure that enables LLMs to make decisions, use tools, and\naccomplish tasks. These agents can take many forms, like the fully-autonomous\nversions seen with [ Auto-GPT ](https://github.com/Significant-Gravitas/Auto-\nGPT) , to more controlled implementations like [ Langchain\n](https://python.langchain.com/en/latest/) Agents. With the recent release of\n[ Transformers Agents\n](https://huggingface.co/docs/transformers/transformers_agents) , we showcase\nhow [ LlamaIndex ](https://www.llamaindex.ai/) continues to be a useful tool\nfor agents, by augmenting their existing image-generator tool. Using an vector\nindex created from 10K [ DiffusionDB\n](https://huggingface.co/datasets/poloclub/diffusiondb) prompts, the\nText2Image Prompt Assistant tool we created can re-write prompts to generate\nmore beautiful images. Full source code is available in the [ Hugging Face\nSpace for the tool\n](https://huggingface.co/spaces/llamaindex/text2image_prompt_assistant/tree/main)\n, and a [ colab notebook\n](https://colab.research.google.com/drive/1r0t423LTkCYi5fGLrSfTdtC0DzKuU-\nzq?usp=sharing) is available as a usage walkthrough.", "mimetype": "text/plain", "start_char_idx": 3, "end_char_idx": 1217, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "75630b94-bedf-4d7f-8738-fcdcb3ca01da": {"__data__": {"id_": "75630b94-bedf-4d7f-8738-fcdcb3ca01da", "embedding": null, "metadata": {"Header_1": " Creating the Tool", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7", "node_type": "4", "metadata": {"filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "hash": "e0fa6d1413a85ce85d9107470598cd7d45034c41ebb6a1ace380486ccd090c4a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4e51951c-7139-4c36-82f8-aec46302f6f0", "node_type": "1", "metadata": {"Header_1": " Summary", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "hash": "b31f168de576984d15f2f9fb7d010b5f3772873334d397d751de2b9efc9a44de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0684390c-deee-4327-8da9-bd148f84177c", "node_type": "1", "metadata": {"Header_1": " Creating the Tool", "Header_2": " Snag #1"}, "hash": "da9002b6a5f284001b46b285fc40d97f3d18a8d18d3c8216074a80ce7bfe46e6", "class_name": "RelatedNodeInfo"}}, "text": "Creating the Tool\n\nTransformers Agents come with a variety of per-configured tools that leverage\nthe vast amounts of open-source models hosted on Hugging Face-Hub.\nFurthermore, additional tools can be created and shared by simply publishing a\nnew Hugging Face Space with the proper tool setup.\n\nTo create a tool, your code simply needs a ` tool_config.json ` file that\ndescribes the tool, as well as a file containing the implementation of your\ntool. While the documentation was a little fuzzy for this part, we eventually\nwere able to use [ the implementation of existing custom tools\n](https://huggingface.co/huggingface-tools) as the framework for our own.\n\nTo enable LlamaIndex to write text-to-image prompts, we need a way to show the\nLLM what examples of good prompts look like. To do this, we indexed 10K random\ntext-to-image prompts from DiffusionDB.\n\n    \n    \n    from datasets import load_dataset\n    from llama_index import VectorStoreIndex, Document\n    \n    # downloads a LOT of data\n    dataset = load_dataset('poloclub/diffusiondb', '2m_random_10k')\n    \n    documents = []\n    for sample in dataset['train']:\n        documents.append(Document(sample['prompt']))\n    \n    # create index\n    index = VectorStoreIndex.from_documents(documents)\n    \n    # store index\n    index.storage_context.persist(persist_dir=\"./storage\")\n\nTo get LlamaIndex to write prompts using examples, we need to customize the\nprompt templates a bit. You can see the final prompt templates and how to use\nthem below:\n\n    \n    \n    text_qa_template = Prompt(\n        \"Examples of text-to-image prompts are below: \\n\"\n        \"---------------------\\n\"\n        \"{context_str}\"\n        \"\\n---------------------\\n\"\n        \"Given the existing examples of text-to-image prompts, \"\n        \"write a new text-to-image prompt in the style of the examples, \"\n        \"by re-wording the following prompt to match the style of the above examples: {query_str}\\n\"\n    )\n    \n    \n    refine_template = Prompt(\n        \"The initial prompt is as follows: {query_str}\\n\"\n        \"We have provided an existing text-to-image prompt based on this query: {existing_answer}\\n\"\n        \"We have the opportunity to refine the existing prompt \"\n        \"(only if needed) with some more relevant examples of text-to-image prompts below.\\n\"\n        \"------------\\n\"\n        \"{context_msg}\\n\"\n        \"------------\\n\"\n        \"Given the new examples of text-to-image prompts, refine the existing text-to-image prompt to better \"\n        \"statisfy the required style. \"\n        \"If the context isn't useful, or the existing prompt is good enough, return the existing prompt.\"\n    )\n    \n    query_engine = index.as_query_engine(\n        text_qa_template=text_qa_template, \n        refine_template=refine_template\n    )\n    \n    response = query_engine.query(\"Draw me a picture of a happy dog\")", "mimetype": "text/plain", "start_char_idx": 1222, "end_char_idx": 4077, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "0684390c-deee-4327-8da9-bd148f84177c": {"__data__": {"id_": "0684390c-deee-4327-8da9-bd148f84177c", "embedding": null, "metadata": {"Header_1": " Creating the Tool", "Header_2": " Snag #1", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7", "node_type": "4", "metadata": {"filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "hash": "e0fa6d1413a85ce85d9107470598cd7d45034c41ebb6a1ace380486ccd090c4a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75630b94-bedf-4d7f-8738-fcdcb3ca01da", "node_type": "1", "metadata": {"Header_1": " Creating the Tool", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "hash": "7c3f1051ad585dc8d3d4d00ce0789d33f502275161312348b09d4f501880f02a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6c4b8d3f-7fb4-4341-b73c-2a78bf6bd9d8", "node_type": "1", "metadata": {"Header_1": " Creating the Tool", "Header_2": " Snag #2"}, "hash": "4b9ebfd19d0c3bdc07f0bdf6e6189defba188fe8720b17f20d38f1055ab41d76", "class_name": "RelatedNodeInfo"}}, "text": "Snag #1\n\nOne main drawback of Transformers Agents currently is that they will only pick\none tool to solve each prompt. So if we want to augment the image-generator\ntool, we need to replace it! In our tool implementation, we actually load the\noriginal image-generator tool and call it after running LlamaIndex to generate\na new text-to-image prompt.", "mimetype": "text/plain", "start_char_idx": 4083, "end_char_idx": 4431, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6c4b8d3f-7fb4-4341-b73c-2a78bf6bd9d8": {"__data__": {"id_": "6c4b8d3f-7fb4-4341-b73c-2a78bf6bd9d8", "embedding": null, "metadata": {"Header_1": " Creating the Tool", "Header_2": " Snag #2", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7", "node_type": "4", "metadata": {"filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "hash": "e0fa6d1413a85ce85d9107470598cd7d45034c41ebb6a1ace380486ccd090c4a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0684390c-deee-4327-8da9-bd148f84177c", "node_type": "1", "metadata": {"Header_1": " Creating the Tool", "Header_2": " Snag #1", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "hash": "f2996d0a528ea2046d092f66c7b9d2f32d9e51ada3616ac1e252642521c5c122", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7708ea0d-b561-475d-9d7d-0b3c2a554396", "node_type": "1", "metadata": {"Header_1": " Creating the Tool", "Header_2": " Back on Track"}, "hash": "16eebf8c22f6eea31b88d3aa6cc74391054b36c65efdd0369b296f9754e792a9", "class_name": "RelatedNodeInfo"}}, "text": "Snag #2\n\nThe next bump in our journey is how Hugging Face downloads tools from the\nspace. Initially, it only downloading the ` tool_config.json ` file and the\nsource code for the tool. But we also need to download the prompts we spent\ntime indexing!\n\nTo get around this, during the ` setup() ` of the tool, we call `\nhf_hub_download() ` to download the files we need to load the index.", "mimetype": "text/plain", "start_char_idx": 4437, "end_char_idx": 4822, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7708ea0d-b561-475d-9d7d-0b3c2a554396": {"__data__": {"id_": "7708ea0d-b561-475d-9d7d-0b3c2a554396", "embedding": null, "metadata": {"Header_1": " Creating the Tool", "Header_2": " Back on Track", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7", "node_type": "4", "metadata": {"filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "hash": "e0fa6d1413a85ce85d9107470598cd7d45034c41ebb6a1ace380486ccd090c4a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6c4b8d3f-7fb4-4341-b73c-2a78bf6bd9d8", "node_type": "1", "metadata": {"Header_1": " Creating the Tool", "Header_2": " Snag #2", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "hash": "188bfa7970002bcc6a6f5ffbb4e5d46a5474e4519e83b2702a242e7d2e9a030f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca1479c8-4e23-484a-a040-8c8bd7b3131a", "node_type": "1", "metadata": {"Header_1": " Running the Tool"}, "hash": "6b25cb3f5eb743fa3be83834e4eb88e8061511c0d1fe15b12308662a29ee56eb", "class_name": "RelatedNodeInfo"}}, "text": "Back on Track\n\nWith the index created and the general processes figured out, the actual tool\nimplementation is fairly straightforward.\n\n    \n    \n    class Text2ImagePromptAssistant(Tool):\n        \n        inputs = ['text']\n        outputs = ['image']\n        description = PROMPT_ASSISTANT_DESCRIPTION\n        \n        def __init__(self, *args, openai_api_key='', model_name='text-davinci-003', temperature=0.3, verbose=False, **hub_kwargs):\n            super().__init__()\n            os.environ['OPENAI_API_KEY'] = openai_api_key\n            if model_name == 'text-davinci-003':\n                llm = OpenAI(model_name=model_name, temperature=temperature)\n            elif model_name in ('gpt-3.5-turbo', 'gpt-4'):\n                llm = ChatOpenAI(model_name=model_name, temperature=temperature)\n            else:\n                raise ValueError(\n                    f\"{model_name} is not supported, please choose one \"\n                    \"of 'text-davinci-003', 'gpt-3.5-turbo', or 'gpt-4'.\"\n                )\n            service_context = ServiceContext.from_defaults(llm_predictor=LLMPredictor(llm=llm))\n            set_global_service_context(service_context)\n            \n            self.storage_path = os.path.dirname(__file__)\n            self.verbose = verbose\n            self.hub_kwargs = hub_kwargs\n    \n        def setup(self):\n            hf_hub_download(repo_id=\"llamaindex/text2image_prompt_assistant\", filename=\"storage/vector_store.json\", repo_type=\"space\", local_dir=self.storage_path)\n            hf_hub_download(repo_id=\"llamaindex/text2image_prompt_assistant\", filename=\"storage/index_store.json\", repo_type=\"space\", local_dir=self.storage_path)\n            hf_hub_download(repo_id=\"llamaindex/text2image_prompt_assistant\", filename=\"storage/docstore.json\", repo_type=\"space\", local_dir=self.storage_path)\n            \n            self.index = load_index_from_storage(StorageContext.from_defaults(persist_dir=os.path.join(self.storage_path, \"storage\")))\n            self.query_engine = self.index.as_query_engine(similarity_top_k=5, text_qa_template=text_qa_template, refine_template=refine_template)\n            \n            # setup the text-to-image tool too\n            self.text2image = load_tool('huggingface-tools/text-to-image')\n            self.text2image.setup()\n    \n            self.initialized = True\n    \n        def __call__(self, prompt):\n            if not self.is_initialized:\n                self.setup()\n    \n            better_prompt = str(self.query_engine.query(prompt)).strip()\n            \n            if self.verbose:\n                print('==New prompt generated by LlamaIndex==', flush=True)\n                print(better_prompt, '\\n', flush=True)\n    \n            return self.text2image(better_prompt)", "mimetype": "text/plain", "start_char_idx": 4828, "end_char_idx": 7581, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ca1479c8-4e23-484a-a040-8c8bd7b3131a": {"__data__": {"id_": "ca1479c8-4e23-484a-a040-8c8bd7b3131a", "embedding": null, "metadata": {"Header_1": " Running the Tool", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7", "node_type": "4", "metadata": {"filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "hash": "e0fa6d1413a85ce85d9107470598cd7d45034c41ebb6a1ace380486ccd090c4a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7708ea0d-b561-475d-9d7d-0b3c2a554396", "node_type": "1", "metadata": {"Header_1": " Creating the Tool", "Header_2": " Back on Track", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "hash": "d3dba6f228048797a1565ca7e1e60dd61792b8574091273e5bfb7518c69d21af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3144b52-4550-4f06-ab4d-433ed0c2ecde", "node_type": "1", "metadata": {"Header_1": " Conclusion"}, "hash": "07db3b81b40a2b3cc599e235a6ff35fc3c21c898a608b108965b02a520d08d29", "class_name": "RelatedNodeInfo"}}, "text": "Running the Tool\n\nWith the tool setup, we can now test it with an actual agent! For testing, we\nused an ` OpenAIAgent ` with the ` text-davinci-003 ` model. When asked to\ndraw a picture of a mountain, this is what we got:\n\n    \n    \n    from transformers import OpenAiAgent\n    agent = OpenAiAgent(model=\"text-davinci-003\", api_key=\"your_api_key\")\n    \n    agent.run(\"Draw me a picture a mountain.\")\n\nThe initial picture of mountains that the agent created.\n\nAs you can see, the picture looks alright. But, text-to-image prompts are\nsomewhat of an art.\n\nTo use our new tool, we just need to replace the existing image-generator\ntool:\n\n    \n    \n    from transformers import load_tool\n    prompt_assistant = load_tool(\n        \"llamaindex/text2image_prompt_assistant\",\n        openai_api_key=\"your_api_key\",\n        model_name='text-davinci-003',\n        temperature=0.3,  # increase or decrease this to control variation\n        verbose=True\n    )\n    \n    from transformers import OpenAiAgent\n    agent = OpenAiAgent(model=\"text-davinci-003\", api_key=\"your_api_key\")\n    \n    # replace the existing tool\n    agent.toolbox['image_generator'] = prompt_assistant\n    \n    agent.run(\"Draw me a picture a mountain.\")\n\nUsing Our new LlamaIndex Prompt Assistant tool, we get a much more stylized\nresult. In the terminal, we see the prompt was re-written as \u201ca majestic\nmountain peak, surrounded by lush greenery, with a stunning sunset in the\nbackground,\u201d which resulted in the following image:\n\nImage generated by our Text2Image Prompt Assistant tool.\n\nLooks great! With the temperature variable, we can control how varied the\ngenerated prompts become. With a temperature above zero, each prompt generated\nby LlamaIndex with the same agent prompt will be brand new!", "mimetype": "text/plain", "start_char_idx": 7586, "end_char_idx": 9346, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "a3144b52-4550-4f06-ab4d-433ed0c2ecde": {"__data__": {"id_": "a3144b52-4550-4f06-ab4d-433ed0c2ecde", "embedding": null, "metadata": {"Header_1": " Conclusion", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7", "node_type": "4", "metadata": {"filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "hash": "e0fa6d1413a85ce85d9107470598cd7d45034c41ebb6a1ace380486ccd090c4a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca1479c8-4e23-484a-a040-8c8bd7b3131a", "node_type": "1", "metadata": {"Header_1": " Running the Tool", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}, "hash": "c9f9d16735a60e4ae3538233241b6b1505a15b895f795cbbd264a3d7b4a0701a", "class_name": "RelatedNodeInfo"}}, "text": "Conclusion\n\nIn conclusion, we have demonstrated how LlamaIndex can be used to augment LLM\nagents, by implementing a Text2Image Prompt Assistant tool with a Transformers\nAgent. Using a vector database created from DiffusionDB, LlamaIndex can\nsuggest better prompts when generating images.\n\nCustom tools in Transformers Agents are easily distributed and shared using\nHugging Face Spaces, and we are excited to see what other people build and\nshare!", "mimetype": "text/plain", "start_char_idx": 9351, "end_char_idx": 9797, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"4e51951c-7139-4c36-82f8-aec46302f6f0": {"doc_hash": "b31f168de576984d15f2f9fb7d010b5f3772873334d397d751de2b9efc9a44de", "ref_doc_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7"}, "75630b94-bedf-4d7f-8738-fcdcb3ca01da": {"doc_hash": "7c3f1051ad585dc8d3d4d00ce0789d33f502275161312348b09d4f501880f02a", "ref_doc_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7"}, "0684390c-deee-4327-8da9-bd148f84177c": {"doc_hash": "f2996d0a528ea2046d092f66c7b9d2f32d9e51ada3616ac1e252642521c5c122", "ref_doc_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7"}, "6c4b8d3f-7fb4-4341-b73c-2a78bf6bd9d8": {"doc_hash": "188bfa7970002bcc6a6f5ffbb4e5d46a5474e4519e83b2702a242e7d2e9a030f", "ref_doc_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7"}, "7708ea0d-b561-475d-9d7d-0b3c2a554396": {"doc_hash": "d3dba6f228048797a1565ca7e1e60dd61792b8574091273e5bfb7518c69d21af", "ref_doc_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7"}, "ca1479c8-4e23-484a-a040-8c8bd7b3131a": {"doc_hash": "c9f9d16735a60e4ae3538233241b6b1505a15b895f795cbbd264a3d7b4a0701a", "ref_doc_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7"}, "a3144b52-4550-4f06-ab4d-433ed0c2ecde": {"doc_hash": "b9ff13ae729f57a1a67ad973fd023bfc64794c04b4bf356a0a8a72889e542a66", "ref_doc_id": "cbb0a833-745c-4a8c-8f99-062e2267e1a7"}}, "docstore/ref_doc_info": {"cbb0a833-745c-4a8c-8f99-062e2267e1a7": {"node_ids": ["4e51951c-7139-4c36-82f8-aec46302f6f0", "75630b94-bedf-4d7f-8738-fcdcb3ca01da", "0684390c-deee-4327-8da9-bd148f84177c", "6c4b8d3f-7fb4-4341-b73c-2a78bf6bd9d8", "7708ea0d-b561-475d-9d7d-0b3c2a554396", "ca1479c8-4e23-484a-a040-8c8bd7b3131a", "a3144b52-4550-4f06-ab4d-433ed0c2ecde"], "metadata": {"Header_1": " Summary", "filename": "llamaindex-and-transformers-agents-67042ee1d8d6.md", "extension": ".md", "title": "LlamaIndex and Transformers Agents", "date": "Jun 8, 2023", "url": "https://www.llamaindex.ai/blog/llamaindex-and-transformers-agents-67042ee1d8d6"}}}}