{"docstore/data": {"e8587e62-ccb5-4890-be09-2a97e5850422": {"__data__": {"id_": "e8587e62-ccb5-4890-be09-2a97e5850422", "embedding": null, "metadata": {"filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b0436bb0-6511-4f3a-8fe2-cc4777ec2029", "node_type": "4", "metadata": {"filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "hash": "ab0941a38c19d9218d1144547e08ea9e71d5d6dede820dcf68dd0f15381951ec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ade9911b-cefc-4427-b6d5-710901cbc311", "node_type": "1", "metadata": {"Header_1": " Complexity of Parsing PDFs"}, "hash": "30ca979beaf7982f8c1c839a0fc15e8372254452d0da63118c8810c5a3a87964", "class_name": "RelatedNodeInfo"}}, "text": "Despite recent motivation to utilize NLP for wider range of real world\napplications, most NLP papers, tasks and pipelines assume raw, clean texts.\nHowever, many texts we encounter in the wild, including a vast majority of\nlegal documents (e.g., contracts and legal codes), are not so clean, with many\nof them being visually structured documents (VSDs) such as PDFs. PDFs are\nversatile, preserving the visual integrity of documents, but they often pose a\nsignificant challenge when it comes to extracting and manipulating their\ncontents.\n\nIn this discussion, our focus will primarily be on text-only layered PDFs, a\ncategory often regarded by many as a resolved issue.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 667, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ade9911b-cefc-4427-b6d5-710901cbc311": {"__data__": {"id_": "ade9911b-cefc-4427-b6d5-710901cbc311", "embedding": null, "metadata": {"Header_1": " Complexity of Parsing PDFs", "filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b0436bb0-6511-4f3a-8fe2-cc4777ec2029", "node_type": "4", "metadata": {"filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "hash": "ab0941a38c19d9218d1144547e08ea9e71d5d6dede820dcf68dd0f15381951ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8587e62-ccb5-4890-be09-2a97e5850422", "node_type": "1", "metadata": {"filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "hash": "6c816a51684ea9d50423e870c7f04021f82b58946bc7abf7757f3eab10569e97", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f37f710c-46f4-4808-8aed-a29ce49183d7", "node_type": "1", "metadata": {"Header_1": " Do we need an efficient parser?"}, "hash": "24ce42248f6c6fa5cd25dc107c4cae5491231ddf45a16b131a7d6737c790dcd7", "class_name": "RelatedNodeInfo"}}, "text": "Complexity of Parsing PDFs\n\n  1. **Layout Complexity** : PDFs can contain complex layouts, such as multi-column text, tables, images, and intricate formatting. This layout diversity complicates the extraction of structured data. \n  2. **Font encoding issue** s: PDFs use a variety of font encoding systems, and some of these systems do not map directly to Unicode. This can make it difficult to extract the text accurately. \n  3. **Non-linear text storage:** PDFs do not store text in the order it appears on the page. Instead, they store text in objects that can be placed anywhere on the page. This means that the order of the text in the underlying code may not match the order of the text as it appears visually. \n  4. **Inconsistent use of spaces** : In some PDFs, spaces are not used consistently or are not used at all between words. This can make it difficult to even identify word boundaries.", "mimetype": "text/plain", "start_char_idx": 672, "end_char_idx": 1573, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f37f710c-46f4-4808-8aed-a29ce49183d7": {"__data__": {"id_": "f37f710c-46f4-4808-8aed-a29ce49183d7", "embedding": null, "metadata": {"Header_1": " Do we need an efficient parser?", "filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b0436bb0-6511-4f3a-8fe2-cc4777ec2029", "node_type": "4", "metadata": {"filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "hash": "ab0941a38c19d9218d1144547e08ea9e71d5d6dede820dcf68dd0f15381951ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ade9911b-cefc-4427-b6d5-710901cbc311", "node_type": "1", "metadata": {"Header_1": " Complexity of Parsing PDFs", "filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "hash": "3df9b574bac2d4bbcce48d37e31d43630097d23b669b83ce9fa05966f2dc50b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c65d0da-f2a5-428d-a666-831e591926e4", "node_type": "1", "metadata": {"Header_1": " Where\u2019s This Article Headed, Anyway?"}, "hash": "9c034ba1e16f8833db4323c668a8cc2e6a3d75f7cadc582695137cdf89effe29", "class_name": "RelatedNodeInfo"}}, "text": "Do we need an efficient parser?\n\n> In the Age of LLMs, is an Efficient Parser Still Essential When LLMs Can\n> Process Entire PDFs?\n\nThis question gains relevance if the answer to this next question is \u201cYes\u201d.\n\n> Do we need Retrieval-Augmented Generation (RAG)?\n\nWhile LLMs are powerful, they have certain limitations in terms of the amount\nof text they can process at once and the scope of information they can\nreference. Further recent research have suggested LLM performance is often\nhighest when relevant information occurs at the beginning or end of the input\ncontext, and significantly degrades when models must access relevant\ninformation in the middle of long contexts. Techniques like RAG help overcome\nthese limitations, enabling more effective and efficient processing of large\ndocuments and broader information retrieval.\n\n> Still Skeptical? Let\u2019s ask an LLM for confirmation.\n\nNow that we\u2019ve established the importance of an efficient parser, it becomes\ninstrumental in constructing an effective Retrieval-Augmented Generation (RAG)\npipeline to address the limitations of an LLM. Let\u2019s explore how we are\nachieving this today. It\u2019s crucial to remember that the quality of the context\nfed to an LLM is the cornerstone of an effective RAG, as the saying goes, \u2018\n**_Garbage In \u2014 Garbage Out_ ** .\u2019\n\nIn the context of building LLM-related applications, **chunking** is the\nprocess of breaking down large pieces of text into smaller segments. It\u2019s an\nessential technique that helps optimize the relevance of the content we get\nback from a database once we use the LLM to embed content. Some of the\nstrategies involved are\n\n  1. **Fixed-size chunking** . This is the most common and straightforward approach to chunking: we simply decide the number of tokens in our chunk and, optionally, whether there should be any overlap between them. Easy to implement & most commonly used, but never makes it to a production setting because the output is satisfactory in a Proof of Concept (POC) setup, but its accuracy degrades as we conduct further testing. \n  2. **\u201cContent-aware\u201d chunking** . Set of methods for taking advantage of the nature of the content we\u2019re chunking and applying more sophisticated chunking to it. Challenging to implement due to the reasons mentioned above, but if tackled correctly, it could be the most ideal building block for a production-grade Information Retrieval (IR) engine.", "mimetype": "text/plain", "start_char_idx": 1579, "end_char_idx": 3984, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c65d0da-f2a5-428d-a666-831e591926e4": {"__data__": {"id_": "5c65d0da-f2a5-428d-a666-831e591926e4", "embedding": null, "metadata": {"Header_1": " Where\u2019s This Article Headed, Anyway?", "filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b0436bb0-6511-4f3a-8fe2-cc4777ec2029", "node_type": "4", "metadata": {"filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "hash": "ab0941a38c19d9218d1144547e08ea9e71d5d6dede820dcf68dd0f15381951ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f37f710c-46f4-4808-8aed-a29ce49183d7", "node_type": "1", "metadata": {"Header_1": " Do we need an efficient parser?", "filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "hash": "220be90ad0e5a66a2b55d2a7689dc5c8b58f9e585df21bf3415944312663111a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ebab020b-86ee-4342-80f3-a11a52e565a7", "node_type": "1", "metadata": {"Header_1": " Where\u2019s This Article Headed, Anyway?", "Header_2": " Vector search and RAG with Smart Chunking"}, "hash": "ced983914cea9e54dff0f7693e71e537df8302d07ea1e0c40895d7b492bc5c85", "class_name": "RelatedNodeInfo"}}, "text": "Where\u2019s This Article Headed, Anyway?\n\nCertainly, let\u2019s put an end to the historical and background details, shall\nwe?\n\nIntroducing [ **LayoutPDFReader**\n](https://github.com/nlmatics/llmsherpa#layoutpdfreader) for \u201c _Context-aware_\n\u201d chunking. [ LayoutPDFReader ](https://github.com/nlmatics/llmsherpa) can act\nas the most important tool in your RAG arsenal by parsing PDFs along with\nhierarchical layout information such as:\n\n  1. Identifying sections and subsections, along with their respective hierarchy levels. \n  2. Merging lines into coherent paragraphs. \n  3. Establishing connections between sections and paragraphs. \n  4. Recognizing tables and associating them with their corresponding sections. \n  5. Handling lists and nested list structures with precision. \n\nThe first step in using the [ LayoutPDFReader\n](https://github.com/nlmatics/llmsherpa) is to provide a URL or file path to\nit (assuming it\u2019s already been installed) and get back a document object.\n\n    \n    \n    from llmsherpa.readers import LayoutPDFReaderllmsherpa_api_url = \"https://readers.llmsherpa.com/api/document/developer/parseDocument?renderFormat=all\"pdf_url = \"https://arxiv.org/pdf/1910.13461.pdf\" # also allowed is a file path e.g. /home/downloads/xyz.pdfpdf_reader = LayoutPDFReader(llmsherpa_api_url)doc = pdf_reader.read_pdf(pdf_url)", "mimetype": "text/plain", "start_char_idx": 3990, "end_char_idx": 5313, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ebab020b-86ee-4342-80f3-a11a52e565a7": {"__data__": {"id_": "ebab020b-86ee-4342-80f3-a11a52e565a7", "embedding": null, "metadata": {"Header_1": " Where\u2019s This Article Headed, Anyway?", "Header_2": " Vector search and RAG with Smart Chunking", "filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b0436bb0-6511-4f3a-8fe2-cc4777ec2029", "node_type": "4", "metadata": {"filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "hash": "ab0941a38c19d9218d1144547e08ea9e71d5d6dede820dcf68dd0f15381951ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c65d0da-f2a5-428d-a666-831e591926e4", "node_type": "1", "metadata": {"Header_1": " Where\u2019s This Article Headed, Anyway?", "filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "hash": "721fb0eb271cfdfd39d0176225747868fea4edd3de019e82e3ea6d7640f1792d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "921f1a9f-383c-498a-ba53-4c82f1b89522", "node_type": "1", "metadata": {"Header_1": " References"}, "hash": "cce1d04650ff424a7c5ebda78cd8861f952cff394b5be283722520bda095c552", "class_name": "RelatedNodeInfo"}}, "text": "Vector search and RAG with Smart Chunking\n\nLayoutPDFReader employs intelligent chunking to maintain the cohesion of\nrelated text:\n\n  * It groups all list items together, along with the preceding paragraph. \n  * Items within a table are chunked together. \n  * It incorporates contextual information from section headers and nested section headers. \n\nAs a quick example, the following code snippet generates a [ LlamaIndex\n](https://github.com/run-llama/llama_index) query engine from the document\nchunks produced by LayoutPDFReader.\n\n    \n    \n    from llama_index.readers.schema.base import Documentfrom llama_index import VectorStoreIndexindex = VectorStoreIndex([])for chunk in doc.chunks():    index.insert(Document(text=chunk.to_context_text(), extra_info={}))query_engine = index.as_query_engine()# Let's run one queryresponse = query_engine.query(\"list all the tasks that work with bart\")print(response)\n\nWe get the following response:\n\n    \n    \n    BART works well for text generation, comprehension tasks, abstractive dialogue, question answering, and summarization tasks.\n\nKey Considerations:\n\n  1. LLMSherpa leverages a cost-free and open API server. Your PDFs are not retained beyond temporary storage during the parsing process. \n  2. LayoutPDFReader has undergone extensive testing with a diverse range of PDFs. However, achieving flawless parsing for every PDF remains a challenging task. \n  3. Please note that OCR (Optical Character Recognition) functionality is presently unavailable. The tool exclusively supports PDFs equipped with a text layer. \n  4. For inquiries regarding private hosting options, OCR support, or tailored assistance with particular PDF-related concerns, feel free to reach out to [ contact@nlmatics.com ](mailto:contact@nlmatics.com) or to [ me ](mailto: kiran@nlmatics.com) directly. \n\nIf you have any questions, please leave them in the comments section, and I\nwill try to respond ASAP.\n\n**_Connect?_ **\n\nIf you want to get in touch, feel free to shoot me a message on [ LinkedIn\n](https://www.linkedin.com/in/kirannpanicker/) or via [ email ](mailto:\nkirankurup@gmail.com) .", "mimetype": "text/plain", "start_char_idx": 5319, "end_char_idx": 7437, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "921f1a9f-383c-498a-ba53-4c82f1b89522": {"__data__": {"id_": "921f1a9f-383c-498a-ba53-4c82f1b89522", "embedding": null, "metadata": {"Header_1": " References", "filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b0436bb0-6511-4f3a-8fe2-cc4777ec2029", "node_type": "4", "metadata": {"filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "hash": "ab0941a38c19d9218d1144547e08ea9e71d5d6dede820dcf68dd0f15381951ec", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ebab020b-86ee-4342-80f3-a11a52e565a7", "node_type": "1", "metadata": {"Header_1": " Where\u2019s This Article Headed, Anyway?", "Header_2": " Vector search and RAG with Smart Chunking", "filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}, "hash": "1f0a5e291b904b6449b0e2bb2a8fb16f1cc37823553c105f596462aafd89938e", "class_name": "RelatedNodeInfo"}}, "text": "References\n\n[ https://github.com/nlmatics/llmsherpa\n](https://github.com/nlmatics/llmsherpa#layoutpdfreader)\n\n[ Capturing Logical Structure of Visually Structured Documents with Multimodal\nTransition Parser ](https://arxiv.org/abs/2105.00150)\n\n[ Lost in the Middle: How Language Models Use Long Contexts\n](https://arxiv.org/abs/2307.03172)", "mimetype": "text/plain", "start_char_idx": 7442, "end_char_idx": 7781, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"e8587e62-ccb5-4890-be09-2a97e5850422": {"doc_hash": "6c816a51684ea9d50423e870c7f04021f82b58946bc7abf7757f3eab10569e97", "ref_doc_id": "b0436bb0-6511-4f3a-8fe2-cc4777ec2029"}, "ade9911b-cefc-4427-b6d5-710901cbc311": {"doc_hash": "3df9b574bac2d4bbcce48d37e31d43630097d23b669b83ce9fa05966f2dc50b0", "ref_doc_id": "b0436bb0-6511-4f3a-8fe2-cc4777ec2029"}, "f37f710c-46f4-4808-8aed-a29ce49183d7": {"doc_hash": "220be90ad0e5a66a2b55d2a7689dc5c8b58f9e585df21bf3415944312663111a", "ref_doc_id": "b0436bb0-6511-4f3a-8fe2-cc4777ec2029"}, "5c65d0da-f2a5-428d-a666-831e591926e4": {"doc_hash": "721fb0eb271cfdfd39d0176225747868fea4edd3de019e82e3ea6d7640f1792d", "ref_doc_id": "b0436bb0-6511-4f3a-8fe2-cc4777ec2029"}, "ebab020b-86ee-4342-80f3-a11a52e565a7": {"doc_hash": "1f0a5e291b904b6449b0e2bb2a8fb16f1cc37823553c105f596462aafd89938e", "ref_doc_id": "b0436bb0-6511-4f3a-8fe2-cc4777ec2029"}, "921f1a9f-383c-498a-ba53-4c82f1b89522": {"doc_hash": "09792578f20949409dd7c481eb8a8a44508a0ec0aaab7dc70b94c4a9c485f057", "ref_doc_id": "b0436bb0-6511-4f3a-8fe2-cc4777ec2029"}}, "docstore/ref_doc_info": {"b0436bb0-6511-4f3a-8fe2-cc4777ec2029": {"node_ids": ["e8587e62-ccb5-4890-be09-2a97e5850422", "ade9911b-cefc-4427-b6d5-710901cbc311", "f37f710c-46f4-4808-8aed-a29ce49183d7", "5c65d0da-f2a5-428d-a666-831e591926e4", "ebab020b-86ee-4342-80f3-a11a52e565a7", "921f1a9f-383c-498a-ba53-4c82f1b89522"], "metadata": {"filename": "mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125.md", "extension": ".md", "title": "Mastering PDFs: Extracting Sections, Headings, Paragraphs, and Tables with Cutting-Edge Parser", "date": "Oct 18, 2023", "url": "https://www.llamaindex.ai/blog/mastering-pdfs-extracting-sections-headings-paragraphs-and-tables-with-cutting-edge-parser-faea18870125"}}}}