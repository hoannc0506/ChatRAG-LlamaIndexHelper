{"docstore/data": {"13b3dfd8-3a65-47a4-884e-6e08786e80fd": {"__data__": {"id_": "13b3dfd8-3a65-47a4-884e-6e08786e80fd", "embedding": null, "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "944953c8-55b8-427d-93a4-016dcc35cd41", "node_type": "4", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "cbec53b840718fc009a5121f08266eaedfbed6820aa69fb348ca8ace2f105420", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9eb2dcc8-e182-489a-b6c6-059cad60fe63", "node_type": "1", "metadata": {"Header_1": " Project Overview"}, "hash": "9598a46f6a193f3517b39ac76b2a456d9b18ebead7d18c9b0b182a58f8b2731e", "class_name": "RelatedNodeInfo"}}, "text": "In the current landscape where GPT-4 Vision (GPT-4V) use cases are everywhere,\nI wanted to explore an alternative approach: pairing deep learning vision\nmodels with large language models (LLMs). My latest project, \u2018AInimal Go!\u2019, is\nan attempt to showcase how a specialized vision model like ResNet18 can\nseamlessly integrate with an LLM, using LlamaIndex as the orchestration layer\nand Wikipedia articles as the knowledge base.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 427, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9eb2dcc8-e182-489a-b6c6-059cad60fe63": {"__data__": {"id_": "9eb2dcc8-e182-489a-b6c6-059cad60fe63", "embedding": null, "metadata": {"Header_1": " Project Overview", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "944953c8-55b8-427d-93a4-016dcc35cd41", "node_type": "4", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "cbec53b840718fc009a5121f08266eaedfbed6820aa69fb348ca8ace2f105420", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13b3dfd8-3a65-47a4-884e-6e08786e80fd", "node_type": "1", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "611476087a3d4861389f3e8973d2fb04d18a90def1aec08199e4af9915e681f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d5eac0d-ad53-48e5-8428-5fc9398f85f2", "node_type": "1", "metadata": {"Header_1": " Why Not GPT-4V?"}, "hash": "3c533bf14700a13e158d5831676f26201a62a34d5b2e78526873269968c144d9", "class_name": "RelatedNodeInfo"}}, "text": "Project Overview\n\n\u2018AInimal Go!\u2019 is an interactive app that allows users to either capture or\nupload images of animals. Upon uploading an image, the ResNet18 model swiftly\nclassifies the animal. Following this, the Cohere LLM API, adeptly\norchestrated by LlamaIndex, takes over. It roleplays as the identified animal,\nenabling users to engage in unique conversations about and with the animal.\nThe dialogue is informed and enriched by a knowledge base of nearly 200\nWikipedia articles, providing accurate and relevant responses to user queries.", "mimetype": "text/plain", "start_char_idx": 432, "end_char_idx": 975, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7d5eac0d-ad53-48e5-8428-5fc9398f85f2": {"__data__": {"id_": "7d5eac0d-ad53-48e5-8428-5fc9398f85f2", "embedding": null, "metadata": {"Header_1": " Why Not GPT-4V?", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "944953c8-55b8-427d-93a4-016dcc35cd41", "node_type": "4", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "cbec53b840718fc009a5121f08266eaedfbed6820aa69fb348ca8ace2f105420", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9eb2dcc8-e182-489a-b6c6-059cad60fe63", "node_type": "1", "metadata": {"Header_1": " Project Overview", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "7e7c7d57aefaac9867b82029ad8d3df534a0a139a0e0d96e8edcf835e5a0c8ca", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b53428a-41c6-43c0-a635-1970b0a278ad", "node_type": "1", "metadata": {"Header_1": " Tools and Tech"}, "hash": "81ee8d7df4de30542ea7c34073739f1a7c5d34c6d62ad71d668d47baf357920f", "class_name": "RelatedNodeInfo"}}, "text": "Why Not GPT-4V?\n\nAmidst the surge in GPT-4 Vision use cases, I wanted to explore an efficient\nyet powerful alternative. It is important to choose the right tool for the job\n\u2014 using GPT-4V for every multimodal task can be overkill, like using a\nsledgehammer to crack a nut. My approach was to harness the agility and\nprecision of ResNet18 for animal identification. This method not only\n**curtails costs** but also underscores the adaptability of specialized models\nin multi-modal realms.", "mimetype": "text/plain", "start_char_idx": 980, "end_char_idx": 1467, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b53428a-41c6-43c0-a635-1970b0a278ad": {"__data__": {"id_": "7b53428a-41c6-43c0-a635-1970b0a278ad", "embedding": null, "metadata": {"Header_1": " Tools and Tech", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "944953c8-55b8-427d-93a4-016dcc35cd41", "node_type": "4", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "cbec53b840718fc009a5121f08266eaedfbed6820aa69fb348ca8ace2f105420", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d5eac0d-ad53-48e5-8428-5fc9398f85f2", "node_type": "1", "metadata": {"Header_1": " Why Not GPT-4V?", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "15df9d2fded8f97e74feada8ccb88346d10e4bdf84b9c910036d57abcb2dc2b2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d6e3fbdd-8b37-4091-8d65-437d37172058", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py"}, "hash": "15bd9e56a435b9b05dcb5796a628b570620a37d49e72fa631b5be8da03c3bcf4", "class_name": "RelatedNodeInfo"}}, "text": "Tools and Tech\n\n  * **ResNet for Animal Detection:** A blazing-fast implementation to identify animals in images, utilizing the ImageNet classification scheme. \n  * **Cohere LLM:** For generating engaging, informative conversations based on the identified animal. \n  * **LlamaIndex:** Seamlessly orchestrates the workflow, managing the retrieval of information from pre-indexed Wikipedia articles about animals. \n  * **Streamlit for UI**\n\nGif showing the demo in action", "mimetype": "text/plain", "start_char_idx": 1472, "end_char_idx": 1941, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d6e3fbdd-8b37-4091-8d65-437d37172058": {"__data__": {"id_": "d6e3fbdd-8b37-4091-8d65-437d37172058", "embedding": null, "metadata": {"Header_1": " Deep Dive into app.py", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "944953c8-55b8-427d-93a4-016dcc35cd41", "node_type": "4", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "cbec53b840718fc009a5121f08266eaedfbed6820aa69fb348ca8ace2f105420", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7b53428a-41c6-43c0-a635-1970b0a278ad", "node_type": "1", "metadata": {"Header_1": " Tools and Tech", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "8db527d1c4ab70ce69d3f8c7fb7bbb232c14e73f03b9581c7bb17a2483d1f10f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "12fa819f-9218-4eb8-aee5-a65b289105db", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 1\\. Image Capture/Upload"}, "hash": "54a4a0132a0f0c455596d6cd091678622af3b1604616c5b463596ab305bf1ae6", "class_name": "RelatedNodeInfo"}}, "text": "Deep Dive into app.py\n\nThe heart of \u2018AInimal Go!\u2019 lies in the ` app.py ` script, where ResNet, Cohere\nLLM, and LlamaIndex seamlessly come together. Now, let\u2019s delve into the key\naspects of the code:", "mimetype": "text/plain", "start_char_idx": 1946, "end_char_idx": 2144, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "12fa819f-9218-4eb8-aee5-a65b289105db": {"__data__": {"id_": "12fa819f-9218-4eb8-aee5-a65b289105db", "embedding": null, "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 1\\. Image Capture/Upload", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "944953c8-55b8-427d-93a4-016dcc35cd41", "node_type": "4", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "cbec53b840718fc009a5121f08266eaedfbed6820aa69fb348ca8ace2f105420", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6e3fbdd-8b37-4091-8d65-437d37172058", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "ce9f6f886cad8a0892f253e0286b116aec3c29797caa47616c6ce46c1eef0010", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82151cde-267a-43d5-abe5-69d35e11b5dc", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 2\\. Initializing ResNet for Image Classification"}, "hash": "f57bae3e319af9fa22406c432c3a2a06719a33b15e53134a6ea08a8a70f6c862", "class_name": "RelatedNodeInfo"}}, "text": "1\\. Image Capture/Upload\n\nIn \u2018AInimal Go!\u2019, the flow begins with the user uploading an image or\ncapturing one using their device\u2019s camera. This is a crucial step as it sets\nthe stage for the subsequent interaction with the identified animal.\n\nThe code snippet below illustrates how Streamlit is used to create a UI for\nimage upload and capture. It offers two options: a file uploader for selecting\nan image file and a camera input for real-time capture. Once an image is\nprovided through either method, it\u2019s converted into a byte stream ( ` BytesIO\n` ) for processing. This streamlining ensures a seamless user experience,\nwhether the image is uploaded from a gallery or captured on the spot.\n\n    \n    \n    # Image upload section.\n        image_file = st.file_uploader(\"Upload an image\", type=[\"jpg\", \"jpeg\", \"png\"], key=\"uploaded_image\", on_change=on_image_upload)\n        \n        col1, col2, col3 = st.columns([1, 2, 1])\n        with col2:  # Camera input will be in the middle column\n            camera_image = st.camera_input(\"Take a picture\", on_change=on_image_upload)\n            \n        \n        # Determine the source of the image (upload or camera)\n        if image_file is not None:\n            image_data = BytesIO(image_file.getvalue())\n        elif camera_image is not None:\n            image_data = BytesIO(camera_image.getvalue())\n        else:\n            image_data = None\n        \n        if image_data:\n            # Display the uploaded image at a standard width.\n            st.session_state['assistant_avatar'] = image_data\n            st.image(image_data, caption='Uploaded Image.', width=200)", "mimetype": "text/plain", "start_char_idx": 2150, "end_char_idx": 3770, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "82151cde-267a-43d5-abe5-69d35e11b5dc": {"__data__": {"id_": "82151cde-267a-43d5-abe5-69d35e11b5dc", "embedding": null, "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 2\\. Initializing ResNet for Image Classification", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "944953c8-55b8-427d-93a4-016dcc35cd41", "node_type": "4", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "cbec53b840718fc009a5121f08266eaedfbed6820aa69fb348ca8ace2f105420", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "12fa819f-9218-4eb8-aee5-a65b289105db", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 1\\. Image Capture/Upload", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "3d6a82fd68aca4521bf6f3b85dd91f1ac3e827cbea249f9cf1c9f25bdeb3ee7d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e4ced010-4425-4b8b-a8dd-d883223dfb87", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 3\\. Animal Detection with ResNet18"}, "hash": "1e4b4dc7c0b084e3e6fc8afb6c242986cf7fdd605b692b297196755400eb4e86", "class_name": "RelatedNodeInfo"}}, "text": "2\\. Initializing ResNet for Image Classification\n\nOnce the user uploads or captures an image, the next critical step is\nidentifying the animal within it. This is where ResNet18, a robust deep\nlearning model for image classification, comes into play.\n\nThe function ` load_model_and_labels ` performs two key tasks:\n\n  * **Loading Animal Labels:** It starts by loading a subset of ImageNet labels specific to animals. These labels are stored in a dictionary, mapping class IDs to their corresponding animal names. This mapping is essential for interpreting the output of the ResNet model. \n  * **Initializing ResNet18:** The function then initializes the feature extractor and the ResNet18 model. The feature extractor preprocesses the images to the format required by ResNet18, while the model itself is responsible for the actual classification task. \n\n    \n    \n    def load_model_and_labels():\n        # Load animal labels as a dictionary\n        animal_labels_dict = {}\n        with open('imagenet_animal_labels_subset.txt', 'r') as file:\n            for line in file:\n                parts = line.strip().split(':')\n                class_id = int(parts[0].strip())\n                label_name = parts[1].strip().strip(\"'\")\n                animal_labels_dict[class_id] = label_name\n    \n        # Initialize feature extractor and model\n        feature_extractor = AutoFeatureExtractor.from_pretrained(\"microsoft/resnet-18\")\n        model = ResNetForImageClassification.from_pretrained(\"microsoft/resnet-18\")\n    \n        return feature_extractor, model, animal_labels_dict\n    \n    feature_extractor, model, animal_labels_dict = load_model_and_labels()\n\nBy integrating ResNet18 in this manner, \u2018AInimal Go!\u2019 leverages its speed and\naccuracy for the crucial task of identifying the animal in the user\u2019s image.\nThis sets the foundation for the engaging and informative conversations that\nfollow.", "mimetype": "text/plain", "start_char_idx": 3776, "end_char_idx": 5671, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e4ced010-4425-4b8b-a8dd-d883223dfb87": {"__data__": {"id_": "e4ced010-4425-4b8b-a8dd-d883223dfb87", "embedding": null, "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 3\\. Animal Detection with ResNet18", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "944953c8-55b8-427d-93a4-016dcc35cd41", "node_type": "4", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "cbec53b840718fc009a5121f08266eaedfbed6820aa69fb348ca8ace2f105420", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82151cde-267a-43d5-abe5-69d35e11b5dc", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 2\\. Initializing ResNet for Image Classification", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "2021526571fa2cae2fd26e57aff53c73cc7a595c2922f15481234d1e4eabda0b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a90fa42-8dac-4e03-8023-3eb56711eeba", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 4\\. Validating Animal Presence in Images"}, "hash": "6b76ea4aa7b1982d5c7891a184f66f710c13fd3956b80e5b5e555fb6330e2ec6", "class_name": "RelatedNodeInfo"}}, "text": "3\\. Animal Detection with ResNet18\n\nAfter initializing ResNet18, the next step is to use it for detecting the\nanimal in the uploaded image. The function ` get_image_caption ` handles this\ntask.\n\n  * **Image Preprocessing:** The uploaded image is first opened and then preprocessed using the feature extractor initialized earlier. This preprocessing adapts the image to the format required by ResNet18. \n  * **Animal Detection:** The preprocessed image is then fed into ResNet18, which predicts the class of the image. The logits (the model\u2019s raw output) are processed to find the class with the highest probability, which corresponds to the predicted animal. \n  * **Retrieving the Animal Name:** The predicted class ID is mapped to the corresponding animal name using the label dictionary created earlier. This name is then displayed to the user. \n\n    \n    \n    def get_image_caption(image_data):\n        image = Image.open(image_data)\n        inputs = feature_extractor(images=image, return_tensors=\"pt\")\n    \n        with torch.no_grad():\n            logits = model(**inputs).logits\n    \n        predicted_label_id = logits.argmax(-1).item()\n        predicted_label_name = model.config.id2label[predicted_label_id]\n        st.write(predicted_label_name)\n        # Return the predicted animal name\n        return predicted_label_name, predicted_label_id", "mimetype": "text/plain", "start_char_idx": 5677, "end_char_idx": 7032, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4a90fa42-8dac-4e03-8023-3eb56711eeba": {"__data__": {"id_": "4a90fa42-8dac-4e03-8023-3eb56711eeba", "embedding": null, "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 4\\. Validating Animal Presence in Images", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "944953c8-55b8-427d-93a4-016dcc35cd41", "node_type": "4", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "cbec53b840718fc009a5121f08266eaedfbed6820aa69fb348ca8ace2f105420", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e4ced010-4425-4b8b-a8dd-d883223dfb87", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 3\\. Animal Detection with ResNet18", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "18c2bcc04917e27b876f9d887936a260ec1d80a23dd3882de04889d51db15436", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2588285-271c-4e88-b0b7-56bbdac82b5f", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 5\\. Initializing LLM"}, "hash": "4a6d592949e96095dce941d3291b92f5eef6d6c5d5a14aff85328359f8da17f0", "class_name": "RelatedNodeInfo"}}, "text": "4\\. Validating Animal Presence in Images\n\nTo ensure that the conversation in \u2018AInimal Go!\u2019 is relevant and engaging,\nit\u2019s crucial to verify that the uploaded image indeed depicts an animal. This\nverification is handled by the ` is_animal ` function.\n\n    \n    \n    def is_animal(predicted_label_id):\n        # Check if the predicted label ID is within the animal classes range\n        return 0 &lt;= predicted_label_id &lt;= 398\n\nThe function checks if the predicted label ID from ResNet18 falls within the\nrange of animal classes (0 to 398 in ImageNet\u2019s classification). This simple\nyet effective check is essential for maintaining the app\u2019s focus on animal\ninteractions.\n\nFurther in the script, this function is utilized to validate the detected\nobject:\n\n    \n    \n    if not (is_animal(label_id)):\n        st.error(\"Please upload image of an animal!\")\n        st.stop()\n\nIf the uploaded image does not depict an animal, the app prompts the user to\nupload an appropriate image, ensuring that the conversation remains on track.", "mimetype": "text/plain", "start_char_idx": 7038, "end_char_idx": 8066, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "c2588285-271c-4e88-b0b7-56bbdac82b5f": {"__data__": {"id_": "c2588285-271c-4e88-b0b7-56bbdac82b5f", "embedding": null, "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 5\\. Initializing LLM", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "944953c8-55b8-427d-93a4-016dcc35cd41", "node_type": "4", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "cbec53b840718fc009a5121f08266eaedfbed6820aa69fb348ca8ace2f105420", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a90fa42-8dac-4e03-8023-3eb56711eeba", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 4\\. Validating Animal Presence in Images", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "ea432975607429fc8425ffc25e7579d4e83e2af0aafed7d23b4413b0be5f26c3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bcd28b69-1e7a-4fb3-8119-d2eb1db86d2f", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 6\\. Creating the Chat Engine"}, "hash": "e269a33f4900d0756bbc252b5bc2e3b59c9e7b3ff32c84e43783036307af039e", "class_name": "RelatedNodeInfo"}}, "text": "5\\. Initializing LLM\n\nThe ` init_llm ` function initializes the Cohere LLM along with the necessary\ncontexts for storage and service (specify llm and embed_model). It also loads\nthe pre-indexed Wikipedia articles for about 200 animals. The function sets up\nthe environment in which the LLM operates, preparing it for generating\nresponses.\n\n    \n    \n    def init_llm(api_key):\n        llm = Cohere(model=\"command\", api_key=st.secrets['COHERE_API_TOKEN'])\n    \n        service_context = ServiceContext.from_defaults(llm=llm, embed_model=\"local\")\n        storage_context = StorageContext.from_defaults(persist_dir=\"storage\")\n        index = load_index_from_storage(storage_context, index_id=\"index\", service_context=service_context)\n        \n        return llm, service_context, storage_context, index\n\nThis function is critical for setting up the LLM, ensuring that all necessary\ncomponents are in place for the chat functionality.", "mimetype": "text/plain", "start_char_idx": 8072, "end_char_idx": 9002, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bcd28b69-1e7a-4fb3-8119-d2eb1db86d2f": {"__data__": {"id_": "bcd28b69-1e7a-4fb3-8119-d2eb1db86d2f", "embedding": null, "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 6\\. Creating the Chat Engine", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "944953c8-55b8-427d-93a4-016dcc35cd41", "node_type": "4", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "cbec53b840718fc009a5121f08266eaedfbed6820aa69fb348ca8ace2f105420", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2588285-271c-4e88-b0b7-56bbdac82b5f", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 5\\. Initializing LLM", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "fb1ff0b1f4a5ccb0d342c01b0a70896136417c19395db83a3803d47184fc37bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c9b3b17-151a-4594-ae22-49cdc4754651", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 7\\. Bringing It All Together"}, "hash": "d37bd254a818a1aa6fe67c9438123e809bb1502cf29d33524beb648a397e906a", "class_name": "RelatedNodeInfo"}}, "text": "6\\. Creating the Chat Engine\n\nThe ` create_chat_engine ` function takes the animal description and utilizes\nit to create a query engine. This engine is responsible for handling user\nqueries and generating responses based on the identified animal.\n\n    \n    \n    def create_chat_engine(img_desc, api_key):\n        doc = Document(text=img_desc)\n        \n        query_engine = CitationQueryEngine.from_args(\n            index,\n            similarity_top_k=3,\n            citation_chunk_size=512,\n            verbose=True\n        )\n        \n        return query_engine\n    \n    \n    system_prompt=f\"\"\"\n                  You are a chatbot, able to have normal interactions. Do not make up information.\n                  You always answer in great detail and are polite. Your job is to roleplay as an {img_desc}. \n                  Remember to make {img_desc} sounds while talking but dont overdo it.\n                  \"\"\"\n                        \n    response = chat_engine.query(f\"{system_prompt}. {user_input}\")\n\nBy creating a query engine specific to the identified animal, this function\nensures that the conversations in the app are relevant, informative, and\nengaging. I have used the CitationQueryEngine to provide the future\npossibility of showing the sources as well, making the conversations not only\nengaging but also informative with credible references.", "mimetype": "text/plain", "start_char_idx": 9008, "end_char_idx": 10369, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4c9b3b17-151a-4594-ae22-49cdc4754651": {"__data__": {"id_": "4c9b3b17-151a-4594-ae22-49cdc4754651", "embedding": null, "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 7\\. Bringing It All Together", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "944953c8-55b8-427d-93a4-016dcc35cd41", "node_type": "4", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "cbec53b840718fc009a5121f08266eaedfbed6820aa69fb348ca8ace2f105420", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bcd28b69-1e7a-4fb3-8119-d2eb1db86d2f", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 6\\. Creating the Chat Engine", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "2322850ac2ee163501154d5a7842fd99966d0616c76764e45492a7d2a38e0dba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1733b163-d616-4549-9411-d2a54e860720", "node_type": "1", "metadata": {"Header_1": " Wrapping Up"}, "hash": "e5e5c28f4db0dfe274c1e43dc08fb9675cd6012046592d94702f6098e38c72d6", "class_name": "RelatedNodeInfo"}}, "text": "7\\. Bringing It All Together\n\nWith all the technical components in place, \u2018AInimal Go!\u2019 combines everything\ninto a user-friendly chat interface. Here, users can interact directly with\nthe AI, asking questions and receiving responses about the identified animal.\nThis final interaction loop, skillfully managed by Streamlit, perfectly\nshowcases the seamless integration of vision and language models in the app.", "mimetype": "text/plain", "start_char_idx": 10375, "end_char_idx": 10785, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1733b163-d616-4549-9411-d2a54e860720": {"__data__": {"id_": "1733b163-d616-4549-9411-d2a54e860720", "embedding": null, "metadata": {"Header_1": " Wrapping Up", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "944953c8-55b8-427d-93a4-016dcc35cd41", "node_type": "4", "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "cbec53b840718fc009a5121f08266eaedfbed6820aa69fb348ca8ace2f105420", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c9b3b17-151a-4594-ae22-49cdc4754651", "node_type": "1", "metadata": {"Header_1": " Deep Dive into app.py", "Header_2": " 7\\. Bringing It All Together", "filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}, "hash": "e7e2cf95baca42874d2f669ae8c60a2a5afcbb3ff71381931d8b983ae6aefef6", "class_name": "RelatedNodeInfo"}}, "text": "Wrapping Up\n\n\u2018AInimal Go!\u2019 represents an exciting fusion of vision models, language models,\nand Wikipedia, with LlamaIndex serving as the orchestrator that seamlessly\nintegrates ResNet for animal identification and Cohere\u2019s LLM for engaging\nconversations. This app is a stepping stone to even more innovative visual-\nlanguage applications. The possibilities are boundless, and your insights can\nshape its future. I encourage you to explore the demo, experiment with the\ncode, and join me in pushing the boundaries of what AI can achieve in the\nrealm of multimodal interactions.\n\n[ GitHub Repo ](https://github.com/AI-ANK/AInimalGo-Chat-with-Animals)\n\n[ Connect with Me on LinkedIn\n](https://www.linkedin.com/in/harshadsuryawanshi/)\n\n[ LinkedIn Post\n](https://www.linkedin.com/posts/harshadsuryawanshi_llamaindex-ai-\ndeeplearning-\nactivity-7134632983495327744-M7yy?utm_source=share&utm_medium=member_desktop)\n\n[ Live Demo ](https://huggingface.co/spaces/AI-ANK/AInimal_Go)", "mimetype": "text/plain", "start_char_idx": 10790, "end_char_idx": 11761, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"13b3dfd8-3a65-47a4-884e-6e08786e80fd": {"doc_hash": "611476087a3d4861389f3e8973d2fb04d18a90def1aec08199e4af9915e681f5", "ref_doc_id": "944953c8-55b8-427d-93a4-016dcc35cd41"}, "9eb2dcc8-e182-489a-b6c6-059cad60fe63": {"doc_hash": "7e7c7d57aefaac9867b82029ad8d3df534a0a139a0e0d96e8edcf835e5a0c8ca", "ref_doc_id": "944953c8-55b8-427d-93a4-016dcc35cd41"}, "7d5eac0d-ad53-48e5-8428-5fc9398f85f2": {"doc_hash": "15df9d2fded8f97e74feada8ccb88346d10e4bdf84b9c910036d57abcb2dc2b2", "ref_doc_id": "944953c8-55b8-427d-93a4-016dcc35cd41"}, "7b53428a-41c6-43c0-a635-1970b0a278ad": {"doc_hash": "8db527d1c4ab70ce69d3f8c7fb7bbb232c14e73f03b9581c7bb17a2483d1f10f", "ref_doc_id": "944953c8-55b8-427d-93a4-016dcc35cd41"}, "d6e3fbdd-8b37-4091-8d65-437d37172058": {"doc_hash": "ce9f6f886cad8a0892f253e0286b116aec3c29797caa47616c6ce46c1eef0010", "ref_doc_id": "944953c8-55b8-427d-93a4-016dcc35cd41"}, "12fa819f-9218-4eb8-aee5-a65b289105db": {"doc_hash": "3d6a82fd68aca4521bf6f3b85dd91f1ac3e827cbea249f9cf1c9f25bdeb3ee7d", "ref_doc_id": "944953c8-55b8-427d-93a4-016dcc35cd41"}, "82151cde-267a-43d5-abe5-69d35e11b5dc": {"doc_hash": "2021526571fa2cae2fd26e57aff53c73cc7a595c2922f15481234d1e4eabda0b", "ref_doc_id": "944953c8-55b8-427d-93a4-016dcc35cd41"}, "e4ced010-4425-4b8b-a8dd-d883223dfb87": {"doc_hash": "18c2bcc04917e27b876f9d887936a260ec1d80a23dd3882de04889d51db15436", "ref_doc_id": "944953c8-55b8-427d-93a4-016dcc35cd41"}, "4a90fa42-8dac-4e03-8023-3eb56711eeba": {"doc_hash": "ea432975607429fc8425ffc25e7579d4e83e2af0aafed7d23b4413b0be5f26c3", "ref_doc_id": "944953c8-55b8-427d-93a4-016dcc35cd41"}, "c2588285-271c-4e88-b0b7-56bbdac82b5f": {"doc_hash": "fb1ff0b1f4a5ccb0d342c01b0a70896136417c19395db83a3803d47184fc37bc", "ref_doc_id": "944953c8-55b8-427d-93a4-016dcc35cd41"}, "bcd28b69-1e7a-4fb3-8119-d2eb1db86d2f": {"doc_hash": "2322850ac2ee163501154d5a7842fd99966d0616c76764e45492a7d2a38e0dba", "ref_doc_id": "944953c8-55b8-427d-93a4-016dcc35cd41"}, "4c9b3b17-151a-4594-ae22-49cdc4754651": {"doc_hash": "e7e2cf95baca42874d2f669ae8c60a2a5afcbb3ff71381931d8b983ae6aefef6", "ref_doc_id": "944953c8-55b8-427d-93a4-016dcc35cd41"}, "1733b163-d616-4549-9411-d2a54e860720": {"doc_hash": "3c98b2dfca2b37592cff47ecc501fbe110316a799f83a628d817f669994031ab", "ref_doc_id": "944953c8-55b8-427d-93a4-016dcc35cd41"}}, "docstore/ref_doc_info": {"944953c8-55b8-427d-93a4-016dcc35cd41": {"node_ids": ["13b3dfd8-3a65-47a4-884e-6e08786e80fd", "9eb2dcc8-e182-489a-b6c6-059cad60fe63", "7d5eac0d-ad53-48e5-8428-5fc9398f85f2", "7b53428a-41c6-43c0-a635-1970b0a278ad", "d6e3fbdd-8b37-4091-8d65-437d37172058", "12fa819f-9218-4eb8-aee5-a65b289105db", "82151cde-267a-43d5-abe5-69d35e11b5dc", "e4ced010-4425-4b8b-a8dd-d883223dfb87", "4a90fa42-8dac-4e03-8023-3eb56711eeba", "c2588285-271c-4e88-b0b7-56bbdac82b5f", "bcd28b69-1e7a-4fb3-8119-d2eb1db86d2f", "4c9b3b17-151a-4594-ae22-49cdc4754651", "1733b163-d616-4549-9411-d2a54e860720"], "metadata": {"filename": "multimodal-rag-building-ainimal-go-fecf8404ed97.md", "extension": ".md", "title": "Multimodal RAG: Building \u2018AInimal Go!\u2019, a Pok\u00e9mon Go-Inspired App with ResNet, Cohere and Llamaindex", "date": "Nov 27, 2023", "url": "https://www.llamaindex.ai/blog/multimodal-rag-building-ainimal-go-fecf8404ed97"}}}}