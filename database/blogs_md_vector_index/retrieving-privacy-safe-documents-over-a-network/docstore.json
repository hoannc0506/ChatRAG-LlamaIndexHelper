{"docstore/data": {"83bee155-1e1a-4127-88e1-3a7bf5e23a66": {"__data__": {"id_": "83bee155-1e1a-4127-88e1-3a7bf5e23a66", "embedding": null, "metadata": {"filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b6b9943-8216-486d-8f90-750275af960f", "node_type": "4", "metadata": {"filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "d5d8487e5d253849b5641b7fa079148c99e372d6c5dd34474d391e213c5f0bd4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "657ed303-3f8f-4251-9929-89cb9d285419", "node_type": "1", "metadata": {"Header_2": " The story of Alex, Bob and Beth continues"}, "hash": "cba2120649c3182d1ca69d1d5d30ef44105fdc2c2a0c152d1a722569d2e892e5", "class_name": "RelatedNodeInfo"}}, "text": "In a [ recent blog post ](https://www.llamaindex.ai/blog/querying-a-network-\nof-knowledge-with-llama-index-networks-d784b4c3006f) , we introduced our `\nllama-index-networks ` library extension that makes it possible to build a\nnetwork of RAG systems, which users can query. The benefits of such a network\nare clear: connecting to a diverse set of knowledge stores\u2014that one may not\notherwise have access to\u2014means more accurate responses to an even wider\nbreadth of queries.\n\nA main caveat to these networks though is that the data being shared across\nthe network ought to be privacy safe. In this blog post, we demonstrate how to\nturn private, sensitive data into privacy-safe versions that can be\nsubsequently and safely shared across a network. To do so, we\u2019ll be relying on\nsome recent developments in the area of Privacy-Enhancing Techniques.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 845, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "657ed303-3f8f-4251-9929-89cb9d285419": {"__data__": {"id_": "657ed303-3f8f-4251-9929-89cb9d285419", "embedding": null, "metadata": {"Header_2": " The story of Alex, Bob and Beth continues", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b6b9943-8216-486d-8f90-750275af960f", "node_type": "4", "metadata": {"filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "d5d8487e5d253849b5641b7fa079148c99e372d6c5dd34474d391e213c5f0bd4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83bee155-1e1a-4127-88e1-3a7bf5e23a66", "node_type": "1", "metadata": {"filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "103c32b20f4afdba414b178790231b2e8b8fa1c076a818ed8908a6f5590dc68f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9be257d5-608d-4e07-8b74-a02006ddbb43", "node_type": "1", "metadata": {"Header_2": " The story of Alex, Bob and Beth continues", "Header_3": " Sidebar: differential privacy primer"}, "hash": "fafd4e81eff22ceecce6f40de5a8eba31ccadcfb9b83c25eedd235db59f57cc2", "class_name": "RelatedNodeInfo"}}, "text": "The story of Alex, Bob and Beth continues\n\nTo illustrate all of this, we will again make use of our three made-up\ncharacters Alex, Bob and Beth. As a quick reminder, Alex is a data consumer\nwho wants to access the data sources that Bob and Beth possess and are willing\nto supply.\n\nWe showed then how such data a collaboration could be permitted through `\nllama-index-networks ` by taking the following steps:\n\n  1. Bob and Beth both build their respective QueryEngine\u2019s (RAG in llama-index lingo) \n  2. Bob and Beth both expose their QueryEngine behind a ContributorService \n  3. Alex builds a NetworkQueryEngine that connects to Bob and Beth\u2019s ContributorService\u2019s \n\nIn part two of this story, we add the wrinkle that Bob and Beth possess\nprivate, sensitive data that must be carefully protected before to sharing to\nAlex. Or, put in another way, we need to add a step 0. to the above steps\nwhich applies protective measures to the private datasets.\n\nMeasures for protecting data (or more specifically the data subjects) depends\non the use-case factors such as what the data involves and how its intended to\nbe shared and ultimately processed. De-anonymizing techniques such as wiping\nPII (i.e., personal identifiable indicators) are often applied. However, in\nthis blog post we highlight another privacy-enhancing technique called\nDifferential Privacy.\n\nPart 2: of Alex, Bob and Beth. This time Bob and Beth have sensitive data that\nthey want to share, but can\u2019t unless protective measures are applied before\nsharing across the network.\n\nPart 2: of Alex, Bob and Beth. This time Bob and Beth have sensitive data that\nthey want to share, but can\u2019t unless protective measures are applied before\nsharing across the network.", "mimetype": "text/plain", "start_char_idx": 851, "end_char_idx": 2573, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "9be257d5-608d-4e07-8b74-a02006ddbb43": {"__data__": {"id_": "9be257d5-608d-4e07-8b74-a02006ddbb43", "embedding": null, "metadata": {"Header_2": " The story of Alex, Bob and Beth continues", "Header_3": " Sidebar: differential privacy primer", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b6b9943-8216-486d-8f90-750275af960f", "node_type": "4", "metadata": {"filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "d5d8487e5d253849b5641b7fa079148c99e372d6c5dd34474d391e213c5f0bd4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "657ed303-3f8f-4251-9929-89cb9d285419", "node_type": "1", "metadata": {"Header_2": " The story of Alex, Bob and Beth continues", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "395b5ce1c3e3024b59d1ae780a3f788aa0f8c3978b072455a07e8e9887921673", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b45f612b-f821-4b04-b10b-bae9f9b25f93", "node_type": "1", "metadata": {"Header_2": " The story of Alex, Bob and Beth continues", "Header_3": " Creating differentially private synthetic copies of a private dataset"}, "hash": "92157f204b65a8d9be048061e88aef9fa3ac16ce0dd0318615c3012c2e7acd8d", "class_name": "RelatedNodeInfo"}}, "text": "Sidebar: differential privacy primer\n\nIn short, differential privacy is a method that provides mathematical\nguarantees (up to a certain level of chance) that an adversary would not be\nable to learn that a specific individual belonged to a private dataset after\nonly seeing the output of running this private dataset through a protected\ndata processing step. In other words, an individual\u2019s inclusion in the private\ndataset cannot be learned from the output of a differentially-private\nalgorithm.\n\nBy protecting against the threat of dataset inclusion, we mitigate the risk\nthat an adversary is able to link the private data with their external sources\nto learn more about the data subject and potentially cause more privacy harms\n(such as distortion).\n\nA light introduction to differential privacy.\n\nA light introduction to differential privacy.\n\nComing back to the story of Alex, Bob and Beth, in order to protect Bob and\nBeth\u2019s data, we will make use of an algorithm that uses a pre-trained LLM to\ncreate synthetic copies of private data that satisfies the differential\nprivate mathematical guarantees. This algorithm was introduced in the paper\nentitled \u201cPrivacy-preserving in-context learning with differentially private\nfew-shot generation\u201d by Xinyu Tang et al., which appeared in ICLR 2024. It is\nthe synthetic copies that we can use to share across the network!\n\nThere we have it, the added privacy wrinkle and our differentially privacy\napproach means that we have to take the following steps to facilitate this\ndata collaboration.\n\n  1. Bob and Beth create privacy-safe synthetic copies of their private datasets \n  2. Bob and Beth both build their respective QueryEngine\u2019s over their synthetic datasets \n  3. Bob and Beth both expose their QueryEngine behind a ContributorService \n  4. Alex builds a NetworkQueryEngine that connects to Bob and Beth\u2019s ContributorService\u2019s", "mimetype": "text/plain", "start_char_idx": 2580, "end_char_idx": 4461, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b45f612b-f821-4b04-b10b-bae9f9b25f93": {"__data__": {"id_": "b45f612b-f821-4b04-b10b-bae9f9b25f93", "embedding": null, "metadata": {"Header_2": " The story of Alex, Bob and Beth continues", "Header_3": " Creating differentially private synthetic copies of a private dataset", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b6b9943-8216-486d-8f90-750275af960f", "node_type": "4", "metadata": {"filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "d5d8487e5d253849b5641b7fa079148c99e372d6c5dd34474d391e213c5f0bd4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9be257d5-608d-4e07-8b74-a02006ddbb43", "node_type": "1", "metadata": {"Header_2": " The story of Alex, Bob and Beth continues", "Header_3": " Sidebar: differential privacy primer", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "568154d51fa64127fb4adfa7e4d36e40dc0fcc5e9f312c7fb2d3007d5a66995f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e2f9ae39-ebea-4184-8c26-8f4d932b1ec2", "node_type": "1", "metadata": {"Header_2": " Example: Symptom2Disease"}, "hash": "0262cc62bfea131532594b93659c03d7e237295ebbd38c4f1602e3f8a2f9aba0", "class_name": "RelatedNodeInfo"}}, "text": "Creating differentially private synthetic copies of a private dataset\n\nFortunately, for step 0., we can make use of the ` DiffPrivateSimpleDataset `\npack.\n\n    \n    \n    from llama_index.core.llama_datasets.simple import LabelledSimpleDataset\n    from llama_index.packs.diff_private_simple_dataset.base import PromptBundle\n    from llama_index.packs.diff_private_simple_dataset import DiffPrivateSimpleDatasetPack\n    from llama_index.llms.openai import OpenAI\n    import tiktoken\n    \n    # Beth uses `DiffPrivateSimpleDatasetPack` to generate synthetic copies\n    \n    llm = OpenAI(\n        model=\"gpt-3.5-turbo-instruct\",\n        max_tokens=1,\n        logprobs=True,\n        top_logprobs=5,  # OpenAI only allows for top 5 next token\n    )                    # as opposed to entire vocabulary\n    tokenizer = tiktoken.encoding_for_model(\"gpt-3.5-turbo-instruct\")\n    \n    beth_private_dataset: LabelledSimpleDataset = ... # a dataset that contains\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# examples with two attributes\n    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# `text` and `reference_label`\n    \n    beth_synthetic_generator = DiffPrivateSimpleDatasetPack(\n        llm=llm,\n        tokenizer=tokenizer,\n        prompt_bundle=prompt_bundle,    # params for preparing required prompts\n        simple_dataset=simple_dataset,  # to generate the synthetic examples \n    )\n    \n    beth_synthetic_dataset = await beth_synthetic_generator.arun(\n    \t\tsize=3,  # number of synthetic observations to create\n    \t\tsigma=0.5  # param that determines the level of privacy\n    )\n\nWith the synthetic dataset in hand, Bob and Beth can apply the steps\nintroduced in our previous post to build their privacy-safe QueryEngine. It\u2019s\nworthwhile to mention here that as mentioned by the authors of the paper, the\nsynthetic copies can be used as many times as one would like in a downstream\ntask and it would incur no additional privacy cost! (This is due to the post-\nprocessing property of differential privacy.)", "mimetype": "text/plain", "start_char_idx": 4469, "end_char_idx": 6441, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "e2f9ae39-ebea-4184-8c26-8f4d932b1ec2": {"__data__": {"id_": "e2f9ae39-ebea-4184-8c26-8f4d932b1ec2", "embedding": null, "metadata": {"Header_2": " Example: Symptom2Disease", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b6b9943-8216-486d-8f90-750275af960f", "node_type": "4", "metadata": {"filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "d5d8487e5d253849b5641b7fa079148c99e372d6c5dd34474d391e213c5f0bd4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b45f612b-f821-4b04-b10b-bae9f9b25f93", "node_type": "1", "metadata": {"Header_2": " The story of Alex, Bob and Beth continues", "Header_3": " Creating differentially private synthetic copies of a private dataset", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "a7c8c8ec534be74a2d40e25ae95468daa3fb00cbcb77dc61b267831aa87bb421", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c94afc0-132b-4b08-8332-8debecaf731c", "node_type": "1", "metadata": {"Header_2": " Example: Symptom2Disease", "Header_3": " Generate privacy-safe synthetic observations of Symptom2Disease"}, "hash": "661cd7c4bd807f53da70be64c71b87a618c3cc349826541842d41f1444fdb469", "class_name": "RelatedNodeInfo"}}, "text": "Example: Symptom2Disease\n\nIn this section of the blog post, we go over an actual example application of\nthe privacy-safe networks over the [ Symptom2Disease\n](https://www.kaggle.com/datasets/niyarrbarman/symptom2disease/data) dataset.\nThis dataset consists of 1,200 examples each containing a \u201csymptoms\u201d\ndescription as well as the associated \u201cdisease\u201d label \u2014 the dataset contains\nobservations for 24 distinct disease labels. We split the dataset into two\ndisjoint subsets, one for training and the other for testing. Moreover, we\nconsider this original dataset to be private, requiring protective measures\nbefore being shared across a network.", "mimetype": "text/plain", "start_char_idx": 6447, "end_char_idx": 7091, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "5c94afc0-132b-4b08-8332-8debecaf731c": {"__data__": {"id_": "5c94afc0-132b-4b08-8332-8debecaf731c", "embedding": null, "metadata": {"Header_2": " Example: Symptom2Disease", "Header_3": " Generate privacy-safe synthetic observations of Symptom2Disease", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b6b9943-8216-486d-8f90-750275af960f", "node_type": "4", "metadata": {"filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "d5d8487e5d253849b5641b7fa079148c99e372d6c5dd34474d391e213c5f0bd4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e2f9ae39-ebea-4184-8c26-8f4d932b1ec2", "node_type": "1", "metadata": {"Header_2": " Example: Symptom2Disease", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "a34afa6ab114bfd3937ff8a62b6a3cade8a545279aab1f51b600756936b8ca48", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eb161aef-7c2e-4c9b-8173-a57f560ce565", "node_type": "1", "metadata": {"Header_2": " Example: Symptom2Disease", "Header_3": " Create a network with two contributors"}, "hash": "94a208630820e78155a8c8a7cb3079fd3e5f61943592339485bd543379526ad7", "class_name": "RelatedNodeInfo"}}, "text": "Generate privacy-safe synthetic observations of Symptom2Disease\n\nWe use the training subset and apply the ` DiffPrivateSimpleDatasetPack ` on\nit in order to generate privacy-safe, synthetic observations. But in order to\ndo so, we first need to turn the raw Symptom2Disease dataset into a `\nLabelledSimpleDataset ` object.\n\n    \n    \n    import pandas as pd\n    from sklearn.model_selection import train_test_split\n    from llama_index.core.llama_dataset.simple import (\n        LabelledSimpleDataExample,\n        LabelledSimpleDataset,\n    )\n    from llama_index.core.llama_dataset.base import CreatedBy, CreatedByType\n    \n    # load the Symptom2Disease.csv file\n    df = pd.read_csv(\"Symptom2Disease.csv\")\n    train, test = train_test_split(df, test_size=0.2)\n    \n    # create a LabelledSimpleDataset (which is what the pack works with)\n    examples = []\n    for index, row in df.iterrows():\n        example = LabelledSimpleDataExample(\n            reference_label=row[\"label\"],\n            text=row[\"text\"],\n            text_by=CreatedBy(type=CreatedByType.HUMAN),\n        )\n        examples.append(example)\n    \n    simple_dataset = LabelledSimpleDataset(examples=examples)\n\nNow we can use the llama-pack to create our synthetic observations.\n\n    \n    \n    import llama_index.core.instrumentation as instrument\n    from llama_index.core.llama_dataset.simple import LabelledSimpleDataset\n    from llama_index.packs.diff_private_simple_dataset.base import PromptBundle\n    from llama_index.packs.diff_private_simple_dataset import DiffPrivateSimpleDatasetPack\n    from llama_index.llms.openai import OpenAI\n    import tiktoken\n    from .event_handler import DiffPrivacyEventHandler\n    import asyncio\n    import os\n    \n    NUM_SPLITS = 3\n    T_MAX = 150\n    \n    llm = OpenAI(\n        model=\"gpt-3.5-turbo-instruct\",\n        max_tokens=1,\n        logprobs=True,\n        top_logprobs=5,\n    )\n    tokenizer = tiktoken.encoding_for_model(\"gpt-3.5-turbo-instruct\")\n    \n    prompt_bundle = PromptBundle(\n        instruction=(\n            \"You are a patient experiencing symptoms of a specific disease. \"\n            \"Given a label of disease type, generate the chosen type of symptoms accordingly.\\n\"\n            \"Start your answer directly after 'Symptoms: '. Begin your answer with [RESULT].\\n\"\n        ),\n        label_heading=\"Disease\",\n        text_heading=\"Symptoms\",\n    )\n    \n    dp_simple_dataset_pack = DiffPrivateSimpleDatasetPack(\n        llm=llm,\n        tokenizer=tokenizer,\n        prompt_bundle=prompt_bundle,\n        simple_dataset=simple_dataset,\n    )\n    \n    synthetic_dataset = await dp_simple_dataset_pack.arun(\n        sizes=3,\n        t_max=T_MAX,\n        sigma=1.5,\n        num_splits=NUM_SPLITS,\n        num_samples_per_split=8,  # number of private observations to create a\n    )                             # synthetic obsevation\n    synthetic_dataset.save_json(\"synthetic_dataset.json\")", "mimetype": "text/plain", "start_char_idx": 7098, "end_char_idx": 10017, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "eb161aef-7c2e-4c9b-8173-a57f560ce565": {"__data__": {"id_": "eb161aef-7c2e-4c9b-8173-a57f560ce565", "embedding": null, "metadata": {"Header_2": " Example: Symptom2Disease", "Header_3": " Create a network with two contributors", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b6b9943-8216-486d-8f90-750275af960f", "node_type": "4", "metadata": {"filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "d5d8487e5d253849b5641b7fa079148c99e372d6c5dd34474d391e213c5f0bd4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c94afc0-132b-4b08-8332-8debecaf731c", "node_type": "1", "metadata": {"Header_2": " Example: Symptom2Disease", "Header_3": " Generate privacy-safe synthetic observations of Symptom2Disease", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "f8544915e290b1cf41a034a5cb6368e442b3215089ea0920da73ac82e281eb66", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9a821d8-6190-4c24-9f9a-56c37c979832", "node_type": "1", "metadata": {"Header_2": " Example: Symptom2Disease", "Header_3": " Evaluating the ` NetworkRetriever `"}, "hash": "2394d2b785b6e37249d743d8106394cd2daba8a84a3860fd13f7cd8edb1c3cf0", "class_name": "RelatedNodeInfo"}}, "text": "Create a network with two contributors\n\nNext, we imagine that there are two contributors that each have their own set\nof Symptom2Disease datasets. In particular, we split the 24 categories of\ndiseases into two disjoint sets and consider each Contributor to possess only\none of the two sets. Note that we created the synthetic observations on the\nfull training set, though we could have easily done this on the split datasets\nas well.\n\nNow that we have the synthetic observations, we can follow a slightly modified\nversion of steps 1. through 3. defined in the story of Alex, Bob and Beth. The\nmodification here is that we\u2019re using Retrievers instead of QueryEngine (the\nchoice of Retriever or QueryEngine is completely up to the user).\n\n**Step 1:** Contributor\u2019s build their Retriever over their synthetic datasets.\n\n    \n    \n    import os\n    from llama_index.core import VectorStoreIndex\n    from llama_index.core.llama_dataset.simple import LabelledSimpleDataset\n    from llama_index.core.schema import TextNode\n    \n    \n    # load the synthetic dataset\n    synthetic_dataset = LabelledSimpleDataset.from_json(\n        \"./data/contributor1_synthetic_dataset.json\"\n    )\n    \n    \n    nodes = [\n        TextNode(text=el.text, metadata={\"reference_label\": el.reference_label})\n        for el in synthetic_dataset[:]\n    ]\n    \n    index = VectorStoreIndex(nodes=nodes)\n    similarity_top_k = int(os.environ.get(\"SIMILARITY_TOP_K\"))\n    retriever = index.as_retriever(similarity_top_k=similarity_top_k)\n\n**Step 2:** Contributor\u2019s expose their Retrievers behind a\nContributorRetrieverService\n\n    \n    \n    from llama_index.networks.contributor.retriever.service import (\n        ContributorRetrieverService,\n        ContributorRetrieverServiceSettings,\n    )\n    \n    settings = ContributorRetrieverServiceSettings() # loads from .env file\n    service = ContributorRetrieverService(config=settings, retriever=retriever)\n    app = service.app\n\n**Step 3:** Define the NetworkRetriever that connects to the\nContributorRetrieverServices\n\n    \n    \n    from llama_index.networks.network.retriever import NetworkRetriever\n    from llama_index.networks.contributor.retriever import ContributorRetrieverClient\n    from llama_index.postprocessor.cohere_rerank import CohereRerank\n    \n    # ContributorRetrieverClient's connect to the ContributorRetrieverService\n    contributors = [\n        ContributorRetrieverClient.from_config_file(\n            env_file=f\"./client-env-files/.env.contributor_{ix}.client\"\n        )\n        for ix in range(1, 3)\n    ]\n    reranker = CohereRerank(top_n=5)\n    network_retriever = NetworkRetriever(\n        contributors=contributors, node_postprocessors=[reranker]\n    )\n\nWith the ` NetworkRetriever ` established, we can retrieve synthetic\nobservations from the two contributors data against a query.\n\n    \n    \n    related_records = network_retriever.aretrieve(\"Vomitting and nausea\")\n    print(related_records) # contain symptoms/disease records that are similar to\n    \t\t\t\t\t\t\t\t\t\t\t # to the queried symptoms.", "mimetype": "text/plain", "start_char_idx": 10024, "end_char_idx": 13063, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d9a821d8-6190-4c24-9f9a-56c37c979832": {"__data__": {"id_": "d9a821d8-6190-4c24-9f9a-56c37c979832", "embedding": null, "metadata": {"Header_2": " Example: Symptom2Disease", "Header_3": " Evaluating the ` NetworkRetriever `", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b6b9943-8216-486d-8f90-750275af960f", "node_type": "4", "metadata": {"filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "d5d8487e5d253849b5641b7fa079148c99e372d6c5dd34474d391e213c5f0bd4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eb161aef-7c2e-4c9b-8173-a57f560ce565", "node_type": "1", "metadata": {"Header_2": " Example: Symptom2Disease", "Header_3": " Create a network with two contributors", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "8e49c8d1fd007ba21c52ea5c273f7b693e1935f5ce9a71d7a006bcf6f0cb6d1a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f9a91e09-cc0c-4ba8-84d6-0e557e1e6430", "node_type": "1", "metadata": {"Header_2": " Example: Symptom2Disease", "Header_3": " In summary"}, "hash": "a077d8b05cefc578eb4c05454ac29293764604d611cc8d4a15813979d6f098ea", "class_name": "RelatedNodeInfo"}}, "text": "Evaluating the ` NetworkRetriever `\n\nTo evaluate the efficacy of the ` NetworkRetriever ` we make use of our test\nset in order to compute two traditional retrieval metrics, namely: hit rate\nand mean reciprocal rank.\n\n  * **hit rate:** a hit occurs if any of the retrieved nodes share the same disease label as the test query (symptoms). The hit rate then is the total number of hits divided by the size of the test set. \n  * **mean reciprocal rank:** similar to hit rate, but now we take into account the position of the first retrieved node that shares the same disease label as the test query. If there is no such retrieved node, then the reciprocal rank of the test is equal to 0. The mean reciprocal rank is then merely the average of all reciprocal ranks across the test set. \n\nIn addition to evaluating the ` NetworkRetriever ` we consider the two\nbaselines that represent Retrieving only over the individual Contributor\u2019s\nsynthetic datasets.\n\nRetriever evaluations, with sigma equal to 1.5.\n\nIn the image above, we observe that the NetworkRetriever outperforms both the\nindividual contributor Retriever\u2019s in the test set. This shouldn\u2019t be hard to\ngrasp however since the network retriever has access to more data since it has\naccess to both the Contributor\u2019s synthetic observations\u2014this is the point\nafter all of a network!\n\nAnother important observation can be made upon inspection of these results.\nThat is, the privacy-safe synthetic observations do indeed do the job of\nprotecting privacy while still maintaining utility in the original dataset.\nThis is often the concern when applying privacy measures such as differential\nprivacy, where noise is incorporated to protect the data. Too much noise will\nprovide high levels of privacy, but at the same time, may render the data\nuseless in downstream tasks. From the table above, we see that at least for\nthis example (though it does corroborate the results of the paper) that the\nsynthetic observations still do match well with the test set, which are indeed\nreal observations (i.e. not synthetically generated).\n\nFinally, this level of privacy can be controlled via the noise parameter `\nsigma ` . In the example above we used a ` sigma ` of 1.5, which for this\ndataset amounts to an ` epsilon ` (i.e., privacy-loss measure) value of 1.3.\n(Privacy loss levels between 0 and 1 are [ generally considered to be quite\nprivate\n](https://www.notion.so/Standups-8d1e478a8ce54ffa9788eef1fd416042?pvs=21) .)\nBelow, we share the evaluations that result from using a ` sigma ` of 0.5,\nwhich amounts to an ` epsilon ` of 15.9\u2014higher values of ` epsilon ` or\nprivacy-loss means less privacy.\n\n    \n    \n    # use the `DiffPrivacySimpleDatasetPack` to get the value of epsilon\n    epsilon = dp_simple_dataset_pack.sigma_to_eps(\n    \t\tsigma=0.5,\n    \t\tmechanism=\"gaussian\",\n    \t\tsize=3*24,\n    \t\tmax_token_cnt=150  # number of max tokens to generate per synthetic example\n    )\n\nRetriever evaluations with less noise and thus less privacy i.e., sigma equal\nto 0.5.\n\nSo we see after comparing the evaluation metrics with different levels of\nprivacy that when we use the synthetic observations that have higher levels of\nprivacy, we take a bit of a hit in the performance as seen in the decrease in\nboth the hit rate and mean reciprocal rank. This indeed is an illustration of\nthe privacy tradeoff. If we take a look at some of the examples from the\nsynthetic datasets, we can perhaps gain insight as to why this may be\nhappening.\n\n    \n    \n    # synthetic example epsilon = 1.3\n    {\n        \"reference_label\": \"Psoriasis\",\n        \"text\": \"[RESULTS] red, scalloped patches on skin; itching and burning sensation; thick, pitted nails on fingers and toes; joint discomfort; swollen and stiff joints; cracked and painful skin on palms and feet\",\n        \"text_by\": {\n            \"model_name\": \"gpt-3.5-turbo-instruct\",\n            \"type\": \"ai\"\n        }\n    },\n    \n    # synthetic example epsilon = 15.9\n    {\n      \"reference_label\": \"Migraine\",\n      \"text\": \"Intense headache, sensitivity to light and sound, nausea, vomiting, vision changes, and fatigue.\",\n      \"text_by\": {\n        \"model_name\": \"gpt-3.5-turbo-instruct\",\n        \"type\": \"ai\"\n      }\n    },\n\nWe can see that synthetic datasets with higher level of privacy are not as\nclean in terms of punctuation symbols in the text when compared to those with\nlower levels of privacy. This makes sense because the differential privacy\nalgorithm adds noise to the mechanics of next-token generation. Thus,\nperturbing this process greatly has affect on the instruction-following\ncapabilities of the LLM.", "mimetype": "text/plain", "start_char_idx": 13070, "end_char_idx": 17676, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f9a91e09-cc0c-4ba8-84d6-0e557e1e6430": {"__data__": {"id_": "f9a91e09-cc0c-4ba8-84d6-0e557e1e6430", "embedding": null, "metadata": {"Header_2": " Example: Symptom2Disease", "Header_3": " In summary", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b6b9943-8216-486d-8f90-750275af960f", "node_type": "4", "metadata": {"filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "d5d8487e5d253849b5641b7fa079148c99e372d6c5dd34474d391e213c5f0bd4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9a821d8-6190-4c24-9f9a-56c37c979832", "node_type": "1", "metadata": {"Header_2": " Example: Symptom2Disease", "Header_3": " Evaluating the ` NetworkRetriever `", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "c96e01c1e56a5deb4e88224f1a670df741f6a39988c5426b70fe1732be2af880", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c0cdb60-bc93-4233-ae58-caf70f8f8656", "node_type": "1", "metadata": {"Header_2": " Learn more!"}, "hash": "00b21df2dba128827513e2fd4ca2735dd2f4bd281ab00c95756278721dff499c", "class_name": "RelatedNodeInfo"}}, "text": "In summary\n\n  * We used differential privacy to create privacy-safe, synthetic observations in order to permit the data collaboration of private data that may not be otherwise possible. \n  * We demonstrated the benefits of the NetworkRetriever that has access to more data than what the individual Contributor Retriever may have access to. \n  * We demonstrated the affects of varying degrees of privacy on the synthetic observations, and by extension, the NetworkRetriever.", "mimetype": "text/plain", "start_char_idx": 17683, "end_char_idx": 18156, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "1c0cdb60-bc93-4233-ae58-caf70f8f8656": {"__data__": {"id_": "1c0cdb60-bc93-4233-ae58-caf70f8f8656", "embedding": null, "metadata": {"Header_2": " Learn more!", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b6b9943-8216-486d-8f90-750275af960f", "node_type": "4", "metadata": {"filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "d5d8487e5d253849b5641b7fa079148c99e372d6c5dd34474d391e213c5f0bd4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9a91e09-cc0c-4ba8-84d6-0e557e1e6430", "node_type": "1", "metadata": {"Header_2": " Example: Symptom2Disease", "Header_3": " In summary", "filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}, "hash": "f782257e372dcf312679c91c7a339bd606d26eae60ae83a25689d7e761119f40", "class_name": "RelatedNodeInfo"}}, "text": "Learn more!\n\nTo delve deeper into the materials of this blog post, we share a few links\nbelow:\n\n  * Source code for the privacy-safe networks retriever demo. With this, you can try the above all out yourself! ( [ link ](https://github.com/run-llama/llama_index/tree/main/llama-index-networks/examples/privacy_safe_retrieval) ) \n  * Demo notebooks for the ` DiffPrivateSimpleDataset ` ( [ link ](https://github.com/run-llama/llama_index/blob/main/llama-index-packs/llama-index-packs-diff-private-simple-dataset/examples/basic_demo/demo_usage.ipynb) ) \n  * The source code for creating the synthetic Symptom2Disease observations using the ` DiffPrivateSimpleDataset ` ( [ link ](https://github.com/run-llama/llama_index/tree/main/llama-index-packs/llama-index-packs-diff-private-simple-dataset/examples/symptom_2_disease) )", "mimetype": "text/plain", "start_char_idx": 18163, "end_char_idx": 18984, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"83bee155-1e1a-4127-88e1-3a7bf5e23a66": {"doc_hash": "103c32b20f4afdba414b178790231b2e8b8fa1c076a818ed8908a6f5590dc68f", "ref_doc_id": "6b6b9943-8216-486d-8f90-750275af960f"}, "657ed303-3f8f-4251-9929-89cb9d285419": {"doc_hash": "395b5ce1c3e3024b59d1ae780a3f788aa0f8c3978b072455a07e8e9887921673", "ref_doc_id": "6b6b9943-8216-486d-8f90-750275af960f"}, "9be257d5-608d-4e07-8b74-a02006ddbb43": {"doc_hash": "568154d51fa64127fb4adfa7e4d36e40dc0fcc5e9f312c7fb2d3007d5a66995f", "ref_doc_id": "6b6b9943-8216-486d-8f90-750275af960f"}, "b45f612b-f821-4b04-b10b-bae9f9b25f93": {"doc_hash": "a7c8c8ec534be74a2d40e25ae95468daa3fb00cbcb77dc61b267831aa87bb421", "ref_doc_id": "6b6b9943-8216-486d-8f90-750275af960f"}, "e2f9ae39-ebea-4184-8c26-8f4d932b1ec2": {"doc_hash": "a34afa6ab114bfd3937ff8a62b6a3cade8a545279aab1f51b600756936b8ca48", "ref_doc_id": "6b6b9943-8216-486d-8f90-750275af960f"}, "5c94afc0-132b-4b08-8332-8debecaf731c": {"doc_hash": "f8544915e290b1cf41a034a5cb6368e442b3215089ea0920da73ac82e281eb66", "ref_doc_id": "6b6b9943-8216-486d-8f90-750275af960f"}, "eb161aef-7c2e-4c9b-8173-a57f560ce565": {"doc_hash": "8e49c8d1fd007ba21c52ea5c273f7b693e1935f5ce9a71d7a006bcf6f0cb6d1a", "ref_doc_id": "6b6b9943-8216-486d-8f90-750275af960f"}, "d9a821d8-6190-4c24-9f9a-56c37c979832": {"doc_hash": "c96e01c1e56a5deb4e88224f1a670df741f6a39988c5426b70fe1732be2af880", "ref_doc_id": "6b6b9943-8216-486d-8f90-750275af960f"}, "f9a91e09-cc0c-4ba8-84d6-0e557e1e6430": {"doc_hash": "f782257e372dcf312679c91c7a339bd606d26eae60ae83a25689d7e761119f40", "ref_doc_id": "6b6b9943-8216-486d-8f90-750275af960f"}, "1c0cdb60-bc93-4233-ae58-caf70f8f8656": {"doc_hash": "fb99c1ea52585263874172fa7e8cb75b86510c95c64bc41818b41eac94085917", "ref_doc_id": "6b6b9943-8216-486d-8f90-750275af960f"}}, "docstore/ref_doc_info": {"6b6b9943-8216-486d-8f90-750275af960f": {"node_ids": ["83bee155-1e1a-4127-88e1-3a7bf5e23a66", "657ed303-3f8f-4251-9929-89cb9d285419", "9be257d5-608d-4e07-8b74-a02006ddbb43", "b45f612b-f821-4b04-b10b-bae9f9b25f93", "e2f9ae39-ebea-4184-8c26-8f4d932b1ec2", "5c94afc0-132b-4b08-8332-8debecaf731c", "eb161aef-7c2e-4c9b-8173-a57f560ce565", "d9a821d8-6190-4c24-9f9a-56c37c979832", "f9a91e09-cc0c-4ba8-84d6-0e557e1e6430", "1c0cdb60-bc93-4233-ae58-caf70f8f8656"], "metadata": {"filename": "retrieving-privacy-safe-documents-over-a-network.md", "extension": ".md", "title": "Retrieving Privacy-Safe Documents Over A Network", "date": "Mar 20, 2024", "url": "https://www.llamaindex.ai/blog/retrieving-privacy-safe-documents-over-a-network"}}}}