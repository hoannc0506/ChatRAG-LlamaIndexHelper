{"docstore/data": {"c79e326f-8ffc-4494-a0dd-4ac0e1b850d5": {"__data__": {"id_": "c79e326f-8ffc-4494-a0dd-4ac0e1b850d5", "embedding": null, "metadata": {"filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed", "node_type": "4", "metadata": {"filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "hash": "6ba237ea991d4c238ba961f51b699d73bcb50bc13de505b99c8cac22ae6cc875", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc2064df-cb08-4b7a-9f88-9425dc8d1781", "node_type": "1", "metadata": {"Header_1": " Installing Zep and some important concepts"}, "hash": "8f9718c4377dd9457e48987997759e7f7691fc61f0a471dbbad80142cfacdefb", "class_name": "RelatedNodeInfo"}}, "text": "Editor\u2019s Note: This article was written by [ Daniel\n](https://twitter.com/danielchalef) at Zep for the LlamaIndex blog.\n\nZep is a [ long-term memory store for LLM applications\n](https://www.getzep.com/) . With Zep, developers can easily add relevant\ndocuments, chat history memory & rich user data to LLM app prompts. Document\nand chat history storage, embedding, enrichment, and more are taken care of by\nthe Zep service.\n\nIn this article, we demonstrate how to use Zep\u2019s new Document Vector Store\nwith the (also new) ZepVectorStore for LlamaIndex.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 549, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "bc2064df-cb08-4b7a-9f88-9425dc8d1781": {"__data__": {"id_": "bc2064df-cb08-4b7a-9f88-9425dc8d1781", "embedding": null, "metadata": {"Header_1": " Installing Zep and some important concepts", "filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed", "node_type": "4", "metadata": {"filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "hash": "6ba237ea991d4c238ba961f51b699d73bcb50bc13de505b99c8cac22ae6cc875", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c79e326f-8ffc-4494-a0dd-4ac0e1b850d5", "node_type": "1", "metadata": {"filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "hash": "7eb716196f39fc0c6b44b6a80f20f0d248523a1e2851f39940a4eee369902b15", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "29ee9275-29c9-404e-9c4d-9783a46be8aa", "node_type": "1", "metadata": {"Header_1": " Creating a ZepVectorStore and Document Collection"}, "hash": "60e32324aa9b3aeb2c71d5671a71214f46232c542c750179b01b574579017259", "class_name": "RelatedNodeInfo"}}, "text": "Installing Zep and some important concepts\n\n[ Zep is open source ](https://github.com/getzep/zep) and may be [ installed\nvia Docker ](https://docs.getzep.com/deployment/quickstart/) , or to\nKubernetes and hosting platforms such as Render. SDKs are available for Python\nand TypeScript, and frameworks such as LangChain and LlamaIndex ship with\nsupport for Zep.\n\nZep stores documents in Collections, with the document text, embeddings, and\nmetadata all colocated. This enables hybrid semantic search over a collection,\nwith results filtered by JSONPath queries against document metadata. When\nusing Zep with LlamaIndex, LlamaIndex filters are translated for use by Zep.\n\nA document or document chunk is equivalent to a LlamaIndex TextNode or\nNodeWithEmbedding.\n\nCollections can be optionally set to automatically embed texts using a service\nsuch as OpenAI or locally using an embedding model of your choice. However,\nwhen using Zep with LlamaIndex, we rely on LlamaIndex\u2019s integrations with\nembedded services and libraries.", "mimetype": "text/plain", "start_char_idx": 554, "end_char_idx": 1575, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "29ee9275-29c9-404e-9c4d-9783a46be8aa": {"__data__": {"id_": "29ee9275-29c9-404e-9c4d-9783a46be8aa", "embedding": null, "metadata": {"Header_1": " Creating a ZepVectorStore and Document Collection", "filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed", "node_type": "4", "metadata": {"filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "hash": "6ba237ea991d4c238ba961f51b699d73bcb50bc13de505b99c8cac22ae6cc875", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc2064df-cb08-4b7a-9f88-9425dc8d1781", "node_type": "1", "metadata": {"Header_1": " Installing Zep and some important concepts", "filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "hash": "b59978b3f1edccca21d59614761c2712fcd93e1ce24e0e61fd78c98ef6f80896", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ecf5e8d2-eece-4ace-bc2f-850620a941db", "node_type": "1", "metadata": {"Header_1": " Creating and populating an Index"}, "hash": "ce266e5610efca79f5635ef892d232693f89656e9dae0d5c00b600e6a0886e57", "class_name": "RelatedNodeInfo"}}, "text": "Creating a ZepVectorStore and Document Collection\n\nYou will need to have [ installed Zep ](https://docs.getzep.com/) and have\nyour API URL and, optionally, authentication key handy.\n\n    \n    \n    from llama_index.vector_stores import ZepVectorStore\n    zep_api_url = \"http://localhost:8000\"\n    zep_api_key = \"&lt;optional_jwt_token&gt;\"\n    collection_name = \"babbage\" # The name of a new or existing collection\n    embedding_dimensions = 1536 # the dimensions of the embedding model you intend to use\n    vector_store = ZepVectorStore(\n      api_url=zep_api_url,\n      api_key=zep_api_key,\n      collection_name=collection_name,\n      embedding_dimensions=embedding_dimensions\n    )\n\nThe collection name is a unique identifier for your vector index and should\nonly contain alphanumeric characters. If the collection does not exist, Zep\nwill automatically create one for you.", "mimetype": "text/plain", "start_char_idx": 1580, "end_char_idx": 2457, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ecf5e8d2-eece-4ace-bc2f-850620a941db": {"__data__": {"id_": "ecf5e8d2-eece-4ace-bc2f-850620a941db", "embedding": null, "metadata": {"Header_1": " Creating and populating an Index", "filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed", "node_type": "4", "metadata": {"filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "hash": "6ba237ea991d4c238ba961f51b699d73bcb50bc13de505b99c8cac22ae6cc875", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "29ee9275-29c9-404e-9c4d-9783a46be8aa", "node_type": "1", "metadata": {"Header_1": " Creating a ZepVectorStore and Document Collection", "filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "hash": "49307f277d226ceb656cfe90dbeaa6ea31462ef0473dde402e63ca328d5ede73", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99f01298-7aac-4396-bcbc-df15fbd4b18d", "node_type": "1", "metadata": {"Header_1": " Hybrid search with metadata filters"}, "hash": "102745b22d900f19d9902fb69b4439acbeeb953875c7fbd3f9ed7d2ce8fbfa03", "class_name": "RelatedNodeInfo"}}, "text": "Creating and populating an Index\n\nBelow we\u2019ll use a common LlamaIndex pattern for loading content and adding it\nto an index. After loading the text data, we create a StorageContext backed by\nthe ZepVectorStore.\n\nWe then create the index using our loaded documents and Zep-backed storage\ncontext.\n\n    \n    \n    from llama_index import VectorStoreIndex, SimpleDirectoryReader\n    from llama_index.storage.storage_context import StorageContext\n    \n    documents = SimpleDirectoryReader(\"./babbages_calculating_engine/\").load_data()\n    \n    storage_context = StorageContext.from_defaults(vector_store=vector_store)\n    index = VectorStoreIndex.from_documents(documents, storage_context=storage_context)\n    \n    query = \"the sun and stars\"\n    \n    query_engine = index.as_query_engine()\n    response = query_engine.query(query)\n    \n    \n    print(str(response))\n    \n    \n    But one of the most signal examples of this kind, of which we are aware, is related by Mr Baily. The catalogue of stars published by the Astronomical Society was computed by two separate and independent persons, and was afterwards compared and examined with great care and attention by Mr Stratford. On examining this catalogue, and recalculating a portion of it, Mr Baily discovered an error in the case of the star\n\nFinally, we run a simple text query against the index and print the resulting\nnode\u2019s text.", "mimetype": "text/plain", "start_char_idx": 2462, "end_char_idx": 3847, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "99f01298-7aac-4396-bcbc-df15fbd4b18d": {"__data__": {"id_": "99f01298-7aac-4396-bcbc-df15fbd4b18d", "embedding": null, "metadata": {"Header_1": " Hybrid search with metadata filters", "filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed", "node_type": "4", "metadata": {"filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "hash": "6ba237ea991d4c238ba961f51b699d73bcb50bc13de505b99c8cac22ae6cc875", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ecf5e8d2-eece-4ace-bc2f-850620a941db", "node_type": "1", "metadata": {"Header_1": " Creating and populating an Index", "filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "hash": "a4d0160afe1d27ea8d830af60745466cbf524362533340851eed62ba041412d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d33eed7e-40f2-4903-96a8-aaf1f329ef24", "node_type": "1", "metadata": {"Header_1": " Summing it up"}, "hash": "99c3a205052866728fadeb615b580613d42991a32e50d850ddd2b082b0338c0c", "class_name": "RelatedNodeInfo"}}, "text": "Hybrid search with metadata filters\n\nAs mentioned above, Zep also supports associating rich metadata with\ndocuments. This metadata can be an arbitrarily deep JSON structure. When\nworking with LlamaIndex, we currently support filtering on top-level keys in\nthe map.\n\nThe code below demonstrates running a vector search over an index and\nfiltering on metadata using LlamaIndex\u2019s MetadataFilters. We print the result\nand the normalized cosine similarity for the matching result.\n\n    \n    \n    from llama_index.schema import TextNode\n    from llama_index.vector_stores.types import ExactMatchFilter, MetadataFilters\n    \n    nodes = [\n       TextNode(\n           text=\"Not aware that tables of these squares existed, Bouvard, who calculated the tides for Laplace, underwent the labour of calculating the square of each individual sine in every case in which it occurred.\",\n           metadata={\n               \"topic\": \"math\",\n               \"entities\": \"laplace\",\n           },\n       ),\n       TextNode(\n           text=\"Within the limits of the lunar orbit there are not less than one thousand stars, which are so situated as to be in the moon's path, and therefore to exhibit, at some period or other, those desirable occultations.\",\n           metadata={\n               \"topic\": \"astronomy\",\n               \"entities\": \"moon\",\n           },\n       ),\n    ]\n    \n    \n    storage_context = StorageContext.from_defaults(vector_store=vector_store)\n    index = VectorStoreIndex(nodes, storage_context=storage_context)\n    \n    \n    filters = MetadataFilters(filters=[ExactMatchFilter(key=\"topic\", value=\"astronomy\")])\n    \n    \n    retriever = index.as_retriever(filters=filters)\n    result = retriever.retrieve(\"What is the structure of our galaxy?\")\n    \n    \n    for r in result:\n       print(\"\\n\", r.node.text, r.score)\n    \n    \n    Within the limits of the lunar orbit there are not less than one thousand stars, which are so situated as to be in the moon's path, and therefore to exhibit, at some period or other, those desirable occultations.  0.6456785674", "mimetype": "text/plain", "start_char_idx": 3852, "end_char_idx": 5914, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d33eed7e-40f2-4903-96a8-aaf1f329ef24": {"__data__": {"id_": "d33eed7e-40f2-4903-96a8-aaf1f329ef24", "embedding": null, "metadata": {"Header_1": " Summing it up", "filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed", "node_type": "4", "metadata": {"filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "hash": "6ba237ea991d4c238ba961f51b699d73bcb50bc13de505b99c8cac22ae6cc875", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99f01298-7aac-4396-bcbc-df15fbd4b18d", "node_type": "1", "metadata": {"Header_1": " Hybrid search with metadata filters", "filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "hash": "0342a61ae48701fe78d6f066a67cb9cf319d85c5158f05ab98d27a5e31551fc2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cdbf1d3c-b5cb-4e9d-8b57-a87a9de6af9d", "node_type": "1", "metadata": {"Header_1": " Next Steps"}, "hash": "f12335a1636c671f0403f1adc95564eb41d91d20ff19f39239cb2ce6f4bfa6b6", "class_name": "RelatedNodeInfo"}}, "text": "Summing it up\n\nZep offers a single API for vector search over documents and chat history,\nallowing developers to populate prompts with both forms of long-term memory.\nLlamaIndex makes it extremely easy to populate Zep with content from a broad\nset of documents and data sources and query these sources when building\nprompts and other functionality for LLM apps.", "mimetype": "text/plain", "start_char_idx": 5919, "end_char_idx": 6280, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cdbf1d3c-b5cb-4e9d-8b57-a87a9de6af9d": {"__data__": {"id_": "cdbf1d3c-b5cb-4e9d-8b57-a87a9de6af9d", "embedding": null, "metadata": {"Header_1": " Next Steps", "filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed", "node_type": "4", "metadata": {"filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "hash": "6ba237ea991d4c238ba961f51b699d73bcb50bc13de505b99c8cac22ae6cc875", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d33eed7e-40f2-4903-96a8-aaf1f329ef24", "node_type": "1", "metadata": {"Header_1": " Summing it up", "filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}, "hash": "8a0f4a2b92960ea2dcb3d0146d152271eb0e045d670e8102bab7e4a4d675d5d0", "class_name": "RelatedNodeInfo"}}, "text": "Next Steps\n\n  * Read the [ Zep Quick Start Guide ](https://docs.getzep.com/deployment/quickstart/)\n  * [ Zep and LlamaIndex Walkthrough Notebook ](https://github.com/jerryjliu/llama_index/tree/main/docs/examples/vector_stores/ZepIndexDemo.ipynb)\n  * [ Getting Started with LllamaIndex ](https://gpt-index.readthedocs.io/en/stable/index.html)", "mimetype": "text/plain", "start_char_idx": 6285, "end_char_idx": 6626, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"c79e326f-8ffc-4494-a0dd-4ac0e1b850d5": {"doc_hash": "7eb716196f39fc0c6b44b6a80f20f0d248523a1e2851f39940a4eee369902b15", "ref_doc_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed"}, "bc2064df-cb08-4b7a-9f88-9425dc8d1781": {"doc_hash": "b59978b3f1edccca21d59614761c2712fcd93e1ce24e0e61fd78c98ef6f80896", "ref_doc_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed"}, "29ee9275-29c9-404e-9c4d-9783a46be8aa": {"doc_hash": "49307f277d226ceb656cfe90dbeaa6ea31462ef0473dde402e63ca328d5ede73", "ref_doc_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed"}, "ecf5e8d2-eece-4ace-bc2f-850620a941db": {"doc_hash": "a4d0160afe1d27ea8d830af60745466cbf524362533340851eed62ba041412d2", "ref_doc_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed"}, "99f01298-7aac-4396-bcbc-df15fbd4b18d": {"doc_hash": "0342a61ae48701fe78d6f066a67cb9cf319d85c5158f05ab98d27a5e31551fc2", "ref_doc_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed"}, "d33eed7e-40f2-4903-96a8-aaf1f329ef24": {"doc_hash": "8a0f4a2b92960ea2dcb3d0146d152271eb0e045d670e8102bab7e4a4d675d5d0", "ref_doc_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed"}, "cdbf1d3c-b5cb-4e9d-8b57-a87a9de6af9d": {"doc_hash": "d2edbcab3fda2c890cccd43b17ecbd0bd125dcdaf3e750e6c3a161d3e091c191", "ref_doc_id": "95683f9a-fa70-4cee-958c-ccc6b6dab7ed"}}, "docstore/ref_doc_info": {"95683f9a-fa70-4cee-958c-ccc6b6dab7ed": {"node_ids": ["c79e326f-8ffc-4494-a0dd-4ac0e1b850d5", "bc2064df-cb08-4b7a-9f88-9425dc8d1781", "29ee9275-29c9-404e-9c4d-9783a46be8aa", "ecf5e8d2-eece-4ace-bc2f-850620a941db", "99f01298-7aac-4396-bcbc-df15fbd4b18d", "d33eed7e-40f2-4903-96a8-aaf1f329ef24", "cdbf1d3c-b5cb-4e9d-8b57-a87a9de6af9d"], "metadata": {"filename": "zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc.md", "extension": ".md", "title": "Zep and LlamaIndex: A Vector Store Walkthrough", "date": "Aug 11, 2023", "url": "https://www.llamaindex.ai/blog/zep-and-llamaindex-a-vector-store-walkthrough-564edb8c22dc"}}}}